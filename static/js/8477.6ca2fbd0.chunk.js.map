{"version":3,"file":"static/js/8477.6ca2fbd0.chunk.js","mappings":"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","sources":["components/components/CustomizedAvatarWithBadge/index.js","components/components/CustomizedComment/CommenSend.js","components/components/CustomizedComment/index.js","components/components/CustomizedEditor/index.js","components/extended/Avatar.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","pages/kanban/types.js","components/components/CustomizedDrawer/index.js","pages/kanban/TaskAdd.js","pages/kanban/Task.js","pages/kanban/Column.js","components/kanban/KanbanListToolbar.js","__mocks__/todos.js","pages/kanban/index.js","utils/formatTime.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n\n//mui\nimport { styled } from '@mui/material/styles';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  '& .MuiBadge-badge': {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: 'ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}));\n\n\nconst CustomizedAvatarWithBadge = ({ color, outlined, size, avatar, sx = {}, ...others }) => {\n  // const theme = useTheme();\n  // const colorSX = color && !outlined && { bgcolor: `${color}.main`, color: theme.palette.text.default };\n  // const outlinedSX = outlined && {\n  //   bgcolor: color ? `${color}.main` : 'primary.main',\n  //   color: theme.palette.text.main,\n  //   border: '1 solid',\n  //   borderColor: color ? `${color}.main` : 'primary.main',\n  // }\n\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <StyledBadge\n        overlap=\"circular\"\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        variant=\"dot\"\n      >\n        <Avatar\n          alt=\"\"\n          src={avatar}\n          sx={{\n            // ...theme.typography.commonAvatar,\n            // ...theme.typography.mediumAvatar,\n            transition: 'all .2s ease-in-out',\n            // ...colorSX,\n            // ...outlinedSX,\n            // ...sizeSX,\n            ...sx\n          }}\n          {...others} />\n      </StyledBadge>\n    </Stack>\n  );\n}\n\nCustomizedAvatarWithBadge.propTypes = {\n  color: PropTypes.string,\n  outline: PropTypes.bool,\n  size: PropTypes.string,\n  sx: PropTypes.object,\n  avartar: PropTypes.string.isRequired,\n}\n\nexport default CustomizedAvatarWithBadge;","import {  Button, Stack } from '@mui/material'\nimport CustomizedEditor from 'components/components/CustomizedEditor'\nimport SubCard from 'components/cards/SubCard'\nimport React from 'react'\nimport CustomizedAvatarWithBadge from '../CustomizedAvatarWithBadge';\nexport default function CustomizedCommentSend({ author = {}, sx, ...others }) {\n    return (\n        <SubCard sx={{ border: 0, p: 1 }}>\n            <Stack spacing={3}>\n                <Stack direction='row' spacing={3} alignItems={'center'}>\n                    {/* <Avatar src={author?.avatarUrl} sx={{ width: 60, height: 60 }} /> */}\n                    <CustomizedAvatarWithBadge src={author?.avatarUrl} sx={{ width: 60, height: 60 }} />\n                    <CustomizedEditor content=\"Add a comment\" />\n                </Stack>\n\n                {/* <Box sx={{ gridRow: '1', gridColumn: 'span 2', columnGap: 5 }}>\n                        <IconButton aria-label=\"delete\">\n                            <PhotoIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\">\n                            <AttachFile />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\">\n                            <SentimentSatisfiedAltIcon />\n                        </IconButton>\n                    </Box> */}\n                <Stack direction='row' spacing={3} justifyContent={'flex-end'}>\n                    <Button variant=\"contained\" size='large' >\n                        Submit\n                    </Button>\n                 </Stack>\n            </Stack>\n        </SubCard>\n    )\n}\n","// react\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// mui\nimport Box from '@mui/material/Box';\nimport { Avatar, Typography } from '@mui/material';\n\n// third-party\n\n// project\nimport { fDate } from 'utils/formatTime';\n\nconst CustomizedComment = ({ author, createdAt, star, comment, sx, ...others }) => {\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: { xs: 'column', md: 'row' },\n                alignItems: 'center',\n                bgcolor: 'background.paper',\n                overflow: 'hidden',\n                // borderRadius: '12px',\n                // boxShadow: 1,\n                fontWeight: 'bold',\n                ...sx\n            }}\n            {...others}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: { xs: 'center', md: 'center' },\n                    m: 3,\n                    minWidth: { md: 100 },\n                }}\n            >\n                <Box component=\"span\" sx={{ fontSize: 16, mt: 1 }}>\n                    <Avatar alt={author.name} src={author.avatarUrl} sx={{ width: 48, height: 48 }} />\n                </Box>\n                <Box component=\"span\" sx={{ fontSize: 16, mt: 1 }}>\n                    {author.name}\n                </Box>\n                <Box component=\"span\" sx={{ fontSize: 12, mt: 1 }}>\n                    {fDate(createdAt)}\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start',\n                    m: 3,\n                    // minWidth: { md: 350 },\n                }}\n            >\n                <Box component=\"span\" sx={{ fontSize: 22 }}>\n                    <Typography variant='body1'>{comment}</Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nCustomizedComment.propTypes = {\n    author: PropTypes.object.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    star: PropTypes.number,\n    comment: PropTypes.string.isRequired,\n    sx: PropTypes.object\n}\n\nexport default CustomizedComment;","\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// https://jpuri.github.io/react-draft-wysiwyg/#/docs?_k=jjqinp\n\nconst CustomizedEditor = (props) => {\n  const { getEditorContent, initialContent, toolbarHidden, toolbarFocus } = props;\n  const contentBlock = htmlToDraft(initialContent || '<p>Please enter <strong>something</strong></p>');\n  let initialEditorState;\n  if (contentBlock) {\n    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n    initialEditorState = EditorState.createWithContent(contentState);\n  }\n  const [editorState, setEditorState] = useState(initialEditorState)\n  // const [content, setContent] = useState(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n    getEditorContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  };\n\n  return (\n    <Editor\n\n      // toolbarHidden\n      // toolbarOnFocus\n      // initialEditorState={editorState}\n      editorState={editorState}\n      wrapperClassName=\"wrapper-class\"\n      editorClassName=\"editor-class\"\n      toolbarClassName=\"toolbar-class\"\n      onEditorStateChange={onEditorStateChange}\n    // onContentStateChange={onContentStateChange}\n    // toolbar={{\n    //   inline: { inDropdown: true },\n    //   list: { inDropdown: true },\n    //   textAlign: { inDropdown: true },\n    //   link: { inDropdown: true },\n    //   history: { inDropdown: true },\n    // }}\n    />\n\n    // how to dispaly html content in react\n    // {Parser().parse(draftToHtml(convertToRaw(editorState.getCurrentContent())))}\n  )\n}\n\nCustomizedEditor.propTypes = {\n  initialContent: PropTypes.string,\n  getEditorContent: PropTypes.func,\n}\n\nexport default CustomizedEditor;","import PropTypes from 'prop-types';\n\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport MuiAvatar from '@mui/material/Avatar';\n\n// ------------------------------------------------------------------------------\n\nconst Avatar = ({ color, outline, size, sx, ...others }) => {\n    const theme = useTheme();\n\n    const colorSX = color && !outline && {\n        color: theme.palette.background.paper,\n        bgcolor: `${color}.main`\n    };\n\n    const outlineSX = outline && {\n        color: color ? `${color}.main` : `primary.main`,\n        bgcolor: theme.palette.background.paper,\n        border: '2px solid',\n        borderColor: color ? `${color}.main` : `primary.main`\n    };\n    let sizeSX = {};\n    switch (size) {\n        case 'badge':\n            sizeSX = {\n                width: theme.spacing(3.5),\n                height: theme.spacing(3.5)\n            };\n            break;\n        case 'xs':\n            sizeSX = {\n                width: theme.spacing(4.25),\n                height: theme.spacing(4.25)\n            };\n            break;\n        case 'sm':\n            sizeSX = {\n                width: theme.spacing(5),\n                height: theme.spacing(5)\n            };\n            break;\n        case 'lg':\n            sizeSX = {\n                width: theme.spacing(9),\n                height: theme.spacing(9)\n            };\n            break;\n        case 'xl':\n            sizeSX = {\n                width: theme.spacing(10.25),\n                height: theme.spacing(10.25)\n            };\n            break;\n        case 'md':\n            sizeSX = {\n                width: theme.spacing(7.5),\n                height: theme.spacing(7.5)\n            };\n            break;\n        default:\n            sizeSX = {};\n    }\n\n    return <MuiAvatar\n        sx={{\n            ...theme.typography.commonAvatar,\n            ...theme.typography.mediumAvatar,\n            transition: 'all .2s ease-in-out',\n            ...colorSX,\n            ...outlineSX,\n            ...sizeSX,\n            ...sx\n        }}\n        {...others} />;\n};\n\nAvatar.propTypes = {\n    className: PropTypes.string,\n    color: PropTypes.string,\n    outline: PropTypes.bool,\n    size: PropTypes.string,\n    sx: PropTypes.object\n};\n\nexport default Avatar;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n    const location = useLocation();\n    const { pathname } = location;\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n    children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\nimport { IconChevronRight } from '@tabler/icons';\n\nimport NaviScrollToTop from './NaviScrollToTop';\nimport Breadcrumbs from 'components/components/CustomizedBread'\nimport navigation from 'config/menuItems'\n\nconst PageContainer = (props) => {\n\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          px: 1,\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  )\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n    ),\n    PropTypes.func,\n    PropTypes.object,\n  ]),\n}\nexport default PageContainer; ","export const ItemTypes = {\n    CARD: \"card\",\n};\n","import * as React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport PropTypes from 'prop-types'\n\nconst CustomizedDrawer = ({ anchor, open, toggleDrawer, sx, children }) => {\n  return (\n    <React.Fragment >\n      <Drawer\n        anchor={anchor}\n        open={open}\n        onClose={toggleDrawer}\n        sx={{\n          // bgcolor: theme.palette.background.default,\n          ...sx\n        }}\n      >\n        {children}\n      </Drawer>\n    </React.Fragment >\n  );\n}\n\nCustomizedDrawer.propType = {\n  anchor: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  sx: PropTypes.object,\n  children: PropTypes.node.isRequired\n}\n\nexport default CustomizedDrawer;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { Avatar, ButtonGroup, Checkbox, Divider, FormControlLabel, IconButton, Stack, TextField, useTheme } from '@mui/material';\nimport CustomizedDrawer from 'components/components/CustomizedDrawer';\nimport CustomizedComment from 'components/components/CustomizedComment';\nimport CustomizedCommentSend from 'components/components/CustomizedComment/CommenSend';\nimport CustomizedEditor from 'components/components/CustomizedEditor';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\n\n\nimport dayjs from 'dayjs';\nimport { Delete, FiberSmartRecord, GroupAdd, HighlightOff, PlaylistAdd, PostAdd } from '@mui/icons-material';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n// function a11yProps(index) {\n//     return {\n//         id: `simple-tab-${index}`,\n//         'aria-controls': `simple-tabpanel-${index}`,\n//     };\n// }\n\n\nconst TaskAdd = (props) => {\n    const theme = useTheme();\n    const { task, open, toggleDrawer } = props;\n    const [due, setDue] = React.useState(dayjs('2014-08-18T21:11:54'));\n\n    const handleDueChange = (newValue) => {\n        setDue(newValue);\n    };\n    const handleClick = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n    };\n    return (\n        <React.Fragment>\n            <CustomizedDrawer\n                anchor='right'\n                open={open}\n                sx={{ zIndex: theme.zIndex.drawer + 2 }}\n            >\n                <Box sx={{\n                    maxWidth: 600,\n                    p: 2,\n                    bgcolor: theme.palette.background.default,\n                }}\n                    onClick={handleClick}\n                >\n                    <Box sx={{ display: 'flex', px: 2, py: 1 }}>\n                        <FormControlLabel\n                            control={<Checkbox />} label=\"Mark Complete\"\n                            sx={{ flex: 1 }}\n                        />\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            // onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <Delete />\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={toggleDrawer}\n                            color=\"inherit\"\n                        >\n                            <HighlightOff />\n                        </IconButton>\n                    </Box>\n                    <Divider />\n\n                    {/* <Typography variant=\"h3\" component=\"div\" sx={{ flexGrow: 1, color: theme.palette.common.white }}> */}\n\n                    {/* </Typography> */}\n\n                    {/* <IconButton\n                                size=\"large\"\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                // onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <Visibility />\n                            </IconButton> */}\n\n                    <TextField\n                        id=\"standard-basic\"\n                        fullWidth\n                        // label=\"Standard\" \n                        size='large'\n                        variant=\"standard\"\n                        value={task.title}\n                        sx={{\n                            my: 3\n                        }}\n                    />\n\n\n                    <Stack spacing={3}>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Assignee</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <Stack direction={`row`} alignItems={`center`} >\n                                    <IconButton color=\"primary\" aria-label=\"assign to... \" component=\"label\"\n                                    >\n                                        <GroupAdd />\n                                    </IconButton>\n                                    <Box sx={{ mr: 3 }}>\n                                        <Avatar src={task.author.avatarUrl} />\n                                    </Box>\n                                    {task?.assignedTo?.map((usr, index) => (\n                                        <Avatar key={index} alt={usr.name} src={usr.avatarUrl} />\n                                    ))}\n                                </Stack>\n                            </Box>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Due date</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n\n                                <DateTimePicker\n                                    label=\"Date&Time picker\"\n                                    value={due}\n                                    onChange={handleDueChange}\n                                    renderInput={(params) => <TextField {...params} />}\n                                />\n                            </Box>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                {/* <Typography variant='h5'>Labels</Typography> */}\n                                <Typography variant='h5'>Prioritize</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                {/* <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\"\n                                        aria-owns={popoverOpen ? 'mouse-over-popover' : undefined}\n                                        aria-haspopup=\"true\"\n                                        onMouseEnter={handlePopoverOpen}\n                                        onMouseLeave={handlePopoverClose}\n                                    >\n                                        <Dehaze />\n                                    </IconButton>\n                                    <CustomizedPopover open={popoverOpen} anchorEl={anchorEl} handlePopoverClose={handlePopoverClose} items={['Design', 'Code', 'Test', 'Deploy']} /> */}\n                                <ButtonGroup size=\"small\" aria-label=\"small button group\">\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.success.dark }}>\n                                        Low\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.warning.dark }}>\n                                        Medium\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.error.dark }}>\n                                        High\n                                    </Button>\n                                </ButtonGroup>\n                            </Box>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Attachments</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <IconButton color=\"primary\" aria-label=\"upload file\" component=\"label\"\n                                >\n                                    <PostAdd />\n                                </IconButton>\n                            </Box>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Description</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <CustomizedEditor content={`write description`} />\n                            </Box>\n                        </Box>\n                        <Button variant=\"contained\" endIcon={<PlaylistAdd />}>\n                            Add Task\n                        </Button>\n                    </Stack>\n\n                    <Divider sx={{ mt: 3 }} textAlign=\"left\">Comments</Divider>\n\n                    {/* <Typography variant='h4' sx={{ mt: 5 }}>Comments</Typography> */}\n                    <CustomizedCommentSend author={task.author} />\n                    {task.comments.map((item, index) => (\n                        <CustomizedComment key={index} {...item} />\n                    ))}\n\n                </Box>\n            </CustomizedDrawer>\n        </React.Fragment>\n    );\n}\n\n\nexport default TaskAdd;","import React from \"react\";\n\n// @mui\nimport { AvatarGroup, Avatar, Box, Chip, Typography   } from \"@mui/material\";\n\n// third-party\nimport { useDrag } from \"react-dnd\";\n\n// project\nimport SubCard from \"components/cards/SubCard\";\nimport { ItemTypes } from './types';\nimport TaskAdd from \"./TaskAdd\";\n\nconst Task = ({ task }) => {\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.CARD,\n        item: { ...task },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const opacity = isDragging ? 0.5 : 1;\n    // const backgroundColor = \"white\";\n    // const border = \"1px solid black\";\n\n    const [open, setOpen] = React.useState(false);\n    const handleTaskDrawerOpen = (event) => {\n        // console.log(event.type);\n        // console.log(event);\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen(!open);\n    };\n\n\n    return (\n        <SubCard sx={{ my: 2 }}>\n            <Box ref={drag} sx={{ opacity }} onClick={handleTaskDrawerOpen}>\n                <Typography variant=\"body1\" gutterBottom  >{task.title}</Typography>\n                {task?.labels?.map((item, index) => (\n                    <Chip key={index} label={item} size=\"small\" color='info' sx={{ mr: 1, borderRadius: 2 }} />\n                ))}\n                <Box sx={{ display: 'flex', justifyContent: 'flex-start', flexWrap: 'nowrap', mt: 2 }} >\n                    <AvatarGroup max={6} >\n                        <Avatar src={task?.author?.avatarUrl} sx={{ mr: 3 }} />\n                        {task?.assignedTo?.map((usr, index) => (\n                            <Avatar key={index} alt={usr?.name} src={usr?.avatarUrl} />\n                        ))}\n                    </AvatarGroup>\n                    {/* {task.checklists.length > 0 ? <IconListCheck /> : ''}\n                    {task.comments.length > 0 ? <IconMessage /> : ''} */}\n                    <TaskAdd task={task} open={open} toggleDrawer={handleTaskDrawerOpen} />\n                </Box>\n            </Box>\n        </SubCard>\n    );\n};\n\nexport default Task;\n","import React, { useRef } from 'react';\n// @mui\nimport { Box, Popover, useTheme } from \"@mui/material\";\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport { Add } from '@mui/icons-material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport MenuItem from '@mui/material/MenuItem';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\n\n// third-party\nimport { useDrop } from \"react-dnd\";\n\n// project\nimport { ItemTypes } from './types';\nimport Task from \"./Task\";\nimport Avatar from 'components/extended/Avatar';\n\n// assets\nimport { faker } from '@faker-js/faker';\nimport { sample, sampleSize } from 'lodash';\n\nconst NEW_TASK = {\n    id: faker.datatype.uuid(),\n    title: faker.lorem.paragraph(),\n    description: faker.lorem.paragraph(),\n    author: {\n        name: faker.internet.userName(),\n        avatarUrl: faker.image.avatar(),\n    },\n    assignedTo: [...Array(Math.round(Math.random() * 10) + 1)].map((_, index) => (\n        {\n            name: faker.internet.userName(),\n            avatarUrl: faker.image.avatar(),\n        }\n    )),\n    Attachments: [...Array(Math.round(Math.random() * 10) + 1)].map((_, index) => (\n        faker.image.image()\n    )),\n    due: faker.date.future(),\n    labels:\n        // [...Array(Math.round(Math.random())+1)].map((_, index) => ( \n        sampleSize(['Design', 'Code', 'Test'], 2)\n    //  ))\n    ,\n    checklists: [...Array(Math.round(Math.random()) + 1)].map((_, index) => (\n        {\n            user: faker.internet.userName(),\n            title: faker.lorem.paragraph(),\n            createdAt: faker.date.past()\n        }\n    )),\n    comments: [...Array(Math.round(Math.random()) + 1)].map((_, index) => (\n        {\n            id: faker.datatype.uuid(),\n            //   title: COMMMENTS[index + 1],\n            comment: faker.lorem.paragraph(),\n            author: {\n                name: faker.internet.userName(),\n                avatarUrl: faker.image.avatar(),\n            },\n            createdAt: String(faker.date.past())\n        }\n    )),\n    view: faker.datatype.number(),\n    comment: faker.datatype.number(),\n    share: faker.datatype.number(),\n    favorite: faker.datatype.number(),\n    createdAt: faker.date.past(),\n    status: sample(['todo', 'progress', 'done'])\n};\n\nconst options = [\n    'Remove',\n    // 'Rename',\n    'Clear',\n];\n\n// const ITEM_HEIGHT = 45;\n\nconst MyMenu = (props) => {\n    const { status, columns, editColumns, tasks, editTasks } = props;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = (option) => {\n        switch (option?.trim()?.toLowerCase()) {\n            case 'remove':\n                const newColumns = columns.filter(column => column !== status);\n                editColumns(newColumns);\n                break;\n\n            case 'rename':\n                // columns = columns.filter(column=> column !== status)\n                break;\n            case 'clear':\n                console.log(\"tasks>>>\", tasks)\n                const newTasks = tasks.filter(task => task.status !== status)\n                console.log(\"newTaskss>>>\", newTasks)\n                editTasks(newTasks);\n                break;\n            default:\n                break;\n        }\n        setAnchorEl(null);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    return (\n        <>\n            <IconButton\n                aria-label=\"more\"\n                aria-describedby={id}\n                onClick={handleOpen}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                {options.map((option) => (\n                    <MenuItem key={option} selected={option === 'remove'} onClick={() => handleMenuClose(option)}>\n                        {/* <Edit /> */}\n                        {option}\n                    </MenuItem>\n                ))}\n            </Popover>\n        </>\n    );\n}\n\nconst Column = (props) => {\n    const { status, tasks, onDrop, handleNewTask } = props;\n    const theme = useTheme()\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.CARD,\n        drop: (item) => onDrop(item, status),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n        }),\n    });\n\n    const tasksInColumn = tasks.filter((t) => t.status === status);\n    const newTask = useRef(null);\n\n    let color = '';\n    switch (status) {\n        case 'todo':\n            color = 'primary'\n            break;\n        case 'progress':\n            color = 'warning'\n            break;\n        case 'done':\n            color = 'success'\n            break;\n        default:\n            color = 'primary'\n            break;\n    }\n\n    const handleAddTask = () => {\n\n        handleNewTask({ ...NEW_TASK, title: newTask.current.value, status })\n        newTask.current.value = '';\n    }\n    return (\n        <Card sx={{ width: '100%', maxWidth: 336, minWidth: 200 }}>\n            <CardHeader\n                avatar={\n                    <Avatar color={color} sx={{ borderRadius: \"50%\", borderBottomRightRadius: 0 }}>\n                        {tasksInColumn.length}\n                    </Avatar>\n                }\n                action={\n                    <MyMenu {...props} />\n                }\n                title={\n                    <Typography color='text.primary' variant='h4' sx={{ color: theme.palette.text.primary }}>{status?.toUpperCase()}</Typography>}\n            />\n\n            <CardContent>\n                <Box\n                    ref={drop}\n                    sx={{\n                        flex: 1,\n                        width: 1,\n                        minHeight: 100,\n\n                        // margin: 1,\n                        // padding: 1,\n                        backgroundColor: isOver ? theme.palette.primary[100] : theme.palette.background.white,\n                    }}\n                >\n                    {tasksInColumn.map((task) => (\n                        <Task key={task.id} task={task} />\n                    ))}\n\n                </Box>\n            </CardContent>\n            <CardActions disableSpacing>\n                <FormControl sx={{ width: '100%' }} variant=\"outlined\">\n                    <OutlinedInput\n                        id=\"newtask\"\n                        inputRef={newTask}\n                        type='text'\n                        fullWidth\n                        placeholder=\"Please enter new task\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"visibility\"\n                                    onClick={handleAddTask}\n                                    // onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                    color='primary'\n                                >\n                                    <Add />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </CardActions>\n        </Card>\n    );\n};\n\n\nexport default Column;","import PropTypes from 'prop-types';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport { Toolbar, OutlinedInput, InputAdornment } from '@mui/material';\n// component\nimport { ManageSearch } from '@mui/icons-material';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n    boxShadow: theme.shadows[6],\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nKanbanListToolbar.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function KanbanListToolbar({ filterName, onFilterName }) {\n  return (\n    <StyledRoot\n\n    >\n      <StyledSearch\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search task...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <ManageSearch sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n          </InputAdornment>\n        }\n      />\n    </StyledRoot>\n  );\n}\n","import { faker } from '@faker-js/faker';\nimport { sample, sampleSize } from 'lodash';\n\nconst TODOS = [...Array(12)].map((_, index) => (\n    {\n        id: faker.datatype.uuid(),\n        title: faker.lorem.paragraph(),\n        description: faker.lorem.paragraph(),\n        author: {\n            name: faker.internet.userName(),\n            avatarUrl: require(`assets/images/users/user${index + 1}.png`),//faker.image.avatar(),\n        },\n        assignedTo: [...Array(Math.round(Math.random() * 12) + 1)].map((_, index) => (\n            {\n                name: faker.internet.userName(),\n                avatarUrl: require(`assets/images/users/user${index + 1}.png`)\n            }\n        )),\n        Attachments: [...Array(Math.round(Math.random() * 6) + 1)].map((_, index) => (\n            faker.image.image()\n        )),\n        due: faker.date.future(),\n        labels:\n            // [...Array(Math.round(Math.random())+1)].map((_, index) => ( \n            sampleSize(['Design', 'Code', 'Test'], 2)\n        //  ))\n        ,\n        checklists: [...Array(Math.round(Math.random() * 6) + 1)].map((_, index) => (\n            {\n                user: faker.internet.userName(),\n                title: faker.lorem.paragraph(),\n                createdAt: faker.date.past()\n            }\n        )),\n        comments: [...Array(Math.round(Math.random() * 20) + 1)].map((_, index) => (\n            {\n                id: faker.datatype.uuid(),\n                //   title: COMMMENTS[index + 1],\n                comment: faker.lorem.paragraph(),\n                author: {\n                    name: faker.internet.userName(),\n                    avatarUrl: require(`assets/images/users/user${index + 1}.png`)\n                },\n                createdAt: String(faker.date.past())\n            }\n        )),\n        view: faker.datatype.number(),\n        comment: faker.datatype.number(),\n        share: faker.datatype.number(),\n        favorite: faker.datatype.number(),\n        createdAt: faker.date.past(),\n        status: sample(['todo', 'progress', 'done'])\n    }\n));\nconst COLUMNS = [\n    'todo',\n    'progress',\n    'done'\n]\nexport {\n    TODOS,\n    COLUMNS\n};","import React, { useCallback, useMemo, useRef, useState } from \"react\";\n// third-pary\nimport { filter } from 'lodash';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n// @mui\nimport { Box, Button, Stack, TextField, Typography } from \"@mui/material\";\nimport { AddRoad } from \"@mui/icons-material\";\n\n// third-party\nimport { uniq, size } from 'lodash'\n// project\nimport Column from \"./Column\";\nimport KanbanListToolbar from \"components/kanban/KanbanListToolbar\";\n\n// assets\nimport { TODOS, COLUMNS } from \"__mocks__/todos\";\nimport MainCard from \"components/cards/MainCard\";\nimport PageContainer from \"layouts/PageContainer\";\n\nfunction applySortFilter(array, query) {\n    if (query?.trim().length > 0) {\n        return filter(array, (_item) => _item.title?.toLowerCase().indexOf(query?.toLowerCase()) !== -1);\n    }\n    return array;\n};\n\nconst Kanban = () => {\n    const [columns, setColumns] = useState(COLUMNS);\n    const [tasks, setTasks] = useState(TODOS);\n    const [filterName, setFilterName] = useState('');\n    const newColumn = useRef(null);\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const filteredItems = useMemo(() =>\n        applySortFilter(tasks, filterName)\n        , [tasks, filterName])\n\n    const handleDrop = useCallback((task, status) => {\n        const updatedTasks = tasks.map((t) => {\n            if (t.id === task.id) {\n                return { ...task, status };\n            }\n            return t;\n        });\n        setTasks(updatedTasks);\n        // eslint-disable-next-line\n    }, [])\n\n    const handleNewTask = useCallback((newTask) => {\n        if (newTask?.title?.trim().length > 0) {\n            setTasks([...tasks, newTask])\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const handleAddColumn = () => {\n        const newCol = newColumn.current.value.trim();\n        if (size(newCol) > 0) {\n            setColumns(preColumns => uniq([...preColumns, newCol]))\n        }\n        newColumn.current.value = '';\n    }\n\n    return (\n        <PageContainer>\n            <Stack\n                direction=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                sx={{\n                    mb: 2,\n                    // bgcolor: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.300',\n                    // borderRadius: `${theme.shape.borderRadius}px`\n                }}>\n                <Typography variant=\"h3\" gutterBottom>\n                    Kanban\n                </Typography>\n                <Stack direction={'row'}>\n                    <TextField\n                        id=\"standard-basic\"\n                        inputRef={newColumn}\n                        label=\"new column name\"\n                        variant=\"standard\"\n                        sx={{ width: 300 }} />\n                    <Button\n                        variant=\"contained\"\n                        startIcon={<AddRoad />}\n                        onClick={handleAddColumn}\n                    >\n                        New Column\n                    </Button>\n                </Stack>\n            </Stack>\n            <MainCard>\n                <KanbanListToolbar\n                    filterName={filterName}\n                    onFilterName={handleFilterByName}\n                />\n                <DndProvider backend={HTML5Backend}>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            justifyContent: 'space-between',\n                            alignItems: 'flex-start',\n                            alignContent: 'flex-start'\n                        }}\n                    >\n                        {columns?.map((column) => (\n                            <Column\n                                key={column}\n                                status={column}\n                                columns={columns}\n                                editColumns={setColumns}\n                                tasks={filteredItems}\n                                editTasks={setTasks}\n                                onDrop={handleDrop}\n                                handleNewTask={handleNewTask} />\n                        )\n                        )}\n                    </Box>\n                </DndProvider>\n            </MainCard>\n        </PageContainer>\n    );\n};\n\nexport default Kanban;\n\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\nexport function fShortDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n      addSuffix: true,\n    })\n    : '';\n}\n"],"names":["StyledBadge","styled","Badge","theme","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","width","height","borderRadius","animation","border","content","transform","opacity","outlined","size","avatar","sx","others","Stack","direction","spacing","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","transition","CustomizedCommentSend","author","SubCard","p","alignItems","avatarUrl","CustomizedEditor","justifyContent","Button","createdAt","comment","star","display","flexDirection","xs","md","bgcolor","overflow","fontWeight","m","minWidth","component","fontSize","mt","name","fDate","props","initialEditorState","getEditorContent","initialContent","contentBlock","toolbarHidden","toolbarFocus","htmlToDraft","contentState","ContentState","contentBlocks","EditorState","useState","editorState","setEditorState","Editor","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","outline","useTheme","colorSX","outlineSX","borderColor","sizeSX","typography","commonAvatar","mediumAvatar","NaviScrollToTop","children","pathname","useLocation","useEffect","window","scrollTo","behavior","propTypes","PropTypes","px","ItemTypes","CustomizedDrawer","anchor","open","toggleDrawer","Drawer","onClose","propType","task","React","dayjs","due","setDue","zIndex","drawer","maxWidth","default","onClick","event","preventDefault","stopPropagation","stopImmediatePropagation","py","FormControlLabel","control","Checkbox","label","flex","IconButton","Delete","HighlightOff","Divider","TextField","id","fullWidth","value","title","my","gridAutoColumns","gridRow","gridColumn","Typography","GroupAdd","mr","assignedTo","map","usr","index","DateTimePicker","onChange","newValue","renderInput","params","ButtonGroup","startIcon","FiberSmartRecord","success","dark","warning","error","PostAdd","endIcon","PlaylistAdd","textAlign","comments","item","CustomizedComment","useDrag","type","collect","monitor","isDragging","drag","setOpen","handleTaskDrawerOpen","key","ref","gutterBottom","labels","Chip","flexWrap","AvatarGroup","max","NEW_TASK","faker","description","Array","Math","round","random","_","Attachments","sampleSize","checklists","user","String","view","share","favorite","status","sample","options","MyMenu","columns","editColumns","tasks","editTasks","anchorEl","setAnchorEl","Boolean","undefined","currentTarget","MoreVert","Popover","option","MenuItem","selected","trim","toLowerCase","newColumns","filter","column","console","log","newTasks","handleMenuClose","onDrop","handleNewTask","useDrop","accept","drop","isOver","tasksInColumn","t","newTask","useRef","Card","CardHeader","borderBottomRightRadius","length","action","text","primary","toUpperCase","CardContent","minHeight","white","CardActions","disableSpacing","FormControl","OutlinedInput","inputRef","placeholder","endAdornment","InputAdornment","current","edge","Add","StyledRoot","Toolbar","padding","StyledSearch","transitions","create","easing","easeInOut","duration","shorter","shadows","borderWidth","alpha","grey","KanbanListToolbar","filterName","onFilterName","startAdornment","ManageSearch","TODOS","require","COLUMNS","setColumns","setTasks","setFilterName","newColumn","filteredItems","useMemo","array","query","_item","indexOf","handleDrop","useCallback","updatedTasks","PageContainer","mb","AddRoad","newCol","preColumns","uniq","MainCard","target","DndProvider","backend","HTML5Backend","alignContent","fShortDate","date","newFormat","fm","format","Date"],"sourceRoot":""}