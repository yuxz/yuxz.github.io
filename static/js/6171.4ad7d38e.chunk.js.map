{"version":3,"file":"static/js/6171.4ad7d38e.chunk.js","mappings":"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","sources":["pages/blog/BlogCreate.js"],"sourcesContent":["// https://blog.logrocket.com/build-rich-text-editors-react-draft-js-react-draft-wysiwyg/\n\nimport React from 'react'\nimport { Drafts, SendOutlined } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Typography,\n  useTheme\n} from '@mui/material';\n\nimport Dropzone from 'react-dropzone'\n// import './MailCompose.css'\n// project\nimport useScriptRef from 'hooks/useScriptRef';\n// assets\n// import { images } from '__mocks__/images'\n\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport CustomizedEditor from 'components/components/CustomizedEditor';\nimport SubCard from 'components/cards/SubCard';\nimport { useNavigate } from 'react-router-dom';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeading from 'layouts/PageHeading';\n\nexport default function BlogCreate() {\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n\n\n  return (\n    <PageContainer >\n      <PageHeading title=\"New Post\" back />\n      <Box sx={{ display: 'flex' }}>\n        <Formik\n          initialValues={{\n            title: ' ',\n            description: ' ',\n\n            submit: null\n          }}\n          validationSchema={Yup.object().shape({\n            to: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            description: Yup.string().max(255).required('Subject is required')\n          })}\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              if (scriptedRef.current) {\n                setStatus({ success: true });\n                setSubmitting(false);\n              }\n            } catch (err) {\n              console.error(err);\n              if (scriptedRef.current) {\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            }\n          }}\n        >\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n            <form noValidate onSubmit={handleSubmit} >\n              <Box\n                sx={{\n                  // width: 1000,\n                  display: \"grid\",\n                  gridAutoFlow: \"row\",\n                  gridTemplateColumns: \"repeat(5, 1fr)\",\n                  gridTemplateRows: \"100px 200px 1fr 80px\",\n                  gap: 2,\n                  flexGrow: 1\n                }}\n              >\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"1 / 2\" }}>\n                  <Stack spacing={3}>\n                    <FormControl fullWidth error={Boolean(touched.title && errors.title)} sx={{ ...theme.typography.customInput }}>\n                      <InputLabel htmlFor=\"outlined-adornment-title-blog\">Post Title</InputLabel>\n                      <OutlinedInput\n                        id=\"outlined-adornment-title-blog\"\n                        type=\"title\"\n                        value={values.title}\n                        name=\"title\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label=\"Post Title\"\n                        inputProps={{}}\n                      />\n                      {touched.title && errors.title && (\n                        <FormHelperText error id=\"standard-weight-helper-text-title-blog\">\n                          {errors.title}\n                        </FormHelperText>\n                      )}\n                    </FormControl>\n\n                    <FormControl\n                      fullWidth\n                      error={Boolean(touched.description && errors.description)}\n                      sx={{ ...theme.typography.customInput }}\n                    >\n                      <InputLabel htmlFor=\"outlined-adornment-description-blog\">Post Description</InputLabel>\n\n                      <OutlinedInput\n                        id=\"outlined-adornment-description-blog\"\n                        type='text'\n                        value={values.description}\n                        name=\"description\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        endAdornment={\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              aria-label=\"toggle description visibility\"\n                              // onClick={handleClickShowSubject}\n                              // onMouseDown={handleMouseDownSubject}\n                              edge=\"end\"\n                              size=\"large\"\n                            >\n                              {/* {showSubject ? <Visibility /> : <VisibilityOff />} */}\n                            </IconButton>\n                          </InputAdornment>\n                        }\n                        label=\"Post Description\"\n                        inputProps={{}}\n                      />\n                      {touched.description && errors.description && (\n                        <FormHelperText error id=\"standard-weight-helper-text-description-blog\">\n                          {errors.description}\n                        </FormHelperText>\n                      )}\n                    </FormControl>\n                  </Stack>\n                </Box>\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"2 / 3\" }}>\n                  <SubCard sx={{ my: 2 }}>\n                    <Typography variant='h4'>Cover</Typography>\n                    <Box\n                      sx={{\n                        height: 80,\n                        // border: 1,\n                        borderRadius: 2,\n                        bgolor: theme.palette.grey[200],\n                        p: 1,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        rowGap: 5\n                      }}\n                    >\n                      {/* <CustomizedImage url={''} sx={{ height: 120 }} /> */}\n\n                      <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\n                        {({ getRootProps, getInputProps }) => (\n                          <section >\n                            <div {...getRootProps()}>\n                              <input {...getInputProps()} />\n                              <Stack direction={`row`} alignItems={`center`} spacing={2}>\n                                <IconButton color=\"secondary\" aria-label=\"add an alarm\" sx={{ bgcolor: theme.palette.secondary.light }}>\n                                  <CloudUploadIcon />\n                                </IconButton>\n                                <Typography variant='h4'> Drag and drop or Click to upload</Typography>\n                                {/* <Typography variant='h5'> extension: PNG,JPG,SVG,GIF / size: maximun 800X400\n                                </Typography> */}\n                              </Stack>\n                            </div>\n                          </section>\n                        )}\n                      </Dropzone>\n                    </Box>\n                  </SubCard>\n                </Box>\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"3 / 4\" }}>\n\n                  <Typography variant='h4'>Content</Typography>\n                  <CustomizedEditor initialContent=\"Write something here\" />\n\n\n                </Box>\n                <Box sx={{ gridColumn: \"4/6\", gridRow: \"1 / 4\" }}>\n                  <SubCard >\n                    <Stack spacing={3}>\n                      <Typography variant='h4'>Seo</Typography>\n                      <FormControl fullWidth error={Boolean(touched.tags && errors.tags)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-tags-blog\"> Tags</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-tags-blog\"\n                          type=\"tags\"\n                          value={values.tags}\n                          name=\"tags\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"Tags\"\n                          inputProps={{}}\n                        />\n                        {touched.tags && errors.tags && (\n                          <FormHelperText error id=\"standard-weight-helper-text-tags-blog\">\n                            {errors.tags}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                      <FormControl fullWidth error={Boolean(touched.seotitle && errors.seotitle)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-seotitle-blog\"> SEO Title</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-seotitle-blog\"\n                          type=\"seotitle\"\n                          value={values.seotitle}\n                          name=\"seotitle\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"seo title\"\n                          inputProps={{}}\n                        />\n                        {touched.seotitle && errors.seotitle && (\n                          <FormHelperText error id=\"standard-weight-helper-text-seotitle-blog\">\n                            {errors.seotitle}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                      <FormControl fullWidth error={Boolean(touched.description && errors.description)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-seodescription-blog\" > SEO Description</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-seodescription-blog\"\n                          type=\"seodescription\"\n                          value={values.seodescription}\n                          name=\"seodescription\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"seo description\"\n                          inputProps={{ shrink: true }}\n                          InputLabelProps={{ shrink: true }}\n                        />\n                        {touched.description && errors.description && (\n                          <FormHelperText error id=\"standard-weight-helper-text-seodescription-blog\">\n                            {errors.description}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                    </Stack>\n                  </SubCard>\n                </Box>\n                <Box sx={{ gridColumn: \"1/6\", gridRow: \"4 / 5\" }}>\n                  <Box sx={{ mt: 2 }}>\n                    <Stack direction=\"row\" spacing={2} justifyContent='flex-end'>\n                      <Button variant=\"contained\" endIcon={<Drafts />}>\n                        Draft\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        endIcon={<SendOutlined />}\n                        onClick={() => navigate('/pages/blogs', { replace: true })}\n                      >\n                        Publish\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n\n              </Box>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </PageContainer>\n  )\n}\n"],"names":["BlogCreate","navigate","useNavigate","theme","useTheme","scriptedRef","useScriptRef","title","back","sx","display","initialValues","description","submit","validationSchema","Yup","shape","to","email","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","current","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","noValidate","gridAutoFlow","gridTemplateColumns","gridTemplateRows","gap","flexGrow","gridColumn","gridRow","spacing","fullWidth","Boolean","typography","customInput","htmlFor","id","type","value","name","onBlur","onChange","label","inputProps","endAdornment","position","edge","size","my","variant","height","borderRadius","bgolor","palette","grey","p","flexDirection","alignItems","justifyContent","rowGap","onDrop","acceptedFiles","log","getRootProps","getInputProps","direction","color","bgcolor","secondary","light","initialContent","tags","seotitle","seodescription","shrink","InputLabelProps","mt","endIcon","onClick","replace"],"sourceRoot":""}