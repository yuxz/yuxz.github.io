{"version":3,"file":"static/js/23.5ee59ba8.chunk.js","mappings":"8PAYMA,EAAa,SAACC,GAChB,IAAQC,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAC9B,OACI,UAAC,IAAG,CAACA,IAAE,QACHC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,MAAO,IACPC,OAAQ,GACRC,EAAG,EACHP,QAAAA,EACAQ,OAAOC,EAAAA,EAAAA,UAASV,EAAa,UAAWU,EAAAA,EAAAA,UAASV,EAAa,YAAaU,EAAAA,EAAAA,UAASV,EAAa,QAAU,WAAa,YACrHE,GACL,WACE,SAAC,IAAU,CAACS,QAAQ,YAAW,SAAEX,KACjC,SAAC,IAAU,CAACW,QAAQ,YAAW,SAC1BV,MAIjB,EAEMW,EAAY,SAACb,GACf,IAAMc,GAAQC,EAAAA,EAAAA,KACNd,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAC9B,OACI,UAAC,IAAG,CAACA,IAAE,QACHC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,MAAO,IACPC,OAAQ,GACRC,EAAG,EACHP,QAAAA,EACAQ,MAA8B,UAAvBI,EAAME,QAAQC,KAAmB,WAAa,YAClDd,GACL,WACE,SAAC,IAAU,CAACS,QAAQ,YAAW,SAAEX,KACjC,SAAC,IAAU,CAACW,QAAQ,YAAW,SAC1BV,MAIjB,EAmDA,UArCiB,WACb,IAAMY,GAAQC,EAAAA,EAAAA,KACdG,QAAQC,IAAIL,GACZ,IAAMM,EAAY,CAAC,UAAW,YAAa,OAAQ,UAAW,UAAW,SACzE,OACI,UAAC,IAAa,YACV,SAAC,IAAW,CAACC,MAAM,YACnB,SAAC,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGlB,eAAgB,aAAcC,WAAY,aAAckB,SAAU,OAAO,UAEpGC,EAAAA,EAAAA,MAAKX,EAAME,SAASU,KAAI,SAACC,GAAM,OAC3B,UAAC,IAAK,YACDhB,EAAAA,EAAAA,UAASS,EAAWO,KACjB,SAAC5B,EAAU,CAACE,YAAW,UAAK0B,GAAUzB,QAASY,EAAME,QAAQW,GAAc,KAAGxB,GAAI,CAAEK,OAAQ,OAE/FG,EAAAA,EAAAA,UAASS,EAAWO,KACjBF,EAAAA,EAAAA,MAAKX,EAAME,QAAQW,IAASD,KAAI,SAAChB,GAAK,MAAgB,iBAAVA,IAA4B,SAACX,EAAU,CAACE,YAAW,UAAKS,GAASR,QAASY,EAAME,QAAQW,GAAQjB,IAAU,MALlJiB,EAOJ,OAMpB,SAAC,IAAU,CAACf,QAAQ,KAAKgB,GAAI,EAAGC,GAAI,EAAE,SAAC,WACvC,SAAC,IAAG,CAAC1B,GAAI,CAAE2B,GAAI,GAAI,UAEf,UAAC,IAAK,CAACR,UAAU,MAAMC,QAAS,EAAGlB,eAAgB,aAAcC,WAAY,aAAckB,SAAU,OAAO,WACxG,SAACX,EAAS,CAACZ,YAAY,UAAUC,QAASY,EAAME,QAAQe,KAAKC,QAAStB,OAAK,KAC3E,SAACG,EAAS,CAACZ,YAAY,YAAYC,QAASY,EAAME,QAAQe,KAAKE,UAAWvB,OAAK,KAC/E,SAACG,EAAS,CAACZ,YAAY,WAAWC,QAASY,EAAME,QAAQe,KAAKG,kBAMlF,C","sources":["pages/utilities/Color.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// @mui\nimport { Box, Stack, Typography, useTheme } from '@mui/material';\n\n// third-party\nimport { keys, includes } from 'lodash';\n\n// project\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeading from '../../layouts/PageHeading';\n\nconst ColorBlock = (props) => {\n    const { paletteName, bgcolor, sx } = props\n    return (\n        <Box sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: 148,\n            height: 52,\n            p: 1,\n            bgcolor,\n            color: includes(paletteName, 'dark') || includes(paletteName, 'darker') || includes(paletteName, 'main') ? 'grey.100' : 'grey.700',\n            ...sx\n        }}>\n            <Typography variant='subtitle2'>{paletteName}</Typography>\n            <Typography variant='subtitle2'>\n                {bgcolor}\n            </Typography>\n        </Box>\n    )\n}\n\nconst TextBlock = (props) => {\n    const theme = useTheme()\n    const { paletteName, bgcolor, sx } = props\n    return (\n        <Box sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: 148,\n            height: 52,\n            p: 1,\n            bgcolor,\n            color: theme.palette.mode === 'light' ? 'grey.100' : 'grey.700',\n            ...sx\n        }}>\n            <Typography variant='subtitle2'>{paletteName}</Typography>\n            <Typography variant='subtitle2'>\n                {bgcolor}\n            </Typography>\n        </Box>\n    )\n}\n\nTextBlock.propTypes = {\n    bgcolor: PropTypes.string,\n    paletteName: PropTypes.string,\n    sx: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n        ),\n        PropTypes.func,\n        PropTypes.object,\n    ]),\n};\n\nconst UIColors = () => {\n    const theme = useTheme();\n    console.log(theme)\n    const mainColor = ['primary', 'secondary', 'info', 'success', 'warning', 'error']\n    return (\n        <PageContainer>\n            <PageHeading title=\"Colors\" />\n            <Stack direction='row' spacing={2} justifyContent={'flex-start'} alignItems={'flex-start'} flexWrap={'wrap'}>\n                {\n                    keys(theme.palette).map((colors) => (\n                        <Stack key={colors} >\n                            {includes(mainColor, colors) && (\n                                <ColorBlock paletteName={`${colors}`} bgcolor={theme.palette[colors]['main']} sx={{ height: 80 }} />)}\n\n                            {includes(mainColor, colors) &&\n                                keys(theme.palette[colors]).map((color) => (color !== 'contrastText' && <ColorBlock paletteName={`${color}`} bgcolor={theme.palette[colors][color]} />\n                                ))}\n                        </Stack>\n                    ))\n                }\n            </Stack>\n\n\n            <Typography variant='h4' mt={5} mb={2}> Text</Typography>\n            <Box sx={{ pl: 6 }}>\n\n                <Stack direction='row' spacing={2} justifyContent={'flex-start'} alignItems={'flex-start'} flexWrap={'wrap'}>\n                    <TextBlock paletteName=\"primary\" bgcolor={theme.palette.text.primary} color />\n                    <TextBlock paletteName=\"secondary\" bgcolor={theme.palette.text.secondary} color />\n                    <TextBlock paletteName=\"disabled\" bgcolor={theme.palette.text.disabled} />\n                </Stack>\n            </Box>\n\n        </PageContainer>\n    )\n};\n\nexport default UIColors;\n"],"names":["ColorBlock","props","paletteName","bgcolor","sx","display","justifyContent","alignItems","width","height","p","color","includes","variant","TextBlock","theme","useTheme","palette","mode","console","log","mainColor","title","direction","spacing","flexWrap","keys","map","colors","mt","mb","pl","text","primary","secondary","disabled"],"sourceRoot":""}