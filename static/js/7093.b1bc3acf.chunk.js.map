{"version":3,"file":"static/js/7093.b1bc3acf.chunk.js","mappings":"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","sources":["components/button/AnimateButton.js","hooks/useScriptRef.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeader.js","pages/customers/CustomerAdd.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ---------------------------------------------------------------------------------\n\nconst AnimateButton = forwardRef(\n  ({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n      case 'up':\n      case 'left':\n        offset1 = offset;\n        offset2 = 0;\n        break;\n      case 'right':\n      case 'down':\n      default:\n        offset1 = 0;\n        offset2 = offset;\n        break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n      case 'rotate':\n        return (\n          <motion.div\n            ref={ref}\n            animate={{ rotate: 360 }}\n            transition={{\n              repeat: Infinity,\n              repeatType: 'loop',\n              duration: 2,\n              repeatDelay: 0\n            }}\n          >\n            {children}\n          </motion.div>\n        );\n      case 'slide':\n        if (direction === 'up' || direction === 'down') {\n          return (\n            <motion.div\n              ref={ref}\n              animate={{ y: y !== undefined ? y : '' }}\n              onHoverEnd={() => cycleY()}\n              onHoverStart={() => cycleY()}\n            >\n              {children}\n            </motion.div>\n          );\n        }\n        return (\n          <motion.div\n            ref={ref}\n            animate={{ x: x !== undefined ? x : '' }}\n            onHoverEnd={() => cycleX()}\n            onHoverStart={() => cycleX()}\n          >\n            {children}\n          </motion.div>\n        );\n\n      case 'scale':\n      default:\n        if (typeof scale === 'number') {\n          scale = {\n            hover: scale,\n            tap: scale\n          };\n        }\n        return (\n          <motion.div\n            ref={ref}\n            whileHover={{ scale: scale?.hover }}\n            whileTap={{ scale: scale?.tap }}\n          >\n            {children}\n          </motion.div>\n        );\n    }\n  }\n);\n\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  offset: PropTypes.number,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\n\nexport default AnimateButton;\n","import { useEffect, useRef } from 'react';\n\n// --------------------------------------------------------------------------------\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n  const location = useLocation();\n  const { pathname } = location;\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }, [pathname]);\n\n  return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n  children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n// project\nimport NaviScrollToTop from './NaviScrollToTop';\n\nconst PageContainer = (props) => {\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          // minHeight: 'calc(100vh - 80px)',\n          mt: { xs: 0.5, sm: 2 },\n          px: { xs: 0.5, sm: 2 },\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])\n    ),\n    PropTypes.func,\n    PropTypes.object\n  ])\n};\nexport default PageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { AddTwoTone, ArrowBack } from '@mui/icons-material';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  IconButton,\n  Link,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PageHeader = (props) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { title, subtitle, breadcrumbs, back, control, action, ...rest } =\n    props;\n  return (\n    <Paper\n      variant=\"outlined\"\n      elevation={0}\n      sx={{\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n        // boxShadow:\n        //     theme.palette.mode === 'dark'\n        //         ? `0 1px 0   ${theme.palette.grey[200]}, 0px 2px 4px -3px rgba(0, 0, 0, 0.2), 0px 5px 12px -4px rgba(0, 0, 0, .1)`\n        //         : `0px 2px 4px -3px ${theme.palette.grey[300]}, 0px 4px 8px -5px  ${theme.palette.grey[200]}`\n      }}\n    >\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...rest}\n      >\n        <Grid item>\n          {breadcrumbs && (\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              {breadcrumbs.map((breadcrumb, index) => (\n                <Link\n                  key={index}\n                  underline=\"hover\"\n                  color=\"inherit\"\n                  pathname={breadcrumb.pathname}\n                >\n                  {breadcrumb.name}\n                </Link>\n              ))}\n            </Breadcrumbs>\n          )}\n          <Stack\n            direction=\"row\"\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n          >\n            {back && (\n              <Tooltip arrow placement=\"top\" title=\"Go back\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"Back\"\n                  component=\"label\"\n                  onClick={() => window.history.back()}\n                  sx={{ p: 2, mr: 2 }}\n                >\n                  <ArrowBack />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Stack spacing={1}>\n              <Typography\n                variant=\"h3\"\n                component=\"h3\"\n                gutterBottom\n                sx={{ fontWeight: 600 }}\n              >\n                {title}\n              </Typography>\n              {subtitle && (\n                <Typography variant=\"subtitle2\">{subtitle}</Typography>\n              )}\n            </Stack>\n          </Stack>\n        </Grid>\n        <Grid item>\n          {action}\n          {control && (\n            <Button\n              variant=\"contained\"\n              startIcon={<AddTwoTone fontSize=\"small\" />}\n              onClick={() => navigate(control.route)}\n            >\n              {control.label}\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  breadcrumbs: PropTypes.array,\n  back: PropTypes.bool,\n  control: PropTypes.object,\n  action: PropTypes.node\n};\n\nexport default PageHeader;\n","// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Typography,\n  Switch\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/button/AnimateButton';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeader from 'layouts/PageHeader';\nimport MainCard from 'components/cards/MainCard';\n\nconst CustomerAdd = () => {\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n  // const scriptedRef = useScriptRef();\n  // const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n  return (\n    <PageContainer>\n      <PageHeader title=\"Add Customer\" back />\n      <MainCard>\n        <Formik\n          initialValues={{\n            fullname: ' ',\n            email: 'themarscloud@gmail.com',\n            country: '',\n            state: '',\n            address: '',\n            zipcode: '',\n            phone: '',\n            public: false,\n            submit: null\n          }}\n          validationSchema={Yup.object().shape({\n            fullname: Yup.string().max(255).required('Full Name is required'),\n            email: Yup.string()\n              .email('Must be a valid email')\n              .max(255)\n              .required('Email is required'),\n            country: Yup.string().max(255).required('Country  is required'),\n            state: Yup.string().max(255).required('State/Region is required'),\n            address: Yup.string().max(255).required('Address  is required'),\n            zipcode: Yup.string().max(10)\n          })}\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              if (scriptedRef.current) {\n                setStatus({ success: true });\n                setSubmitting(false);\n              }\n            } catch (err) {\n              console.error(err);\n              if (scriptedRef.current) {\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            }\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <form noValidate onSubmit={handleSubmit}>\n              <Stack spacing={3}>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.fullname && errors.fullname)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-fullname-customer\">\n                    Full name\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-fullname-customer\"\n                    type=\"input\"\n                    value={values.fullname}\n                    name=\"fullname\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Full name\"\n                    inputProps={{}}\n                  />\n                  {touched.fullname && errors.fullname && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-fullname-customer\"\n                    >\n                      {errors.fullname}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.email && errors.email)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-email-login\">\n                    Email\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-email-login\"\n                    type=\"email\"\n                    value={values.email}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Email Address / Username\"\n                    inputProps={{}}\n                  />\n                  {touched.email && errors.email && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-email-login\"\n                    >\n                      {errors.email}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.country && errors.country)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-country-customer\">\n                    Country\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-country-customer\"\n                    type=\"input\"\n                    value={values.country}\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Country\"\n                    inputProps={{}}\n                  />\n                  {touched.country && errors.country && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-country-customer\"\n                    >\n                      {errors.country}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.state && errors.state)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-state-customer\">\n                    State/Region\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-state-customer\"\n                    type=\"input\"\n                    value={values.state}\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"State/Region\"\n                    inputProps={{}}\n                  />\n                  {touched.state && errors.state && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-state-customer\"\n                    >\n                      {errors.state}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.address && errors.address)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-address-customer\">\n                    Address\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-fullname-address\"\n                    type=\"input\"\n                    value={values.address}\n                    name=\"address\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Address1\"\n                    inputProps={{}}\n                  />\n                  {touched.address && errors.address && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-address-customer\"\n                    >\n                      {errors.address}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.zipcode && errors.zipcode)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-zipcode-customer\">\n                    Zip/Code\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-zipcode-customer\"\n                    type=\"input\"\n                    value={values.zipcode}\n                    name=\"zipcode\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Address2\"\n                    inputProps={{}}\n                  />\n                  {touched.zipcode && errors.zipcode && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-zipcode-customer\"\n                    >\n                      {errors.zipcode}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.phone && errors.phone)}\n                  sx={{ ...theme.typography.customInput }}\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-phone-customer\">\n                    Phone Number\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-phone-customer\"\n                    type=\"input\"\n                    value={values.phone}\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    label=\"Phone Number\"\n                    inputProps={{}}\n                  />\n                  {touched.phone && errors.phone && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-text-phone-customer\"\n                    >\n                      {errors.phone}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n\n                <Typography variant=\"h4\">Email Verified</Typography>\n                <Stack\n                  direction=\"row\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  spacing={1}\n                >\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"secondary\"\n                    sx={{ textDecoration: 'none', cursor: 'pointer' }}\n                  >\n                    Disabling this will automatically send the user a\n                    verification email{' '}\n                  </Typography>\n                  <Switch inputProps={{ 'aria-label': 'Switch demo' }} />\n                </Stack>\n                {/* <Typography variant=\"h4\" >\n                                Make Contact Info Public\n                            </Typography>\n                            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                                <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                    Means that anyone viewing your profile will be able to see your contacts details\n                                </Typography>\n                                <Switch inputProps={{ 'aria-label': 'Switch demo' }} defaultChecked />\n                            </Stack> */}\n\n                {errors.submit && (\n                  <Box sx={{ mt: 3 }}>\n                    <FormHelperText error>{errors.submit}</FormHelperText>\n                  </Box>\n                )}\n\n                <Box sx={{ mt: 2 }}>\n                  <AnimateButton>\n                    <Button\n                      disableElevation\n                      disabled={isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                      // color=\"secondary\"\n                    >\n                      Create\n                    </Button>\n                  </AnimateButton>\n                </Box>\n              </Stack>\n            </form>\n          )}\n        </Formik>\n      </MainCard>\n    </PageContainer>\n  );\n};\n\nexport default CustomerAdd;\n"],"names":["AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","scripted","useRef","useEffect","current","NaviScrollToTop","pathname","useLocation","window","scrollTo","top","left","behavior","propTypes","PropTypes","props","sx","others","Box","mt","xs","sm","px","theme","useTheme","navigate","useNavigate","title","subtitle","breadcrumbs","back","control","action","rest","variant","elevation","padding","spacing","marginBottom","container","justifyContent","alignItems","item","map","breadcrumb","index","underline","color","name","arrow","placement","component","onClick","history","p","mr","gutterBottom","fontWeight","startIcon","fontSize","route","label","scriptedRef","useScriptRef","initialValues","fullname","email","country","state","address","zipcode","phone","public","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","Boolean","typography","customInput","htmlFor","id","value","onBlur","onChange","inputProps","textDecoration","cursor","disableElevation","disabled","size"],"sourceRoot":""}