{"version":3,"file":"static/js/6171.a74905c5.chunk.js","mappings":"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","sources":["components/components/CustomizedEditor/index.js","hooks/useScriptRef.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeading.js","pages/blog/BlogCreate.js","../node_modules/@mui/icons-material/esm/Drafts.js","../node_modules/@mui/icons-material/esm/SendOutlined.js"],"sourcesContent":["\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// https://jpuri.github.io/react-draft-wysiwyg/#/docs?_k=jjqinp\n\nconst CustomizedEditor = (props) => {\n  const { getEditorContent, initialContent } = props;\n  const contentBlock = htmlToDraft(initialContent || '<p>Please enter <strong>something</strong></p>');\n  let initialEditorState;\n  if (contentBlock) {\n    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n    initialEditorState = EditorState.createWithContent(contentState);\n  }\n  const [editorState, setEditorState] = useState(initialEditorState)\n  // const [content, setContent] = useState(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n    getEditorContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  };\n\n  return (\n    <Editor\n\n      // toolbarHidden\n      // toolbarOnFocus\n      // initialEditorState={editorState}\n      editorState={editorState}\n      wrapperClassName=\"wrapper-class\"\n      editorClassName=\"editor-class\"\n      toolbarClassName=\"toolbar-class\"\n      onEditorStateChange={onEditorStateChange}\n    // onContentStateChange={onContentStateChange}\n    // toolbar={{\n    //   inline: { inDropdown: true },\n    //   list: { inDropdown: true },\n    //   textAlign: { inDropdown: true },\n    //   link: { inDropdown: true },\n    //   history: { inDropdown: true },\n    // }}\n    />\n\n    // how to dispaly html content in react\n    // {Parser().parse(draftToHtml(convertToRaw(editorState.getCurrentContent())))}\n  )\n}\n\nCustomizedEditor.propTypes = {\n  initialContent: PropTypes.string,\n  getEditorContent: PropTypes.func,\n}\n\nexport default CustomizedEditor;","import { useEffect, useRef } from 'react';\n\n// --------------------------------------------------------------------------------\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n    const location = useLocation();\n    const { pathname } = location;\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n    children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n\nimport NaviScrollToTop from './NaviScrollToTop';\n\nconst PageContainer = (props) => {\n\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          minHeight: 'calc(100vh - 80px)',\n          mt: 2,\n          px: 2,\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  )\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n    ),\n    PropTypes.func,\n    PropTypes.object,\n  ]),\n}\nexport default PageContainer; ","import React from 'react'\n\n// @mui\nimport { AddTwoTone, ArrowBack, ArrowBackTwoTone } from '@mui/icons-material'\nimport { Box, Breadcrumbs, Button, Grid, IconButton, Link, Stack, Tooltip, Typography, alpha, lighten } from '@mui/material'\nimport { useTheme } from '@emotion/react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function PageHeading(props) {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const { title, subtitle, breadcrumbs, back, control, action, ...rest } = props\n    return (\n        <Box\n            sx={{\n                padding: `${theme.spacing(4)}`,\n                // background:\n                //     theme.palette.mode === 'dark'\n                //         ? theme.palette.alpha.trueWhite[5]\n                //         : theme.palette.alpha.white[50],\n                marginBottom: `${theme.spacing(4)}`,\n                boxShadow:\n                    theme.palette.mode === 'dark'\n                        ? `0 1px 0   ${theme.palette.grey[200]}, 0px 2px 4px -3px rgba(0, 0, 0, 0.2), 0px 5px 12px -4px rgba(0, 0, 0, .1)`\n                        : `0px 2px 4px -3px ${theme.palette.grey[300]}, 0px 4px 8px -5px  ${theme.palette.grey[200]}`\n            }}>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                {...rest}\n            >\n                <Grid item>\n\n                    {breadcrumbs && <Breadcrumbs aria-label=\"breadcrumb\">\n                        {breadcrumbs.map((breadcrumb, index) => (<Link key={index} underline=\"hover\" color=\"inherit\" pathname={breadcrumb.pathname}>\n                            {breadcrumb.name}\n                        </Link>))}\n                    </Breadcrumbs>}\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\n                        {back &&\n                            <Tooltip arrow placement=\"top\" title=\"Go back\">\n                                <IconButton color=\"primary\" aria-label=\"Back\" component=\"label\" onClick={() => window.history.back()} sx={{ p: 2, mr: 2 }}>\n                                    <ArrowBack />\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <Stack spacing={1}>\n                            <Typography variant=\"h3\" component=\"h3\" gutterBottom sx={{ fontWeight: 600 }}>\n                                {title}\n                            </Typography>\n                            {subtitle && <Typography variant=\"subtitle2\" >\n                                {subtitle}\n                            </Typography>}\n                        </Stack>\n                    </Stack>\n                </Grid>\n                <Grid item>\n                    {action}\n                    {control &&\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<AddTwoTone fontSize=\"small\" />}\n                            onClick={() => navigate(control.route)}\n                        >\n                            {control.label}\n                        </Button>\n                    }\n                </Grid>\n            </Grid >\n        </Box >\n    )\n}\n","// https://blog.logrocket.com/build-rich-text-editors-react-draft-js-react-draft-wysiwyg/\n\nimport React from 'react'\nimport { Drafts, SendOutlined } from '@mui/icons-material';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Typography,\n  useTheme\n} from '@mui/material';\n\nimport Dropzone from 'react-dropzone'\n// import './MailCompose.css'\n// project\nimport useScriptRef from 'hooks/useScriptRef';\n// assets\n// import { images } from '__mocks__/images'\n\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport CustomizedEditor from 'components/components/CustomizedEditor';\nimport SubCard from 'components/cards/SubCard';\nimport { useNavigate } from 'react-router-dom';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeading from 'layouts/PageHeading';\n\nexport default function BlogCreate() {\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const scriptedRef = useScriptRef();\n\n\n  return (\n    <PageContainer >\n      <PageHeading title=\"New Post\" back />\n      <Box sx={{ display: 'flex' }}>\n        <Formik\n          initialValues={{\n            title: ' ',\n            description: ' ',\n\n            submit: null\n          }}\n          validationSchema={Yup.object().shape({\n            to: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            description: Yup.string().max(255).required('Subject is required')\n          })}\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              if (scriptedRef.current) {\n                setStatus({ success: true });\n                setSubmitting(false);\n              }\n            } catch (err) {\n              console.error(err);\n              if (scriptedRef.current) {\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            }\n          }}\n        >\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n            <form noValidate onSubmit={handleSubmit} >\n              <Box\n                sx={{\n                  // width: 1000,\n                  display: \"grid\",\n                  gridAutoFlow: \"row\",\n                  gridTemplateColumns: \"repeat(5, 1fr)\",\n                  gridTemplateRows: \"100px 200px 1fr 80px\",\n                  gap: 2,\n                  flexGrow: 1\n                }}\n              >\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"1 / 2\" }}>\n                  <Stack spacing={3}>\n                    <FormControl fullWidth error={Boolean(touched.title && errors.title)} sx={{ ...theme.typography.customInput }}>\n                      <InputLabel htmlFor=\"outlined-adornment-title-blog\">Post Title</InputLabel>\n                      <OutlinedInput\n                        id=\"outlined-adornment-title-blog\"\n                        type=\"title\"\n                        value={values.title}\n                        name=\"title\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        label=\"Post Title\"\n                        inputProps={{}}\n                      />\n                      {touched.title && errors.title && (\n                        <FormHelperText error id=\"standard-weight-helper-text-title-blog\">\n                          {errors.title}\n                        </FormHelperText>\n                      )}\n                    </FormControl>\n\n                    <FormControl\n                      fullWidth\n                      error={Boolean(touched.description && errors.description)}\n                      sx={{ ...theme.typography.customInput }}\n                    >\n                      <InputLabel htmlFor=\"outlined-adornment-description-blog\">Post Description</InputLabel>\n\n                      <OutlinedInput\n                        id=\"outlined-adornment-description-blog\"\n                        type='text'\n                        value={values.description}\n                        name=\"description\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        endAdornment={\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              aria-label=\"toggle description visibility\"\n                              // onClick={handleClickShowSubject}\n                              // onMouseDown={handleMouseDownSubject}\n                              edge=\"end\"\n                              size=\"large\"\n                            >\n                              {/* {showSubject ? <Visibility /> : <VisibilityOff />} */}\n                            </IconButton>\n                          </InputAdornment>\n                        }\n                        label=\"Post Description\"\n                        inputProps={{}}\n                      />\n                      {touched.description && errors.description && (\n                        <FormHelperText error id=\"standard-weight-helper-text-description-blog\">\n                          {errors.description}\n                        </FormHelperText>\n                      )}\n                    </FormControl>\n                  </Stack>\n                </Box>\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"2 / 3\" }}>\n                  <SubCard sx={{ my: 2 }}>\n                    <Typography variant='h4'>Cover</Typography>\n                    <Box\n                      sx={{\n                        height: 80,\n                        // border: 1,\n                        borderRadius: 2,\n                        bgolor: theme.palette.grey[200],\n                        p: 1,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        rowGap: 5\n                      }}\n                    >\n                      {/* <CustomizedImage url={''} sx={{ height: 120 }} /> */}\n\n                      <Dropzone onDrop={acceptedFiles => console.log(acceptedFiles)}>\n                        {({ getRootProps, getInputProps }) => (\n                          <section >\n                            <div {...getRootProps()}>\n                              <input {...getInputProps()} />\n                              <Stack direction={`row`} alignItems={`center`} spacing={2}>\n                                <IconButton color=\"secondary\" aria-label=\"add an alarm\" sx={{ bgcolor: theme.palette.secondary.light }}>\n                                  <CloudUploadIcon />\n                                </IconButton>\n                                <Typography variant='h4'> Drag and drop or Click to upload</Typography>\n                                {/* <Typography variant='h5'> extension: PNG,JPG,SVG,GIF / size: maximun 800X400\n                                </Typography> */}\n                              </Stack>\n                            </div>\n                          </section>\n                        )}\n                      </Dropzone>\n                    </Box>\n                  </SubCard>\n                </Box>\n                <Box sx={{ gridColumn: \"1/4\", gridRow: \"3 / 4\" }}>\n\n                  <Typography variant='h4'>Content</Typography>\n                  <CustomizedEditor initialContent=\"Write something here\" />\n\n\n                </Box>\n                <Box sx={{ gridColumn: \"4/6\", gridRow: \"1 / 4\" }}>\n                  <SubCard >\n                    <Stack spacing={3}>\n                      <Typography variant='h4'>Seo</Typography>\n                      <FormControl fullWidth error={Boolean(touched.tags && errors.tags)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-tags-blog\"> Tags</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-tags-blog\"\n                          type=\"tags\"\n                          value={values.tags}\n                          name=\"tags\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"Tags\"\n                          inputProps={{}}\n                        />\n                        {touched.tags && errors.tags && (\n                          <FormHelperText error id=\"standard-weight-helper-text-tags-blog\">\n                            {errors.tags}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                      <FormControl fullWidth error={Boolean(touched.seotitle && errors.seotitle)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-seotitle-blog\"> SEO Title</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-seotitle-blog\"\n                          type=\"seotitle\"\n                          value={values.seotitle}\n                          name=\"seotitle\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"seo title\"\n                          inputProps={{}}\n                        />\n                        {touched.seotitle && errors.seotitle && (\n                          <FormHelperText error id=\"standard-weight-helper-text-seotitle-blog\">\n                            {errors.seotitle}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                      <FormControl fullWidth error={Boolean(touched.description && errors.description)} sx={{ ...theme.typography.customInput }}>\n                        <InputLabel htmlFor=\"outlined-adornment-seodescription-blog\" > SEO Description</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-seodescription-blog\"\n                          type=\"seodescription\"\n                          value={values.seodescription}\n                          name=\"seodescription\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          label=\"seo description\"\n                          inputProps={{ shrink: true }}\n                          InputLabelProps={{ shrink: true }}\n                        />\n                        {touched.description && errors.description && (\n                          <FormHelperText error id=\"standard-weight-helper-text-seodescription-blog\">\n                            {errors.description}\n                          </FormHelperText>\n                        )}\n                      </FormControl>\n                    </Stack>\n                  </SubCard>\n                </Box>\n                <Box sx={{ gridColumn: \"1/6\", gridRow: \"4 / 5\" }}>\n                  <Box sx={{ mt: 2 }}>\n                    <Stack direction=\"row\" spacing={2} justifyContent='flex-end'>\n                      <Button variant=\"contained\" endIcon={<Drafts />}>\n                        Draft\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        endIcon={<SendOutlined />}\n                        onClick={() => navigate('/pages/blogs', { replace: true })}\n                      >\n                        Publish\n                      </Button>\n                    </Stack>\n                  </Box>\n                </Box>\n\n              </Box>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </PageContainer>\n  )\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21.99 8c0-.72-.37-1.35-.94-1.7L12 1 2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zM12 13 3.74 7.84 12 3l8.26 4.84L12 13z\"\n}), 'Drafts');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4.01 6.03 7.51 3.22-7.52-1 .01-2.22m7.5 8.72L4 17.97v-2.22l7.51-1M2.01 3 2 10l15 2-15 2 .01 7L23 12 2.01 3z\"\n}), 'SendOutlined');"],"names":["props","initialEditorState","getEditorContent","initialContent","contentBlock","htmlToDraft","contentState","ContentState","contentBlocks","EditorState","useState","editorState","setEditorState","Editor","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","scripted","useRef","useEffect","current","NaviScrollToTop","children","pathname","useLocation","window","scrollTo","top","left","behavior","propTypes","PropTypes","sx","others","Box","minHeight","mt","px","PageHeading","theme","useTheme","navigate","useNavigate","title","subtitle","breadcrumbs","back","control","action","rest","padding","spacing","marginBottom","boxShadow","palette","mode","grey","container","justifyContent","alignItems","item","map","breadcrumb","index","underline","color","name","direction","arrow","placement","component","onClick","history","p","mr","variant","gutterBottom","fontWeight","startIcon","fontSize","route","label","BlogCreate","scriptedRef","useScriptRef","display","initialValues","description","submit","validationSchema","Yup","shape","to","email","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","noValidate","gridAutoFlow","gridTemplateColumns","gridTemplateRows","gap","flexGrow","gridColumn","gridRow","fullWidth","Boolean","typography","customInput","htmlFor","id","type","value","onBlur","onChange","inputProps","endAdornment","position","edge","size","my","height","borderRadius","bgolor","flexDirection","rowGap","onDrop","acceptedFiles","log","getRootProps","getInputProps","bgcolor","secondary","light","tags","seotitle","seodescription","shrink","InputLabelProps","endIcon","replace","createSvgIcon","_jsx","d"],"sourceRoot":""}