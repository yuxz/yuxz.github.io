{"version":3,"file":"static/js/2137.576c7def.chunk.js","mappings":"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","sources":["components/extended/AnimateButton.js","hooks/useScriptRef.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeading.js","pages/customers/CustomerAdd.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ---------------------------------------------------------------------------------\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import { useEffect, useRef } from 'react';\n\n// --------------------------------------------------------------------------------\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n    const location = useLocation();\n    const { pathname } = location;\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n    children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n\nimport NaviScrollToTop from './NaviScrollToTop';\n\nconst PageContainer = (props) => {\n\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          px: 1,\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  )\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n    ),\n    PropTypes.func,\n    PropTypes.object,\n  ]),\n}\nexport default PageContainer; ","import React from 'react'\n\n// @mui\nimport { ArrowBack } from '@mui/icons-material'\nimport { Breadcrumbs, Button, Link, Stack, Typography } from '@mui/material'\n\nexport default function PageHeading(props) {\n\n    const { title, breadcrumbs, back, stats, action } = props\n    return (\n        <Stack\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            sx={{\n                mb: 2,\n                // bgcolor: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.300',\n                // borderRadius: `${theme.shape.borderRadius}px`\n            }}>\n            <Stack justifyContent='flex-start' alignItems='flex-start'>\n                {back &&\n                    <Button\n                        startIcon={<ArrowBack />}\n                        onClick={() => window.history.back()}\n                    >\n                        Back\n                    </Button>}\n\n                {breadcrumbs && <Breadcrumbs aria-label=\"breadcrumb\">\n                    {breadcrumbs.map((breadcrumb, index) => (<Link key={index} underline=\"hover\" color=\"inherit\" pathname={breadcrumb.pathname}>\n                        {breadcrumb.name}\n                    </Link>))}\n                </Breadcrumbs>}\n\n                <Typography variant=\"h2\" gutterBottom>\n                    {title}\n                </Typography>\n                {stats}\n            </Stack>\n            {action}\n        </Stack >\n    )\n}\n","// mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    Switch\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project \nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/extended/AnimateButton';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeading from 'layouts/PageHeading';\n\n\nconst CustomerAdd = () => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    // const scriptedRef = useScriptRef();\n    // const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n\n        <PageContainer>\n            <PageHeading title=\"Add Customer\" back />\n            <Formik\n                initialValues={{\n                    fullname: ' ',\n                    email: 'themarscloud@gmail.com',\n                    country: '',\n                    state: '',\n                    address: '',\n                    zipcode: '',\n                    phone: '',\n                    public: false,\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    fullname: Yup.string().max(255).required('Full Name is required'),\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    country: Yup.string().max(255).required('Country  is required'),\n                    state: Yup.string().max(255).required('State/Region is required'),\n                    address: Yup.string().max(255).required('Address  is required'),\n                    zipcode: Yup.string().max(10)\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit}>\n                        <Stack spacing={3}>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.fullname && errors.fullname)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-fullname-customer\">Full name</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-fullname-customer\"\n                                    type=\"input\"\n                                    value={values.fullname}\n                                    name=\"fullname\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Full name\"\n                                    inputProps={{}}\n                                />\n                                {touched.fullname && errors.fullname && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-fullname-customer\">\n                                        {errors.fullname}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.email && errors.email)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-email-login\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Email Address / Username\"\n                                    inputProps={{}}\n                                />\n                                {touched.email && errors.email && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                        {errors.email}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.country && errors.country)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-country-customer\">Country</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-country-customer\"\n                                    type=\"input\"\n                                    value={values.country}\n                                    name=\"country\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Country\"\n                                    inputProps={{}}\n                                />\n                                {touched.country && errors.country && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-country-customer\">\n                                        {errors.country}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.state && errors.state)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-state-customer\">State/Region</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-state-customer\"\n                                    type=\"input\"\n                                    value={values.state}\n                                    name=\"state\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"State/Region\"\n                                    inputProps={{}}\n                                />\n                                {touched.state && errors.state && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-state-customer\">\n                                        {errors.state}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.address && errors.address)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-address-customer\">Address</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-fullname-address\"\n                                    type=\"input\"\n                                    value={values.address}\n                                    name=\"address\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Address1\"\n                                    inputProps={{}}\n                                />\n                                {touched.address && errors.address && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-address-customer\">\n                                        {errors.address}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.zipcode && errors.zipcode)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-zipcode-customer\">Zip/Code</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-zipcode-customer\"\n                                    type=\"input\"\n                                    value={values.zipcode}\n                                    name=\"zipcode\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Address2\"\n                                    inputProps={{}}\n                                />\n                                {touched.zipcode && errors.zipcode && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-zipcode-customer\">\n                                        {errors.zipcode}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n                            <FormControl\n                                fullWidth\n                                error={Boolean(touched.phone && errors.phone)}\n                                sx={{ ...theme.typography.customInput }}\n                            >\n                                <InputLabel htmlFor=\"outlined-adornment-phone-customer\">Phone Number</InputLabel>\n                                <OutlinedInput\n                                    id=\"outlined-adornment-phone-customer\"\n                                    type=\"input\"\n                                    value={values.phone}\n                                    name=\"phone\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    label=\"Phone Number\"\n                                    inputProps={{}}\n                                />\n                                {touched.phone && errors.phone && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-phone-customer\">\n                                        {errors.phone}\n                                    </FormHelperText>\n                                )}\n                            </FormControl>\n\n                            <Typography variant=\"h4\" >\n                                Email Verified\n                            </Typography>\n                            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                                <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                    Disabling this will automatically send the user a verification email </Typography>\n                                <Switch inputProps={{ 'aria-label': 'Switch demo' }} />\n                            </Stack>\n                            {/* <Typography variant=\"h4\" >\n                                Make Contact Info Public\n                            </Typography>\n                            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                                <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                    Means that anyone viewing your profile will be able to see your contacts details\n                                </Typography>\n                                <Switch inputProps={{ 'aria-label': 'Switch demo' }} defaultChecked />\n                            </Stack> */}\n\n                            {errors.submit && (\n                                <Box sx={{ mt: 3 }}>\n                                    <FormHelperText error>{errors.submit}</FormHelperText>\n                                </Box>\n                            )}\n\n                            <Box sx={{ mt: 2 }}>\n                                <AnimateButton>\n                                    <Button\n                                        disableElevation\n                                        disabled={isSubmitting}\n                                        fullWidth\n                                        size=\"large\"\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                    >\n                                        Create\n                                    </Button>\n                                </AnimateButton>\n                            </Box>\n                        </Stack>\n                    </form>\n                )}\n            </Formik>\n        </PageContainer>\n    );\n};\n\nexport default CustomerAdd;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","scripted","useRef","useEffect","current","NaviScrollToTop","pathname","useLocation","window","scrollTo","top","left","behavior","propTypes","PropTypes","props","sx","others","Box","px","PageHeading","title","breadcrumbs","back","stats","action","alignItems","justifyContent","mb","startIcon","onClick","history","map","breadcrumb","index","underline","color","name","variant","gutterBottom","theme","useTheme","scriptedRef","useScriptRef","initialValues","fullname","email","country","state","address","zipcode","phone","public","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","spacing","fullWidth","Boolean","typography","customInput","htmlFor","id","value","onBlur","onChange","label","inputProps","textDecoration","cursor","mt","disableElevation","disabled","size","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","position","opacity","width","height","margin","zIndex","React","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","inputRef","onFocus","readOnly","tabIndex","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","event","_jsx","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}