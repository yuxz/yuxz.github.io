{"version":3,"file":"static/js/375.fec049a7.chunk.js","mappings":"uUAmFA,IA1EuB,SAAH,GAA4G,IAAD,IAArGA,YAAAA,OAAW,MAAG,aAAY,EAAEC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAMC,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAO,EAAD,EAAEC,GAAAA,OAAE,MAAG,CAAC,EAAC,EAAKC,GAAM,YAChHC,GAAQC,EAAAA,EAAAA,KACRC,EAAUV,IAAUC,GAAY,CAAEU,QAAQ,GAAD,OAAKX,EAAK,SAASA,MAAOQ,EAAMI,QAAQC,KAAKC,MACtFC,EAAad,GAAY,CAC7BU,QAASX,EAAK,UAAMA,EAAK,SAAU,eACnCA,MAAOQ,EAAMI,QAAQC,KAAKC,KAC1BE,OAAQ,UACRC,YAAajB,EAAK,UAAMA,EAAK,SAAU,gBAErCkB,EAAS,CAAC,EACd,OAAQhB,GACN,IAAK,KAML,IAAK,KAML,IAAK,KAML,IAAK,KACHgB,EAAS,CACPC,MAAOX,EAAMY,QAAQ,GACrBC,OAAQb,EAAMY,QAAQ,IAExB,MACF,QACEF,EAAS,CAAC,EAEd,OACE,UAAC,IAAK,CAACI,UAA2B,aAAhBvB,EAA6B,SAAW,MAAOqB,QAAS,EAAGG,WAAU,SAAW,WAChG,SAAC,KAAM,QACLC,IAAKrB,EACLsB,IAAKpB,EACLC,IAAE,kDACGE,EAAMkB,WAAWC,cACjBnB,EAAMkB,WAAWE,cAAY,IAChCC,WAAY,uBAETnB,GACAK,GACAG,GACAZ,IAGDC,KAEN,UAAC,IAAU,CAACuB,QAAQ,YAAYxB,GAAI,CAAEN,MAAO,YAAa,UAAEG,EAAK,OAChD,aAAhBJ,OAA6BgC,GAAY,UAAC,IAAU,CAACD,QAAQ,KAAI,UAAC,IAAC,iBACpE,SAAC,IAAU,CAACA,QAAQ,QAAO,UAAEE,EAAAA,EAAAA,IAAW5B,OAG9C,C,8MCAA,EAzD0B,SAAH,GAA6D,IAAvD6B,EAAM,EAANA,OAAQ7B,EAAS,EAATA,UAAiB8B,GAAF,EAAJC,KAAa,EAAPD,SAAS5B,EAAE,EAAFA,GAAOC,GAAM,YACxE,OACI,UAAC6B,EAAA,GAAG,gBACA9B,IAAE,QACE+B,QAAS,OACTC,cAAe,CAAEC,GAAI,SAAUC,GAAI,OACnCjB,WAAY,SACZZ,QAAS,mBACT8B,SAAU,SAGVC,WAAY,QACTpC,IAEHC,GAAM,eAEV,SAAC6B,EAAA,EAAG,CACA9B,GAAI,CACA+B,QAAS,OACTC,cAAe,SACff,WAAY,CAAEgB,GAAI,SAAUC,GAAI,UAChCG,EAAG,EACHC,SAAU,CAAEJ,GAAI,MAClB,UAEF,SAACK,EAAA,EAAc,CACX1C,KAAM8B,EAAO9B,KACbE,OAAQ4B,EAAOa,UACf1C,UAAWA,EACXL,YAAY,gBAGpB,SAACqC,EAAA,EAAG,CACA9B,GAAI,CACA+B,QAAS,OACTC,cAAe,SACff,WAAY,aACZoB,EAAG,GAEL,UAEF,SAACP,EAAA,EAAG,CAACW,UAAU,OAAM,UACjB,SAACC,EAAA,EAAU,CAAClB,QAAQ,QAAO,SAAEI,WAKjD,E,wHCnDMe,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAG1C,EAAK,EAALA,MAAK,MAAQ,CAChD,oBAAqB,CACnB4C,gBAAiB,UACjBpD,MAAO,UACPqD,UAAU,aAAD,OAAe7C,EAAMI,QAAQ0C,WAAWC,OACjD,WAAY,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNvC,MAAO,OACPE,OAAQ,OACRsC,aAAc,MACdC,UAAW,mCACX5C,OAAQ,yBACR6C,QAAS,OAGb,oBAAqB,CACnB,KAAM,CACJC,UAAW,YACXC,QAAS,GAEX,OAAQ,CACND,UAAW,aACXC,QAAS,IAGd,IAqCD,EAlCwB,SAAH,GAAW,EAAL/D,MAAe,EAARC,SAAc,EAAJC,KAAwC,IAAlCG,EAAM,EAANA,OAAO,EAAD,EAAEC,GAAAA,OAAE,MAAG,CAAC,EAAC,EAAKC,GAAM,YAC1E,OACE,SAACyD,EAAA,EAAK,CAAC1C,UAAU,MAAMF,QAAS,EAAE,UAChC,SAAC6B,EAAW,CACVgB,QAAQ,WACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDtC,QAAQ,MAAK,UAEb,SAACuC,EAAA,GAAM,QACL7C,IAAI,GACJC,IAAKpB,EACLC,IAAE,QAGAuB,WAAY,uBAITvB,IAEDC,OAId,EC1BA,EA/B8B,SAAH,GAAyB,IAAD,IAAlB0B,OAAAA,OAAM,MAAG,CAAC,EAAC,EACxC,OACI,SAACqC,EAAA,EAAQ,CAAChE,GAAI,CAAEU,OAAQ,EAAGuD,EAAG,GAAI,UAC9B,UAACP,EAAA,EAAK,CAAC5C,QAAS,EAAE,WACd,UAAC4C,EAAA,EAAK,CAAC1C,UAAU,MAAMF,QAAS,EAAGG,WAAY,SAAS,WAEpD,SAAC,EAAe,CAAClB,OAAc,OAAN4B,QAAM,IAANA,OAAM,EAANA,EAAQa,UAAWxC,GAAI,CAAEa,MAAO,GAAIE,OAAQ,OACrE,SAACmD,EAAA,EAAa,CAACX,QAAQ,sBAc3B,SAACG,EAAA,EAAK,CAAC1C,UAAU,MAAMF,QAAS,EAAGqD,eAAgB,WAAW,UAC1D,SAACC,EAAA,EAAM,CAAC5C,QAAQ,YAAY5B,KAAK,QAAO,SAAE,iBAO9D,C,mICsBA,IA9CsB,SAACyE,GACrB,IAEIC,EAFIC,EAAqCF,EAArCE,iBAAkBC,EAAmBH,EAAnBG,eACpBC,EAAeC,IAAYF,GAAkB,kDAEnD,GAAIC,EAAc,CAChB,IAAME,EAAeC,EAAAA,aAAAA,qBAAkCH,EAAaI,eACpEP,EAAqBQ,EAAAA,YAAAA,kBAA8BH,EACrD,CACA,OAAsCI,EAAAA,EAAAA,UAAST,GAAmB,eAA3DU,EAAW,KAAEC,EAAc,KAOlC,OACE,SAAC,EAAAC,OAIC,CACAF,YAAaA,EACbG,iBAAiB,gBACjBC,gBAAgB,eAChBC,iBAAiB,gBACjBC,oBAfwB,SAACN,GAC3BC,EAAeD,GACfT,EAAiBgB,KAAYC,EAAAA,EAAAA,cAAaR,EAAYS,sBACxD,GA0BF,C,sIC5CMC,EAAkB,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAEfC,GADSC,EAAAA,EAAAA,MACTD,SASR,OARAE,EAAAA,EAAAA,YAAU,WACNC,OAAOC,SAAS,CACZ7C,IAAK,EACLC,KAAM,EACN6C,SAAU,UAElB,GAAG,CAACL,IAEGD,GAAY,IACvB,EAEAD,EAAgBQ,UAAY,CACxBP,SAAUQ,IAAAA,MAGd,Q,0CCiBA,EA/BsB,SAAC9B,GACrB,IAAQ+B,GAAeC,EAAAA,EAAAA,MAAfD,WACApG,EAA4BqE,EAA5BrE,GAAI2F,EAAwBtB,EAAxBsB,SAAa1F,GAAM,OAAKoE,EAAK,GACzC,OACE,SAAC,EAAe,WAEd,SAACvC,EAAA,GAAG,gBACF9B,IAAE,QAEAsG,GAAI,EACJC,GAAIH,EAAa,EAAI,IAClBpG,IAEDC,GAAM,aAET0F,MAIT,C,oRCoDA,IAxEmB,SAACtB,GAChB,IAAMnE,GAAQC,EAAAA,EAAAA,KACRqG,GAAWC,EAAAA,EAAAA,MACTC,EAAiErC,EAAjEqC,MAAOC,EAA0DtC,EAA1DsC,SAAUC,EAAgDvC,EAAhDuC,YAAaC,EAAmCxC,EAAnCwC,KAAMC,EAA6BzC,EAA7ByC,QAASC,EAAoB1C,EAApB0C,OAAWC,GAAI,OAAK3C,EAAK,GAC9E,OACI,SAAC,IAAG,CACArE,GAAI,CACAiH,QAAS/G,EAAMY,QAAQ,GACvBoG,aAAchH,EAAMY,QAAQ,GAC5BiC,UAC2B,SAAvB7C,EAAMI,QAAQ6G,KAAe,oBACVjH,EAAMI,QAAQ8G,KAAK,KAAI,yGAChBlH,EAAMI,QAAQ8G,KAAK,KAAI,+BAAuBlH,EAAMI,QAAQ8G,KAAK,OACjG,UACF,UAAC,MAAI,gBACDC,WAAS,EACTlD,eAAe,gBACflD,WAAW,UACP+F,GAAI,eAER,UAAC,KAAI,CAACM,MAAI,YACLV,IAAe,SAAC,IAAW,CAAC,aAAW,aAAY,SAC/CA,EAAYW,KAAI,SAACC,EAAYC,GAAK,OAAM,SAAC,IAAI,CAAaC,UAAU,QAAQhI,MAAM,UAAUkG,SAAU4B,EAAW5B,SAAS,SACtH4B,EAAW3H,MADoC4H,EAE7C,OAEX,UAAC,IAAK,CAACzG,UAAU,MAAMmD,eAAe,aAAalD,WAAW,SAAQ,UACjE4F,IACG,SAAC,IAAO,CAACc,OAAK,EAACC,UAAU,MAAMlB,MAAM,UAAS,UAC1C,SAAC,IAAU,CAAChH,MAAM,UAAU,aAAW,OAAO+C,UAAU,QAAQoF,QAAS,kBAAM9B,OAAO+B,QAAQjB,MAAM,EAAE7G,GAAI,CAAEiE,EAAG,EAAG8D,GAAI,GAAI,UACtH,SAAC,IAAS,SAItB,UAAC,IAAK,CAACjH,QAAS,EAAE,WACd,SAAC,IAAU,CAACU,QAAQ,KAAKiB,UAAU,KAAKuF,cAAY,EAAChI,GAAI,CAAEoC,WAAY,KAAM,SACxEsE,IAEJC,IAAY,SAAC,IAAU,CAACnF,QAAQ,YAAW,SACvCmF,cAKjB,UAAC,KAAI,CAACW,MAAI,YACLP,EACAD,IACG,SAAC,IAAM,CACHtF,QAAQ,YACRyG,WAAW,SAAC,IAAU,CAACC,SAAS,UAChCL,QAAS,kBAAMrB,EAASM,EAAQqB,MAAM,EAAC,SAEtCrB,EAAQsB,gBAOrC,C,0XCpEaC,EACH,O,+HCGJC,EAAmB,SAAH,GAAsD,IAAhDC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAczI,EAAE,EAAFA,GAAI2F,EAAQ,EAARA,SAC1D,OACE,SAAC,WAAc,WACb,SAAC+C,EAAA,GAAM,CACLH,OAAQA,EACRC,KAAMA,EACNG,QAASF,EACTzI,IAAE,UAEGA,GACH,SAED2F,KAIT,EAEA2C,EAAiBM,SAAW,CAC1BL,OAAQpC,IAAAA,OAAAA,WACRqC,KAAMrC,IAAAA,KAAAA,WACNsC,aAActC,IAAAA,KAAAA,WACdnG,GAAImG,IAAAA,OACJR,SAAUQ,IAAAA,KAAAA,YAGZ,Q,wHCkBA,IA6NA,GA7NgB,SAAC9B,GAAW,IAAD,EACjBnE,GAAQC,EAAAA,EAAAA,KACN0I,EAA6BxE,EAA7BwE,KAAML,EAAuBnE,EAAvBmE,KAAMC,EAAiBpE,EAAjBoE,aACpB,EAAsBK,EAAAA,SAAeC,IAAM,wBAAuB,eAA3DC,EAAG,KAAEC,EAAM,KAUlB,OACI,SAAC,WAAc,WACX,SAAC,EAAgB,CACbV,OAAO,QACPC,KAAMA,EACNxI,GAAI,CAAEkJ,OAAQhJ,EAAMgJ,OAAOC,OAAS,GAAI,UAExC,UAAC,IAAG,CAACnJ,GAAI,CACLoJ,SAAU,IACVnF,EAAG,EACH5D,QAASH,EAAMI,QAAQ0C,WAAWqG,SAElCxB,QAjBI,SAACyB,GACjBA,EAAMC,iBACND,EAAME,kBACNF,EAAMG,0BACV,EAaqC,WAErB,UAAC,IAAG,CAACzJ,GAAI,CAAE+B,QAAS,OAAQwE,GAAI,EAAGmD,GAAI,GAAI,WACvC,SAACC,EAAA,EAAgB,CACb7C,SAAS,SAAC8C,EAAA,EAAQ,IAAKxB,MAAM,gBAC7BpI,GAAI,CAAE6J,KAAM,MAEhB,SAACC,EAAA,EAAU,CACPlK,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OAEdF,MAAM,UAAS,UAEf,SAACqK,EAAA,EAAM,OAEX,SAACD,EAAA,EAAU,CACPlK,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdiI,QAASY,EACT/I,MAAM,UAAS,UAEf,SAACsK,EAAA,EAAY,UAGrB,SAACC,EAAA,EAAO,KAiBR,SAACC,EAAA,EAAS,CACNC,GAAG,iBACHC,WAAS,EAETxK,KAAK,QACL4B,QAAQ,WACR6I,MAAOxB,EAAKnC,MACZ1G,GAAI,CACAsK,GAAI,MAKZ,UAAC5G,EAAA,EAAK,CAAC5C,QAAS,EAAE,WACd,UAAC,IAAG,CACAd,GAAI,CACA+B,QAAS,OACTwI,gBAAiB,OACnB,WAEF,SAAC,IAAG,CAACvK,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAAC/H,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,gBAE7B,SAAC,IAAG,CAACxB,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,UAAC/G,EAAA,EAAK,CAAC1C,UAAS,MAASC,WAAU,SAAYyJ,SAAS,OAAM,WAC1D,SAACZ,EAAA,EAAU,CAACpK,MAAM,UAAU,aAAW,gBAAgB+C,UAAU,QAAO,UAEpE,SAACkI,EAAA,EAAQ,OAEb,SAAC,IAAG,CAAC3K,GAAI,CAAE+H,GAAI,GAAI,UACf,SAAChE,EAAA,EAAM,CAAC5C,IAAK0H,EAAKlH,OAAOa,cAExB,OAAJqG,QAAI,IAAJA,GAAgB,QAAZ,EAAJA,EAAM+B,kBAAU,WAAZ,EAAJ,EAAkBrD,KAAI,SAACsD,EAAKpD,GAAK,OAC9B,SAAC1D,EAAA,EAAM,CAAa7C,IAAK2J,EAAIhL,KAAMsB,IAAK0J,EAAIrI,WAA/BiF,EAA4C,aAMzE,UAAC,IAAG,CACAzH,GAAI,CACA+B,QAAS,OACTwI,gBAAiB,OACnB,WAEF,SAAC,IAAG,CAACvK,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAAC/H,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,gBAE7B,SAAC,IAAG,CAACxB,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UAEzC,SAACK,EAAA,EAAc,CACX1C,MAAM,mBACNiC,MAAOrB,EACP+B,SAtHR,SAACC,GACrB/B,EAAO+B,EACX,EAqHgCC,YAAa,SAACC,GAAM,OAAK,SAAChB,EAAA,GAAS,UAAKgB,GAAU,UAK9D,UAAC,IAAG,CACAlL,GAAI,CACA+B,QAAS,OACTwI,gBAAiB,OACnB,WAEF,SAAC,IAAG,CAACvK,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UAEzC,SAAC/H,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,kBAE7B,SAAC,IAAG,CAACxB,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UAUzC,UAACU,EAAA,EAAW,CAACvL,KAAK,QAAQ,aAAW,qBAAoB,WACrD,SAACwE,EAAA,EAAM,CACH5C,QAAQ,WACRyG,WAAW,SAACmD,GAAA,EAAgB,IAC5BpL,GAAI,CAAEN,MAAOQ,EAAMI,QAAQ+K,QAAQC,MAAO,SAAC,SAG/C,SAAClH,EAAA,EAAM,CACH5C,QAAQ,WACRyG,WAAW,SAACmD,GAAA,EAAgB,IAC5BpL,GAAI,CAAEN,MAAOQ,EAAMI,QAAQiL,QAAQD,MAAO,SAAC,YAG/C,SAAClH,EAAA,EAAM,CACH5C,QAAQ,WACRyG,WAAW,SAACmD,GAAA,EAAgB,IAC5BpL,GAAI,CAAEN,MAAOQ,EAAMI,QAAQkL,MAAMF,MAAO,SAAC,kBAMzD,UAAC,IAAG,CACAtL,GAAI,CACA+B,QAAS,OACTwI,gBAAiB,OACnB,WAEF,SAAC,IAAG,CAACvK,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAAC/H,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,mBAE7B,SAAC,IAAG,CAACxB,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAACX,EAAA,EAAU,CAACpK,MAAM,UAAU,aAAW,cAAc+C,UAAU,QAAO,UAElE,SAACgJ,GAAA,EAAO,YAIpB,UAAC,IAAG,CACAzL,GAAI,CACA+B,QAAS,OACTwI,gBAAiB,OACnB,WAEF,SAAC,IAAG,CAACvK,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAAC/H,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,mBAE7B,SAAC,IAAG,CAACxB,GAAI,CAAEwK,QAAS,IAAKC,WAAY,OAAQ,UACzC,SAACvG,EAAA,EAAa,CAACX,QAAO,4BAG9B,SAACa,EAAA,EAAM,CAAC5C,QAAQ,YAAYkK,SAAS,SAACC,GAAA,EAAW,IAAI,SAAC,iBAK1D,UAAC1B,EAAA,EAAO,CAACjK,GAAI,CAAEsG,GAAI,GAAKsF,UAAU,OAAM,WACpC,SAAClJ,EAAA,EAAU,CAAClB,QAAQ,KAAI,SAAC,aAAqB,QAGlD,SAAC,IAAqB,CAACG,OAAQkH,EAAKlH,SACnCkH,EAAKgD,SAAStE,KAAI,SAACD,EAAMG,GAAK,OAC3B,SAAC,KAAiB,UAAiBH,GAAXG,EAAmB,UAOnE,EC7MA,GAhDa,SAAH,GAAkB,IAAD,UAAXoB,EAAI,EAAJA,KACN3I,GAAQC,EAAAA,EAAAA,KACd,GAA+B2L,EAAAA,EAAAA,GAAQ,CACnCC,KAAM1D,EACNf,MAAK,UAAMuB,GACXmD,QAAS,SAACC,GAAO,MAAM,CACnBC,WAAYD,EAAQC,aACvB,IACH,eANOA,EAAU,KAAVA,WAAcC,EAAI,KAQrB1I,EAAUyI,EAAa,GAAM,EAInC,EAAwBpD,EAAAA,UAAe,GAAM,eAAtCN,EAAI,KAAE4D,EAAO,KACdC,EAAuB,SAAC/C,IAGP,YAAfA,EAAMyC,MAAqC,QAAdzC,EAAMgD,KAA+B,UAAdhD,EAAMgD,MAG9DF,GAAS5D,EACb,EAGA,OACI,SAACxE,EAAA,EAAQ,CAAChE,GAAI,CAAEsK,GAAI,GAAI,UACpB,UAAC,IAAG,CAACiC,IAAKJ,EAAMnM,GAAI,CAAEyD,QAAAA,GAAWoE,QAASwE,EAAqB,WAC3D,UAAC3J,EAAA,EAAU,CAAClB,QAAQ,QAAQwG,cAAY,YAAc,QAAd,EAAIa,EAAKnC,aAAK,aAAV,EAAY8F,UAAU,EAAG,MAAgB,QAAV,EAAA3D,EAAKnC,aAAK,aAAV,EAAY+F,QAAS,IAAM,WAAQhL,KACzG,OAAJoH,QAAI,IAAJA,GAAY,QAAR,EAAJA,EAAM6D,cAAM,WAAR,EAAJ,EAAcnF,KAAI,SAACD,EAAMG,GAAK,OAC3B,SAACkF,EAAA,EAAI,CAAavE,MAAOd,EAAM1H,KAAK,QAAQF,MAAM,OAAOM,GAAI,CAAE+H,GAAI,EAAG1E,aAAa,GAAD,OAAKnD,EAAM0M,MAAMvJ,aAAY,QAApGoE,EAA8G,KAE7H,UAAC,IAAG,CAACzH,GAAI,CAAE+B,QAAS,OAAQoC,eAAgB,aAAcuG,SAAU,SAAUpE,GAAI,GAAI,WAClF,UAACuG,EAAA,EAAW,CAACC,IAAK,EAAE,WAChB,SAAC/I,EAAA,EAAM,CAAC5C,IAAS,OAAJ0H,QAAI,IAAJA,GAAY,QAAR,EAAJA,EAAMlH,cAAM,WAAR,EAAJ,EAAca,UAAWxC,GAAI,CAAE+H,GAAI,KAC3C,OAAJc,QAAI,IAAJA,GAAgB,QAAZ,EAAJA,EAAM+B,kBAAU,WAAZ,EAAJ,EAAkBrD,KAAI,SAACsD,EAAKpD,GAAK,OAC9B,SAAC1D,EAAA,EAAM,CAAa7C,IAAQ,OAAH2J,QAAG,IAAHA,OAAG,EAAHA,EAAKhL,KAAMsB,IAAQ,OAAH0J,QAAG,IAAHA,OAAG,EAAHA,EAAKrI,WAAjCiF,EAA8C,QAKnE,SAAC,GAAO,CAACoB,KAAMA,EAAML,KAAMA,EAAMC,aAAc4D,WAKnE,E,YC/BMU,GAAW,CACb5C,GAAI6C,GAAAA,GAAAA,SAAAA,OACJtG,MAAOsG,GAAAA,GAAAA,MAAAA,YACPC,YAAaD,GAAAA,GAAAA,MAAAA,YACbrL,OAAQ,CACJ9B,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWwK,GAAAA,GAAAA,MAAAA,UAEfpC,YAAY,OAAIsC,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MACpE,CACI5H,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWwK,GAAAA,GAAAA,MAAAA,SACd,IAELO,aAAa,OAAIL,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,OACrEuF,GAAAA,GAAAA,MAAAA,OAAmB,IAEvBhE,IAAKgE,GAAAA,GAAAA,KAAAA,SACLN,QAEIc,EAAAA,EAAAA,YAAW,CAAC,SAAU,OAAQ,QAAS,GAG3CC,YAAY,OAAIP,MAAMC,KAAKC,MAAMD,KAAKE,UAAY,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MAC/D,CACIiG,KAAMV,GAAAA,GAAAA,SAAAA,WACNtG,MAAOsG,GAAAA,GAAAA,MAAAA,YACPlN,UAAWkN,GAAAA,GAAAA,KAAAA,OACd,IAELnB,UAAU,OAAIqB,MAAMC,KAAKC,MAAMD,KAAKE,UAAY,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MAC7D,CACI0C,GAAI6C,GAAAA,GAAAA,SAAAA,OAEJpL,QAASoL,GAAAA,GAAAA,MAAAA,YACTrL,OAAQ,CACJ9B,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWwK,GAAAA,GAAAA,MAAAA,UAEflN,UAAW6N,OAAOX,GAAAA,GAAAA,KAAAA,QACrB,IAELY,KAAMZ,GAAAA,GAAAA,SAAAA,SACNpL,QAASoL,GAAAA,GAAAA,SAAAA,SACTa,MAAOb,GAAAA,GAAAA,SAAAA,SACPc,SAAUd,GAAAA,GAAAA,SAAAA,SACVlN,UAAWkN,GAAAA,GAAAA,KAAAA,OACXe,QAAQC,EAAAA,EAAAA,QAAO,CAAC,OAAQ,WAAY,UAGlCC,GAAU,CACZ,SAEA,SAKEC,GAAS,SAAC7J,GACZ,IAAQ0J,EAAmD1J,EAAnD0J,OAAQI,EAA2C9J,EAA3C8J,QAASC,EAAkC/J,EAAlC+J,YAAaC,EAAqBhK,EAArBgK,MAAOC,EAAcjK,EAAdiK,UAC7C,EAAgCxF,EAAAA,SAAe,MAAK,eAA7CyF,EAAQ,KAAEC,EAAW,KA6BtBhG,EAAOiG,QAAQF,GACfpE,EAAK3B,EAAO,sBAAmB/G,EACrC,OACI,iCACI,SAACqI,EAAA,EAAU,CACP,aAAW,OACX,mBAAkBK,EAClBtC,QAlCO,SAACyB,GAChBkF,EAAYlF,EAAMoF,cACtB,EAgCgC,UAEpB,SAACC,EAAA,EAAY,OAEjB,SAACC,EAAA,GAAO,CACJzE,GAAIA,EACJ3B,KAAMA,EACN+F,SAAUA,EACV5F,QAlBQ,WAChB6F,EAAY,KAChB,EAiBY5K,aAAc,CACVC,SAAU,SACVC,WAAY,QACd,SAEDmK,GAAQ1G,KAAI,SAACsH,GAAM,OAChB,SAACC,EAAA,EAAQ,CAAcC,SAAqB,WAAXF,EAAqBhH,QAAS,kBA9CvD,SAACgH,GAAY,IAAD,EAChC,OAAc,OAANA,QAAM,IAANA,GAAc,QAAR,EAANA,EAAQG,cAAM,WAAR,EAAN,EAAgBC,eACpB,IAAK,SACD,IAAMC,EAAaf,EAAQgB,QAAO,SAAAC,GAAM,OAAIA,IAAWrB,CAAM,IAC7DK,EAAYc,GACZ,MAEJ,IAAK,SASL,QACI,MAPJ,IAAK,QACDG,QAAQC,IAAI,WAAYjB,GACxB,IAAMkB,EAAWlB,EAAMc,QAAO,SAAAtG,GAAI,OAAIA,EAAKkF,SAAWA,CAAM,IAC5DsB,QAAQC,IAAI,eAAgBC,GAC5BjB,EAAUiB,GAKlBf,EAAY,KAChB,CA0BqFgB,CAAgBX,EAAO,EAAC,SAExFA,GAFUA,EAGJ,QAK/B,EAoGA,GAlGe,SAACxK,GACZ,IAAQ0J,EAAyC1J,EAAzC0J,OAAQM,EAAiChK,EAAjCgK,MAAOoB,EAA0BpL,EAA1BoL,OAAQC,EAAkBrL,EAAlBqL,cACzBxP,GAAQC,EAAAA,EAAAA,KACd,GAA2BwP,EAAAA,EAAAA,GAAQ,CAC/BC,OAAQvH,EACRwH,KAAM,SAACvI,GAAI,OAAKmI,EAAOnI,EAAMyG,EAAO,EACpC/B,QAAS,SAACC,GAAO,MAAM,CACnB6D,OAAQ7D,EAAQ6D,SACnB,IACH,eANOA,EAAM,KAANA,OAAUD,EAAI,KAQjBE,EAAgB1B,EAAMc,QAAO,SAACa,GAAC,OAAKA,EAAEjC,SAAWA,CAAM,IACvDkC,GAAUC,EAAAA,EAAAA,QAAO,MAEnBxQ,EAAQ,GACZ,OAAQqO,GACJ,IAAK,OASL,QACIrO,EAAQ,UACR,MARJ,IAAK,WACDA,EAAQ,UACR,MACJ,IAAK,OACDA,EAAQ,UAYhB,OACI,UAACyQ,EAAA,EAAI,CAACnQ,GAAI,CAAEa,MAAO,OAAQuI,SAAU,IAAK9G,SAAU,KAAM,WACtD,SAAC8N,EAAA,EAAU,CACPrQ,QACI,SAACgE,EAAA,EAAM,CAAC/D,GAAI,CAAEqD,aAAc,MAAOgN,wBAAyB,EAAGhQ,QAAQ,GAAD,OAAKX,EAAK,UAAU,SACrFqQ,EAActD,SAGvB1F,QACI,SAACmH,IAAM,UAAK7J,IAEhBqC,OACI,SAAChE,EAAA,EAAU,CAAChD,MAAM,eAAe8B,QAAQ,KAAKxB,GAAI,CAAEN,MAAOQ,EAAMI,QAAQC,KAAK+P,SAAU,SAAQ,OAANvC,QAAM,IAANA,OAAM,EAANA,EAAQwC,mBAG1G,SAACC,EAAA,EAAW,WACR,SAAC,IAAG,CACAjE,IAAKsD,EACL7P,GAAI,CACA6J,KAAM,EACNhJ,MAAO,EACP4P,UAAW,IAIX3N,gBAAiBgN,EAAS5P,EAAMI,QAAQgQ,QAAQ,KAAOpQ,EAAMI,QAAQ0C,WAAW0N,OAClF,SAEDX,EAAcxI,KAAI,SAACsB,GAAI,OACpB,SAAC,GAAI,CAAeA,KAAMA,GAAfA,EAAKsB,GAAkB,SAK9C,SAACwG,EAAA,EAAW,CAACC,gBAAc,YACvB,SAACC,EAAA,EAAW,CAAC7Q,GAAI,CAAEa,MAAO,QAAUW,QAAQ,WAAU,UAClD,SAACsP,EAAA,EAAa,CACV3G,GAAG,UACH4G,SAAUd,EACVlE,KAAK,OACL3B,WAAS,EACT4G,YAAY,wBACZC,cACI,SAACC,EAAA,EAAc,CAAChO,SAAS,MAAK,UAC1B,SAAC4G,EAAA,EAAU,CACP,aAAW,aACXjC,QAnDV,WAElB6H,GAAc,kBAAK3C,IAAQ,IAAErG,MAAOuJ,EAAQkB,QAAQ9G,MAAO0D,OAAAA,KAC3DkC,EAAQkB,QAAQ9G,MAAQ,EAC5B,EAiDgC+G,KAAK,MACL1R,MAAM,UAAS,UAEf,SAAC2R,EAAA,EAAG,gBASxC,E,6CC1OMC,IAAa1O,EAAAA,GAAAA,IAAO2O,GAAAA,EAAP3O,EAAgB,YAAQ,MAAQ,CACjD7B,OAAQ,GACRgB,QAAS,OACToC,eAAgB,gBAChB8C,QAJyC,EAAL/G,MAIrBY,QAAQ,EAAG,EAAG,EAAG,GACjC,IAEK0Q,IAAe5O,EAAAA,GAAAA,IAAOkO,EAAAA,EAAPlO,EAAsB,gBAAG1C,EAAK,EAALA,MAAK,MAAQ,CACzDW,MAAO,IACPU,WAAYrB,EAAMuR,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,OAAQzR,EAAMuR,YAAYE,OAAOC,UACjCC,SAAU3R,EAAMuR,YAAYI,SAASC,UAEvC,gBAAiB,CACfjR,MAAO,IACPkC,UAAW7C,EAAM6R,QAAQ,IAE3B,aAAc,CACZC,YAAY,iBACZrR,YAAY,GAAD,QAAKsR,EAAAA,GAAAA,IAAM/R,EAAMI,QAAQ8G,KAAK,KAAM,KAAK,gBAEvD,IASc,SAAS8K,GAAkB,GAA+B,IAA7BC,EAAU,EAAVA,WAAYC,EAAY,EAAZA,aAChDlS,GAAQC,EAAAA,EAAAA,KACd,OACE,SAACmR,GAAU,WAGT,SAACE,GAAY,CACXnH,MAAO8H,EACPpH,SAAUqH,EACVpB,YAAY,iBACZqB,gBACE,SAACnB,EAAA,EAAc,CAAChO,SAAS,QAAO,UAC9B,SAAC,GAAAoP,WAAU,CACT1S,KAAM,GACNF,MAAOQ,EAAMI,QAAQ8G,KAAK,KAC1BmL,OAAQ,EACRC,eAAe,eAO7B,CC5DA,IAAMC,IAAQ,OAAIvF,MAAM,KAAK3F,KAAI,SAAC+F,EAAG7F,GAAK,MACtC,CACI0C,GAAI6C,GAAAA,GAAAA,SAAAA,OACJtG,MAAOsG,GAAAA,GAAAA,MAAAA,YACPC,YAAaD,GAAAA,GAAAA,MAAAA,YACbrL,OAAQ,CACJ9B,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWkQ,EAAAA,MAAAA,CAAQ,gBAA2BjL,EAAQ,EAAC,UAE3DmD,YAAY,OAAIsC,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MACpE,CACI5H,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWkQ,EAAAA,MAAAA,CAAQ,gBAA2BjL,EAAQ,EAAC,SAC1D,IAEL8F,aAAa,OAAIL,MAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,OACpEuF,GAAAA,GAAAA,MAAAA,OAAmB,IAEvBhE,IAAKgE,GAAAA,GAAAA,KAAAA,SACLN,QAEIc,EAAAA,EAAAA,YAAW,CAAC,SAAU,OAAQ,QAAS,GAG3CC,YAAY,OAAIP,MAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MACnE,CACIiG,KAAMV,GAAAA,GAAAA,SAAAA,WACNtG,MAAOsG,GAAAA,GAAAA,MAAAA,YACPlN,UAAWkN,GAAAA,GAAAA,KAAAA,OACd,IAELnB,UAAU,OAAIqB,MAAMC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAAI9F,KAAI,SAAC+F,EAAG7F,GAAK,MAClE,CACI0C,GAAI6C,GAAAA,GAAAA,SAAAA,OAEJpL,QAASoL,GAAAA,GAAAA,MAAAA,YACTrL,OAAQ,CACJ9B,KAAMmN,GAAAA,GAAAA,SAAAA,WACNxK,UAAWkQ,EAAAA,MAAAA,CAAQ,gBAA2BjL,EAAQ,EAAC,UAE3D3H,UAAW6N,OAAOX,GAAAA,GAAAA,KAAAA,QACrB,IAELY,KAAMZ,GAAAA,GAAAA,SAAAA,SACNpL,QAASoL,GAAAA,GAAAA,SAAAA,SACTa,MAAOb,GAAAA,GAAAA,SAAAA,SACPc,SAAUd,GAAAA,GAAAA,SAAAA,SACVlN,UAAWkN,GAAAA,GAAAA,KAAAA,OACXe,QAAQC,EAAAA,EAAAA,QAAO,CAAC,OAAQ,WAAY,SACvC,IAEC2E,GAAU,CACZ,OACA,WACA,Q,wBC7BJ,IA+FA,GA/Fe,WACX,OAA8B5N,EAAAA,EAAAA,UAAS4N,IAAQ,eAAxCxE,EAAO,KAAEyE,EAAU,KAC1B,GAA0B7N,EAAAA,EAAAA,UAAS0N,IAAM,eAAlCpE,EAAK,KAAEwE,EAAQ,KACtB,GAAoC9N,EAAAA,EAAAA,UAAS,IAAG,eAAzCoN,EAAU,KAAEW,EAAa,KAC1BC,GAAY7C,EAAAA,EAAAA,QAAO,MAMnB8C,GAAgBC,EAAAA,EAAAA,UAAQ,kBAjBTC,EAkBD7E,GAjBX,QADmB8E,EAkBDhB,SAjBlB,IAALgB,OAAK,EAALA,EAAOnE,OAAOvC,QAAS,GAChB0C,EAAAA,EAAAA,QAAO+D,GAAO,SAACE,GAAK,aAAmE,KAAnD,QAAX,EAAAA,EAAM1M,aAAK,aAAX,EAAauI,cAAcoE,QAAa,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOlE,eAAqB,IAE5FiE,EAJX,IAAyBA,EAAOC,CAkBU,GAChC,CAAC9E,EAAO8D,IAERmB,GAAaC,EAAAA,EAAAA,cAAY,SAAC1K,EAAMkF,GAClC,IAAMyF,EAAenF,EAAM9G,KAAI,SAACyI,GAC5B,OAAIA,EAAE7F,KAAOtB,EAAKsB,IACP,kBAAKtB,GAAI,IAAEkF,OAAAA,IAEfiC,CACX,IACA6C,EAASW,EAEb,GAAG,IAEG9D,GAAgB6D,EAAAA,EAAAA,cAAY,SAACtD,GAAa,IAAD,GAChC,OAAPA,QAAO,IAAPA,GAAc,QAAP,EAAPA,EAASvJ,aAAK,WAAP,EAAP,EAAgBsI,OAAOvC,QAAS,GAChCoG,EAAS,GAAD,eAAKxE,GAAK,CAAE4B,IAG5B,GAAG,IAUH,OACI,UAACwD,GAAA,EAAa,YACV,SAACC,GAAA,EAAU,CAAChN,MAAM,SAASC,SAAS,GAAGI,QACnC,UAACrD,EAAA,EAAK,CAAC1C,UAAW,MAAM,WACpB,SAACkJ,EAAA,EAAS,CACNC,GAAG,iBACH4G,SAAUgC,EACV3K,MAAM,kBACN5G,QAAQ,WACRxB,GAAI,CAAEa,MAAO,QACjB,SAACuD,EAAA,EAAM,CACH5C,QAAQ,YACRyG,WAAW,SAAC0L,EAAA,EAAO,IACnB9L,QArBI,WACpB,IAAM+L,EAASb,EAAU5B,QAAQ9G,MAAM2E,QACnCpP,EAAAA,EAAAA,MAAKgU,GAAU,GACfhB,GAAW,SAAAiB,GAAU,OAAIC,EAAAA,EAAAA,MAAK,GAAD,eAAKD,GAAU,CAAED,IAAQ,IAE1Db,EAAU5B,QAAQ9G,MAAQ,EAC9B,EAe6C,SAC5B,qBAMT,UAACrG,EAAA,EAAQ,YAEL,SAACkO,GAAiB,CACdC,WAAYA,EACZC,aA1DW,SAAC9I,GACxBwJ,EAAcxJ,EAAMyK,OAAO1J,MAC/B,KA0DY,SAAC2J,EAAA,EAAW,CAACC,QAASC,EAAAA,GAAa,UAC/B,SAAC,IAAG,CACAlU,GAAI,CACA+B,QAAS,OACT2I,SAAU,OACVvG,eAAgB,gBAChBlD,WAAY,aACZkT,aAAc,cAChB,SAEM,OAAPhG,QAAO,IAAPA,OAAO,EAAPA,EAAS5G,KAAI,SAAC6H,GAAM,OACjB,SAAC,GAAM,CAEHrB,OAAQqB,EACRjB,QAASA,EACTC,YAAawE,EACbvE,MAAO2E,EACP1E,UAAWuE,EACXpD,OAAQ6D,EACR5D,cAAeA,GAPVN,EAO2B,aAQhE,C,gGCtHO,SAAS1N,EAAW0S,EAAMC,GAC/B,IAAMC,EAAKD,GAAa,SAExB,OAAOD,GAAOG,EAAAA,EAAAA,GAAO,IAAIC,KAAKJ,GAAOE,GAAM,EAC7C,CAEO,SAASG,EAAML,EAAMC,GAC1B,IAAMC,EAAKD,GAAa,cAExB,OAAOD,GAAOG,EAAAA,EAAAA,GAAO,IAAIC,KAAKJ,GAAOE,GAAM,EAC7C,C","sources":["components/avatar/AvatarWithUser.js","components/comment/CustomizedComment.js","components/avatar/AvatarWithBadge.js","components/comment/CustomizedCommenSend.js","components/editor/WysiwygEditor.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeader.js","pages/kanban/types.js","components/components/CustomizedDrawer/index.js","pages/kanban/TaskAdd.js","pages/kanban/Task.js","pages/kanban/Column.js","pages/kanban/sections/KanbanListToolbar.js","__mocks__/todos.js","pages/kanban/index.js","utils/formatTime.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n// mui\nimport { Stack } from '@mui/system'\nimport { Avatar, Typography, useTheme } from '@mui/material';\n\n// project\nimport { fShortDate } from 'utils/formatTime';\n\nconst AvatarWithUser = ({ orientation = \"horizontal\", color, outlined, size, name, createdAt, avatar, sx = {}, ...others }) => {\n  const theme = useTheme();\n  const colorSX = color && !outlined && { bgcolor: `${color}.main`, color: theme.palette.text.main };\n  const outlinedSX = outlined && {\n    bgcolor: color ? `${color}.main` : 'primary.main',\n    color: theme.palette.text.main,\n    border: '1 solid',\n    borderColor: color ? `${color}.main` : 'primary.main',\n  }\n  let sizeSX = {};\n  switch (size) {\n    case 'xs':\n      sizeSX = {\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n      }\n      break;\n    case 'sm':\n      sizeSX = {\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n      }\n      break;\n    case 'md':\n      sizeSX = {\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n      }\n      break;\n    case 'lg':\n      sizeSX = {\n        width: theme.spacing(2),\n        height: theme.spacing(2)\n      }\n      break;\n    default:\n      sizeSX = {}\n  }\n  return (\n    <Stack direction={orientation === 'vertical' ? 'column' : 'row'} spacing={2} alignItems={`center`}>\n      <Avatar\n        alt={name}\n        src={avatar}\n        sx={{\n          ...theme.typography.commonAvatar,\n          ...theme.typography.mediumAvatar,\n          transition: 'all .2s ease-in-out',\n\n          ...colorSX,\n          ...outlinedSX,\n          ...sizeSX,\n          ...sx\n        }}\n\n        {...others}\n      />\n      <Typography variant='subtitle1' sx={{ color: 'grey.600' }}>{name} </Typography>\n      {orientation === 'vertical' ? undefined : <Typography variant='h5'> {`  •  `}</Typography>}\n      <Typography variant='body2'>{fShortDate(createdAt)}</Typography>\n    </Stack>\n  )\n}\n\nAvatarWithUser.propTypes = {\n  color: PropTypes.string,\n  outline: PropTypes.bool,\n  size: PropTypes.string,\n  sx: PropTypes.object,\n  name: PropTypes.string,\n  avatar: PropTypes.string.isRequired,\n  createdAt: PropTypes.string,\n  orientation: PropTypes.string,\n}\n\nexport default AvatarWithUser;","// react\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// mui\nimport Box from '@mui/material/Box';\nimport { Typography } from '@mui/material';\n\n// third-party\n\n// project\nimport AvatarWithUser from 'components/avatar/AvatarWithUser';\n\nconst CustomizedComment = ({ author, createdAt, star, comment, sx, ...others }) => {\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: { xs: 'column', md: 'row' },\n                alignItems: 'center',\n                bgcolor: 'background.paper',\n                overflow: 'hidden',\n                // borderRadius: `${theme.shape.borderRadius}px`,\n                // boxShadow: 1,\n                fontWeight: 'bold',\n                ...sx\n            }}\n            {...others}\n        >\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: { xs: 'center', md: 'center' },\n                    m: 3,\n                    minWidth: { md: 100 },\n                }}\n            >\n                <AvatarWithUser\n                    name={author.name}\n                    avatar={author.avatarUrl}\n                    createdAt={createdAt}\n                    orientation='vertical'\n                />\n            </Box>\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start',\n                    m: 3,\n                    // minWidth: { md: 350 },\n                }}\n            >\n                <Box component=\"span\" >\n                    <Typography variant='body1'>{comment}</Typography>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nCustomizedComment.propTypes = {\n    author: PropTypes.object.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    star: PropTypes.number,\n    comment: PropTypes.string.isRequired,\n    sx: PropTypes.object\n}\n\nexport default CustomizedComment;","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\n//mui\nimport { styled } from '@mui/material/styles';\nimport Badge from '@mui/material/Badge';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\n\nconst StyledBadge = styled(Badge)(({ theme }) => ({\n  '& .MuiBadge-badge': {\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: 'ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}));\n\n\nconst AvatarWithBadge = ({ color, outlined, size, avatar, sx = {}, ...others }) => {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <StyledBadge\n        overlap=\"circular\"\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n        variant=\"dot\"\n      >\n        <Avatar\n          alt=\"\"\n          src={avatar}\n          sx={{\n            // ...theme.typography.commonAvatar,\n            // ...theme.typography.mediumAvatar,\n            transition: 'all .2s ease-in-out',\n            // ...colorSX,\n            // ...outlinedSX,\n            // ...sizeSX,\n            ...sx\n          }}\n          {...others} />\n      </StyledBadge>\n    </Stack>\n  );\n}\n\nAvatarWithBadge.propTypes = {\n  color: PropTypes.string,\n  outline: PropTypes.bool,\n  size: PropTypes.string,\n  sx: PropTypes.object,\n  avatar: PropTypes.string.isRequired,\n}\n\nexport default AvatarWithBadge;","import { Button, Stack } from '@mui/material'\nimport WysiwygEditor from 'components/editor/WysiwygEditor'\nimport MainCard from 'components/cards/MainCard'\nimport React from 'react'\nimport AvatarWithBadge from 'components/avatar/AvatarWithBadge';\n\nconst CustomizedCommentSend = ({ author = {} }) => {\n    return (\n        <MainCard sx={{ border: 0, p: 1 }}>\n            <Stack spacing={3}>\n                <Stack direction='row' spacing={3} alignItems={'center'}>\n                    {/* <Avatar src={author?.avatarUrl} sx={{ width: 60, height: 60 }} /> */}\n                    <AvatarWithBadge avatar={author?.avatarUrl} sx={{ width: 60, height: 60 }} />\n                    <WysiwygEditor content=\"Add a comment\" />\n                </Stack>\n\n                {/* <Box sx={{ gridRow: '1', gridColumn: 'span 2', columnGap: 5 }}>\n                        <IconButton aria-label=\"delete\">\n                            <PhotoIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\">\n                            <AttachFile />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\">\n                            <SentimentSatisfiedAltIcon />\n                        </IconButton>\n                    </Box> */}\n                <Stack direction='row' spacing={3} justifyContent={'flex-end'}>\n                    <Button variant=\"contained\" size='large' >\n                        Submit\n                    </Button>\n                </Stack>\n            </Stack>\n        </MainCard>\n    )\n}\n\nexport default CustomizedCommentSend;\n","\nimport React, { useState } from 'react'\nimport PropTypes from 'prop-types';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\n// https://jpuri.github.io/react-draft-wysiwyg/#/docs?_k=jjqinp\n\nconst WysiwygEditor = (props) => {\n  const { getEditorContent, initialContent } = props;\n  const contentBlock = htmlToDraft(initialContent || '<p>Please enter <strong>something</strong></p>');\n  let initialEditorState;\n  if (contentBlock) {\n    const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n    initialEditorState = EditorState.createWithContent(contentState);\n  }\n  const [editorState, setEditorState] = useState(initialEditorState)\n  // const [content, setContent] = useState(draftToHtml(convertToRaw(editorState.getCurrentContent())));\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState)\n    getEditorContent(draftToHtml(convertToRaw(editorState.getCurrentContent())))\n  };\n\n  return (\n    <Editor\n\n      // toolbarHidden\n      // toolbarOnFocus\n      // initialEditorState={editorState}\n      editorState={editorState}\n      wrapperClassName=\"wrapper-class\"\n      editorClassName=\"editor-class\"\n      toolbarClassName=\"toolbar-class\"\n      onEditorStateChange={onEditorStateChange}\n    // onContentStateChange={onContentStateChange}\n    // toolbar={{\n    //   inline: { inDropdown: true },\n    //   list: { inDropdown: true },\n    //   textAlign: { inDropdown: true },\n    //   link: { inDropdown: true },\n    //   history: { inDropdown: true },\n    // }}\n    />\n\n    // how to dispaly html content in react\n    // {Parser().parse(draftToHtml(convertToRaw(editorState.getCurrentContent())))}\n  )\n}\n\nWysiwygEditor.propTypes = {\n  initialContent: PropTypes.string,\n  getEditorContent: PropTypes.func,\n}\n\nexport default WysiwygEditor;","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n    const location = useLocation();\n    const { pathname } = location;\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n    children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n// project\nimport NaviScrollToTop from './NaviScrollToTop';\nimport { useMenu } from 'providers/Menu';\n\nconst PageContainer = (props) => {\n  const { isMenuOpen } = useMenu();\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          // minHeight: 'calc(100vh - 80px)',\n          mt: 3,\n          px: isMenuOpen ? 5 : 10,\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  )\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n    ),\n    PropTypes.func,\n    PropTypes.object,\n  ]),\n}\nexport default PageContainer; ","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { AddTwoTone, ArrowBack } from '@mui/icons-material'\nimport { Box, Breadcrumbs, Button, Grid, IconButton, Link, Stack, Tooltip, Typography } from '@mui/material'\nimport { useTheme } from '@emotion/react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PageHeader = (props) => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const { title, subtitle, breadcrumbs, back, control, action, ...rest } = props\n    return (\n        <Box\n            sx={{\n                padding: theme.spacing(4),\n                marginBottom: theme.spacing(4),\n                boxShadow:\n                    theme.palette.mode === 'dark'\n                        ? `0 1px 0   ${theme.palette.grey[200]}, 0px 2px 4px -3px rgba(0, 0, 0, 0.2), 0px 5px 12px -4px rgba(0, 0, 0, .1)`\n                        : `0px 2px 4px -3px ${theme.palette.grey[300]}, 0px 4px 8px -5px  ${theme.palette.grey[200]}`\n            }}>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                {...rest}\n            >\n                <Grid item>\n                    {breadcrumbs && <Breadcrumbs aria-label=\"breadcrumb\">\n                        {breadcrumbs.map((breadcrumb, index) => (<Link key={index} underline=\"hover\" color=\"inherit\" pathname={breadcrumb.pathname}>\n                            {breadcrumb.name}\n                        </Link>))}\n                    </Breadcrumbs>}\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\n                        {back &&\n                            <Tooltip arrow placement=\"top\" title=\"Go back\">\n                                <IconButton color=\"primary\" aria-label=\"Back\" component=\"label\" onClick={() => window.history.back()} sx={{ p: 2, mr: 2 }}>\n                                    <ArrowBack />\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <Stack spacing={1}>\n                            <Typography variant=\"h3\" component=\"h3\" gutterBottom sx={{ fontWeight: 600 }}>\n                                {title}\n                            </Typography>\n                            {subtitle && <Typography variant=\"subtitle2\" >\n                                {subtitle}\n                            </Typography>}\n                        </Stack>\n                    </Stack>\n                </Grid>\n                <Grid item>\n                    {action}\n                    {control &&\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<AddTwoTone fontSize=\"small\" />}\n                            onClick={() => navigate(control.route)}\n                        >\n                            {control.label}\n                        </Button>\n                    }\n                </Grid>\n            </Grid >\n        </Box >\n    )\n}\n\nPageHeader.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    breadcrumbs: PropTypes.array,\n    back: PropTypes.bool,\n    control: PropTypes.object,\n    action: PropTypes.node\n\n};\n\n\nexport default PageHeader;","export const ItemTypes = {\n    CARD: \"card\",\n};\n","import * as React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport PropTypes from 'prop-types'\n\nconst CustomizedDrawer = ({ anchor, open, toggleDrawer, sx, children }) => {\n  return (\n    <React.Fragment >\n      <Drawer\n        anchor={anchor}\n        open={open}\n        onClose={toggleDrawer}\n        sx={{\n          // bgcolor: theme.palette.background.default,\n          ...sx\n        }}\n      >\n        {children}\n      </Drawer>\n    </React.Fragment >\n  );\n}\n\nCustomizedDrawer.propType = {\n  anchor: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  toggleDrawer: PropTypes.func.isRequired,\n  sx: PropTypes.object,\n  children: PropTypes.node.isRequired\n}\n\nexport default CustomizedDrawer;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport Typography from '@mui/material/Typography';\nimport { Avatar, ButtonGroup, Checkbox, Divider, FormControlLabel, IconButton, Stack, TextField, useTheme } from '@mui/material';\nimport CustomizedDrawer from 'components/components/CustomizedDrawer';\nimport { CustomizedComment, CustomizedCommentSend } from 'components/comment';\nimport WysiwygEditor from 'components/editor/WysiwygEditor';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\n\n\nimport dayjs from 'dayjs';\nimport { Delete, FiberSmartRecord, GroupAdd, HighlightOff, PlaylistAdd, PostAdd } from '@mui/icons-material';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n// function a11yProps(index) {\n//     return {\n//         id: `simple-tab-${index}`,\n//         'aria-controls': `simple-tabpanel-${index}`,\n//     };\n// }\n\n\nconst TaskAdd = (props) => {\n    const theme = useTheme();\n    const { task, open, toggleDrawer } = props;\n    const [due, setDue] = React.useState(dayjs('2014-08-18T21:11:54'));\n\n    const handleDueChange = (newValue) => {\n        setDue(newValue);\n    };\n    const handleClick = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n    };\n    return (\n        <React.Fragment>\n            <CustomizedDrawer\n                anchor='right'\n                open={open}\n                sx={{ zIndex: theme.zIndex.drawer + 2 }}\n            >\n                <Box sx={{\n                    maxWidth: 600,\n                    p: 2,\n                    bgcolor: theme.palette.background.default,\n                }}\n                    onClick={handleClick}\n                >\n                    <Box sx={{ display: 'flex', px: 2, py: 1 }}>\n                        <FormControlLabel\n                            control={<Checkbox />} label=\"Mark Complete\"\n                            sx={{ flex: 1 }}\n                        />\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            // onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <Delete />\n                        </IconButton>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={toggleDrawer}\n                            color=\"inherit\"\n                        >\n                            <HighlightOff />\n                        </IconButton>\n                    </Box>\n                    <Divider />\n\n                    {/* <Typography variant=\"h3\" component=\"div\" sx={{ flexGrow: 1, color: theme.palette.common.white }}> */}\n\n                    {/* </Typography> */}\n\n                    {/* <IconButton\n                                size=\"large\"\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                // onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <Visibility />\n                            </IconButton> */}\n\n                    <TextField\n                        id=\"standard-basic\"\n                        fullWidth\n                        // label=\"Standard\" \n                        size='large'\n                        variant=\"standard\"\n                        value={task.title}\n                        sx={{\n                            my: 3\n                        }}\n                    />\n\n\n                    <Stack spacing={3}>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Assignee</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <Stack direction={`row`} alignItems={`center`} flexWrap=\"wrap\">\n                                    <IconButton color=\"primary\" aria-label=\"assign to... \" component=\"label\"\n                                    >\n                                        <GroupAdd />\n                                    </IconButton>\n                                    <Box sx={{ mr: 3 }}>\n                                        <Avatar src={task.author.avatarUrl} />\n                                    </Box>\n                                    {task?.assignedTo?.map((usr, index) => (\n                                        <Avatar key={index} alt={usr.name} src={usr.avatarUrl} />\n                                    ))}\n                                </Stack>\n                            </Box>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Due date</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n\n                                <DateTimePicker\n                                    label=\"Date&Time picker\"\n                                    value={due}\n                                    onChange={handleDueChange}\n                                    renderInput={(params) => <TextField {...params} />}\n                                />\n                            </Box>\n                        </Box>\n\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                {/* <Typography variant='h5'>Labels</Typography> */}\n                                <Typography variant='h5'>Prioritize</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                {/* <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\"\n                                        aria-owns={popoverOpen ? 'mouse-over-popover' : undefined}\n                                        aria-haspopup=\"true\"\n                                        onMouseEnter={handlePopoverOpen}\n                                        onMouseLeave={handlePopoverClose}\n                                    >\n                                        <Dehaze />\n                                    </IconButton>\n                                    <CustomizedPopover open={popoverOpen} anchorEl={anchorEl} handlePopoverClose={handlePopoverClose} items={['Design', 'Code', 'Test', 'Deploy']} /> */}\n                                <ButtonGroup size=\"small\" aria-label=\"small button group\">\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.success.dark }}>\n                                        Low\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.warning.dark }}>\n                                        Medium\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        startIcon={<FiberSmartRecord />}\n                                        sx={{ color: theme.palette.error.dark }}>\n                                        High\n                                    </Button>\n                                </ButtonGroup>\n                            </Box>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Attachments</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <IconButton color=\"primary\" aria-label=\"upload file\" component=\"label\"\n                                >\n                                    <PostAdd />\n                                </IconButton>\n                            </Box>\n                        </Box>\n                        <Box\n                            sx={{\n                                display: 'grid',\n                                gridAutoColumns: '1fr',\n                            }}\n                        >\n                            <Box sx={{ gridRow: '1', gridColumn: '0/1' }}>\n                                <Typography variant='h5'>Description</Typography>\n                            </Box>\n                            <Box sx={{ gridRow: '1', gridColumn: '2/6' }}>\n                                <WysiwygEditor content={`write description`} />\n                            </Box>\n                        </Box>\n                        <Button variant=\"contained\" endIcon={<PlaylistAdd />}>\n                            Add Task\n                        </Button>\n                    </Stack>\n\n                    <Divider sx={{ mt: 3 }} textAlign=\"left\">\n                        <Typography variant='h5'>Comments</Typography> </Divider>\n\n                    {/* <Typography variant='h4' sx={{ mt: 5 }}>Comments</Typography> */}\n                    <CustomizedCommentSend author={task.author} />\n                    {task.comments.map((item, index) => (\n                        <CustomizedComment key={index} {...item} />\n                    ))}\n\n                </Box>\n            </CustomizedDrawer>\n        </React.Fragment>\n    );\n}\n\n\nexport default TaskAdd;","import React from \"react\";\n\n// @mui\nimport { AvatarGroup, Avatar, Box, Chip, Typography, useTheme } from \"@mui/material\";\n\n// third-party\nimport { useDrag } from \"react-dnd\";\n\n// project\nimport MainCard from \"components/cards/MainCard\";\nimport { ItemTypes } from './types';\nimport TaskAdd from \"./TaskAdd\";\n\nconst Task = ({ task }) => {\n    const theme = useTheme();\n    const [{ isDragging }, drag] = useDrag({\n        type: ItemTypes.CARD,\n        item: { ...task },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const opacity = isDragging ? 0.5 : 1;\n    // const backgroundColor = \"white\";\n    // const border = \"1px solid black\";\n\n    const [open, setOpen] = React.useState(false);\n    const handleTaskDrawerOpen = (event) => {\n        // console.log(event.type);\n        // console.log(event);\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setOpen(!open);\n    };\n\n\n    return (\n        <MainCard sx={{ my: 2 }}>\n            <Box ref={drag} sx={{ opacity }} onClick={handleTaskDrawerOpen}>\n                <Typography variant=\"body1\" gutterBottom  >{task.title?.substring(0, 100)}{task.title?.length > 100 ? '...' : undefined}</Typography>\n                {task?.labels?.map((item, index) => (\n                    <Chip key={index} label={item} size=\"small\" color='info' sx={{ mr: 1, borderRadius: `${theme.shape.borderRadius}px` }} />\n                ))}\n                <Box sx={{ display: 'flex', justifyContent: 'flex-start', flexWrap: 'nowrap', mt: 2 }} >\n                    <AvatarGroup max={6} >\n                        <Avatar src={task?.author?.avatarUrl} sx={{ mr: 3 }} />\n                        {task?.assignedTo?.map((usr, index) => (\n                            <Avatar key={index} alt={usr?.name} src={usr?.avatarUrl} />\n                        ))}\n                    </AvatarGroup>\n                    {/* {task.checklists.length > 0 ? <IconListCheck /> : ''}\n                    {task.comments.length > 0 ? <IconMessage /> : ''} */}\n                    <TaskAdd task={task} open={open} toggleDrawer={handleTaskDrawerOpen} />\n                </Box>\n            </Box>\n        </MainCard>\n    );\n};\n\nexport default Task;\n","import React, { useRef } from 'react';\n// @mui\nimport { Avatar, Box, Popover, useTheme } from \"@mui/material\";\nimport IconButton from '@mui/material/IconButton';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport { Add } from '@mui/icons-material';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Typography from '@mui/material/Typography';\nimport MenuItem from '@mui/material/MenuItem';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\n\n// third-party\nimport { useDrop } from \"react-dnd\";\n\n// project\nimport { ItemTypes } from './types';\nimport Task from \"./Task\";\n\n// assets\nimport { faker } from '@faker-js/faker';\nimport { sample, sampleSize } from 'lodash';\n\nconst NEW_TASK = {\n    id: faker.datatype.uuid(),\n    title: faker.lorem.paragraph(),\n    description: faker.lorem.paragraph(),\n    author: {\n        name: faker.internet.userName(),\n        avatarUrl: faker.image.avatar(),\n    },\n    assignedTo: [...Array(Math.round(Math.random() * 10) + 1)].map((_, index) => (\n        {\n            name: faker.internet.userName(),\n            avatarUrl: faker.image.avatar(),\n        }\n    )),\n    Attachments: [...Array(Math.round(Math.random() * 10) + 1)].map((_, index) => (\n        faker.image.image()\n    )),\n    due: faker.date.future(),\n    labels:\n        // [...Array(Math.round(Math.random())+1)].map((_, index) => ( \n        sampleSize(['Design', 'Code', 'Test'], 2)\n    //  ))\n    ,\n    checklists: [...Array(Math.round(Math.random()) + 1)].map((_, index) => (\n        {\n            user: faker.internet.userName(),\n            title: faker.lorem.paragraph(),\n            createdAt: faker.date.past()\n        }\n    )),\n    comments: [...Array(Math.round(Math.random()) + 1)].map((_, index) => (\n        {\n            id: faker.datatype.uuid(),\n            //   title: COMMMENTS[index + 1],\n            comment: faker.lorem.paragraph(),\n            author: {\n                name: faker.internet.userName(),\n                avatarUrl: faker.image.avatar(),\n            },\n            createdAt: String(faker.date.past())\n        }\n    )),\n    view: faker.datatype.number(),\n    comment: faker.datatype.number(),\n    share: faker.datatype.number(),\n    favorite: faker.datatype.number(),\n    createdAt: faker.date.past(),\n    status: sample(['todo', 'progress', 'done'])\n};\n\nconst options = [\n    'Remove',\n    // 'Rename',\n    'Clear',\n];\n\n// const ITEM_HEIGHT = 45;\n\nconst MyMenu = (props) => {\n    const { status, columns, editColumns, tasks, editTasks } = props;\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleMenuClose = (option) => {\n        switch (option?.trim()?.toLowerCase()) {\n            case 'remove':\n                const newColumns = columns.filter(column => column !== status);\n                editColumns(newColumns);\n                break;\n\n            case 'rename':\n                // columns = columns.filter(column=> column !== status)\n                break;\n            case 'clear':\n                console.log(\"tasks>>>\", tasks)\n                const newTasks = tasks.filter(task => task.status !== status)\n                console.log(\"newTaskss>>>\", newTasks)\n                editTasks(newTasks);\n                break;\n            default:\n                break;\n        }\n        setAnchorEl(null);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    return (\n        <>\n            <IconButton\n                aria-label=\"more\"\n                aria-describedby={id}\n                onClick={handleOpen}\n            >\n                <MoreVertIcon />\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                {options.map((option) => (\n                    <MenuItem key={option} selected={option === 'remove'} onClick={() => handleMenuClose(option)}>\n                        {/* <Edit /> */}\n                        {option}\n                    </MenuItem>\n                ))}\n            </Popover>\n        </>\n    );\n}\n\nconst Column = (props) => {\n    const { status, tasks, onDrop, handleNewTask } = props;\n    const theme = useTheme()\n    const [{ isOver }, drop] = useDrop({\n        accept: ItemTypes.CARD,\n        drop: (item) => onDrop(item, status),\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n        }),\n    });\n\n    const tasksInColumn = tasks.filter((t) => t.status === status);\n    const newTask = useRef(null);\n\n    let color = '';\n    switch (status) {\n        case 'todo':\n            color = 'primary'\n            break;\n        case 'progress':\n            color = 'warning'\n            break;\n        case 'done':\n            color = 'success'\n            break;\n        default:\n            color = 'primary'\n            break;\n    }\n\n    const handleAddTask = () => {\n\n        handleNewTask({ ...NEW_TASK, title: newTask.current.value, status })\n        newTask.current.value = '';\n    }\n    return (\n        <Card sx={{ width: '100%', maxWidth: 336, minWidth: 200 }}>\n            <CardHeader\n                avatar={\n                    <Avatar sx={{ borderRadius: \"50%\", borderBottomRightRadius: 0, bgcolor: `${color}.main` }}>\n                        {tasksInColumn.length}\n                    </Avatar>\n                }\n                action={\n                    <MyMenu {...props} />\n                }\n                title={\n                    <Typography color='text.primary' variant='h5' sx={{ color: theme.palette.text.primary }}>{status?.toUpperCase()}</Typography>}\n            />\n\n            <CardContent>\n                <Box\n                    ref={drop}\n                    sx={{\n                        flex: 1,\n                        width: 1,\n                        minHeight: 100,\n\n                        // margin: 1,\n                        // padding: 1,\n                        backgroundColor: isOver ? theme.palette.primary[100] : theme.palette.background.white,\n                    }}\n                >\n                    {tasksInColumn.map((task) => (\n                        <Task key={task.id} task={task} />\n                    ))}\n\n                </Box>\n            </CardContent>\n            <CardActions disableSpacing>\n                <FormControl sx={{ width: '100%' }} variant=\"outlined\">\n                    <OutlinedInput\n                        id=\"newtask\"\n                        inputRef={newTask}\n                        type='text'\n                        fullWidth\n                        placeholder=\"Please enter new task\"\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"visibility\"\n                                    onClick={handleAddTask}\n                                    // onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                    color='primary'\n                                >\n                                    <Add />\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n            </CardActions>\n        </Card>\n    );\n};\n\n\nexport default Column;","import PropTypes from 'prop-types';\n// @mui\nimport { styled, alpha, useTheme } from '@mui/material/styles';\nimport { Toolbar, OutlinedInput, InputAdornment } from '@mui/material';\n// component\n\nimport { IconSearch } from '@tabler/icons';\n\n// ----------------------------------------------------------------------\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n    boxShadow: theme.shadows[6],\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nKanbanListToolbar.propTypes = {\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func,\n};\n\nexport default function KanbanListToolbar({ filterName, onFilterName }) {\n  const theme = useTheme();\n  return (\n    <StyledRoot\n\n    >\n      <StyledSearch\n        value={filterName}\n        onChange={onFilterName}\n        placeholder=\"Search task...\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <IconSearch\n              size={20} // set custom `width` and `height`\n              color={theme.palette.grey[400]} // set `stroke` color\n              stroke={2}  // set `stroke-width`\n              strokeLinejoin=\"miter\" // override other SVG props \n            />\n          </InputAdornment>\n        }\n      />\n    </StyledRoot>\n  );\n}\n","import { faker } from '@faker-js/faker';\nimport { sample, sampleSize } from 'lodash';\n\nconst TODOS = [...Array(12)].map((_, index) => (\n    {\n        id: faker.datatype.uuid(),\n        title: faker.lorem.paragraph(),\n        description: faker.lorem.paragraph(),\n        author: {\n            name: faker.internet.userName(),\n            avatarUrl: require(`assets/images/users/user${index + 1}.png`),//faker.image.avatar(),\n        },\n        assignedTo: [...Array(Math.round(Math.random() * 12) + 1)].map((_, index) => (\n            {\n                name: faker.internet.userName(),\n                avatarUrl: require(`assets/images/users/user${index + 1}.png`)\n            }\n        )),\n        Attachments: [...Array(Math.round(Math.random() * 6) + 1)].map((_, index) => (\n            faker.image.image()\n        )),\n        due: faker.date.future(),\n        labels:\n            // [...Array(Math.round(Math.random())+1)].map((_, index) => ( \n            sampleSize(['Design', 'Code', 'Test'], 2)\n        //  ))\n        ,\n        checklists: [...Array(Math.round(Math.random() * 6) + 1)].map((_, index) => (\n            {\n                user: faker.internet.userName(),\n                title: faker.lorem.paragraph(),\n                createdAt: faker.date.past()\n            }\n        )),\n        comments: [...Array(Math.round(Math.random() * 20) + 1)].map((_, index) => (\n            {\n                id: faker.datatype.uuid(),\n                //   title: COMMMENTS[index + 1],\n                comment: faker.lorem.paragraph(),\n                author: {\n                    name: faker.internet.userName(),\n                    avatarUrl: require(`assets/images/users/user${index + 1}.png`)\n                },\n                createdAt: String(faker.date.past())\n            }\n        )),\n        view: faker.datatype.number(),\n        comment: faker.datatype.number(),\n        share: faker.datatype.number(),\n        favorite: faker.datatype.number(),\n        createdAt: faker.date.past(),\n        status: sample(['todo', 'progress', 'done'])\n    }\n));\nconst COLUMNS = [\n    'todo',\n    'progress',\n    'done'\n]\nexport {\n    TODOS,\n    COLUMNS\n};","import React, { useCallback, useMemo, useRef, useState } from \"react\";\n// third-pary\nimport { filter } from 'lodash';\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n// @mui\nimport { Box, Button, Stack, TextField } from \"@mui/material\";\nimport { AddRoad } from \"@mui/icons-material\";\n\n// third-party\nimport { uniq, size } from 'lodash'\n// project\nimport Column from \"./Column\";\nimport KanbanListToolbar from \"./sections/KanbanListToolbar\";\n\n// assets\nimport { TODOS, COLUMNS } from \"__mocks__/todos\";\nimport MainCard from \"components/cards/MainCard\";\nimport PageContainer from \"layouts/PageContainer\";\nimport PageHeader from \"../../layouts/PageHeader\";\n\nfunction applySortFilter(array, query) {\n    if (query?.trim().length > 0) {\n        return filter(array, (_item) => _item.title?.toLowerCase().indexOf(query?.toLowerCase()) !== -1);\n    }\n    return array;\n};\n\nconst Kanban = () => {\n    const [columns, setColumns] = useState(COLUMNS);\n    const [tasks, setTasks] = useState(TODOS);\n    const [filterName, setFilterName] = useState('');\n    const newColumn = useRef(null);\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const filteredItems = useMemo(() =>\n        applySortFilter(tasks, filterName)\n        , [tasks, filterName])\n\n    const handleDrop = useCallback((task, status) => {\n        const updatedTasks = tasks.map((t) => {\n            if (t.id === task.id) {\n                return { ...task, status };\n            }\n            return t;\n        });\n        setTasks(updatedTasks);\n        // eslint-disable-next-line\n    }, [])\n\n    const handleNewTask = useCallback((newTask) => {\n        if (newTask?.title?.trim().length > 0) {\n            setTasks([...tasks, newTask])\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const handleAddColumn = () => {\n        const newCol = newColumn.current.value.trim();\n        if (size(newCol) > 0) {\n            setColumns(preColumns => uniq([...preColumns, newCol]))\n        }\n        newColumn.current.value = '';\n    }\n\n    return (\n        <PageContainer>\n            <PageHeader title=\"Kanban\" subtitle='' action={\n                <Stack direction={'row'}>\n                    <TextField\n                        id=\"standard-basic\"\n                        inputRef={newColumn}\n                        label=\"new column name\"\n                        variant=\"standard\"\n                        sx={{ width: 300 }} />\n                    <Button\n                        variant=\"contained\"\n                        startIcon={<AddRoad />}\n                        onClick={handleAddColumn}\n                    >\n                        New Column\n                    </Button>\n                </Stack>\n            } />\n\n            <MainCard\n            >\n                <KanbanListToolbar\n                    filterName={filterName}\n                    onFilterName={handleFilterByName}\n                />\n                <DndProvider backend={HTML5Backend}>\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexWrap: 'wrap',\n                            justifyContent: 'space-between',\n                            alignItems: 'flex-start',\n                            alignContent: 'flex-start'\n                        }}\n                    >\n                        {columns?.map((column) => (\n                            <Column\n                                key={column}\n                                status={column}\n                                columns={columns}\n                                editColumns={setColumns}\n                                tasks={filteredItems}\n                                editTasks={setTasks}\n                                onDrop={handleDrop}\n                                handleNewTask={handleNewTask} />\n                        )\n                        )}\n                    </Box>\n                </DndProvider>\n            </MainCard>\n        </PageContainer>\n    );\n};\n\nexport default Kanban;\n\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\nexport function fShortDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n      addSuffix: true,\n    })\n    : '';\n}\n"],"names":["orientation","color","outlined","size","name","createdAt","avatar","sx","others","theme","useTheme","colorSX","bgcolor","palette","text","main","outlinedSX","border","borderColor","sizeSX","width","spacing","height","direction","alignItems","alt","src","typography","commonAvatar","mediumAvatar","transition","variant","undefined","fShortDate","author","comment","star","Box","display","flexDirection","xs","md","overflow","fontWeight","m","minWidth","AvatarWithUser","avatarUrl","component","Typography","StyledBadge","styled","Badge","backgroundColor","boxShadow","background","paper","position","top","left","borderRadius","animation","content","transform","opacity","Stack","overlap","anchorOrigin","vertical","horizontal","Avatar","MainCard","p","WysiwygEditor","justifyContent","Button","props","initialEditorState","getEditorContent","initialContent","contentBlock","htmlToDraft","contentState","ContentState","contentBlocks","EditorState","useState","editorState","setEditorState","Editor","wrapperClassName","editorClassName","toolbarClassName","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","NaviScrollToTop","children","pathname","useLocation","useEffect","window","scrollTo","behavior","propTypes","PropTypes","isMenuOpen","useMenu","mt","px","navigate","useNavigate","title","subtitle","breadcrumbs","back","control","action","rest","padding","marginBottom","mode","grey","container","item","map","breadcrumb","index","underline","arrow","placement","onClick","history","mr","gutterBottom","startIcon","fontSize","route","label","ItemTypes","CustomizedDrawer","anchor","open","toggleDrawer","Drawer","onClose","propType","task","React","dayjs","due","setDue","zIndex","drawer","maxWidth","default","event","preventDefault","stopPropagation","stopImmediatePropagation","py","FormControlLabel","Checkbox","flex","IconButton","Delete","HighlightOff","Divider","TextField","id","fullWidth","value","my","gridAutoColumns","gridRow","gridColumn","flexWrap","GroupAdd","assignedTo","usr","DateTimePicker","onChange","newValue","renderInput","params","ButtonGroup","FiberSmartRecord","success","dark","warning","error","PostAdd","endIcon","PlaylistAdd","textAlign","comments","useDrag","type","collect","monitor","isDragging","drag","setOpen","handleTaskDrawerOpen","key","ref","substring","length","labels","Chip","shape","AvatarGroup","max","NEW_TASK","faker","description","Array","Math","round","random","_","Attachments","sampleSize","checklists","user","String","view","share","favorite","status","sample","options","MyMenu","columns","editColumns","tasks","editTasks","anchorEl","setAnchorEl","Boolean","currentTarget","MoreVert","Popover","option","MenuItem","selected","trim","toLowerCase","newColumns","filter","column","console","log","newTasks","handleMenuClose","onDrop","handleNewTask","useDrop","accept","drop","isOver","tasksInColumn","t","newTask","useRef","Card","CardHeader","borderBottomRightRadius","primary","toUpperCase","CardContent","minHeight","white","CardActions","disableSpacing","FormControl","OutlinedInput","inputRef","placeholder","endAdornment","InputAdornment","current","edge","Add","StyledRoot","Toolbar","StyledSearch","transitions","create","easing","easeInOut","duration","shorter","shadows","borderWidth","alpha","KanbanListToolbar","filterName","onFilterName","startAdornment","IconSearch","stroke","strokeLinejoin","TODOS","require","COLUMNS","setColumns","setTasks","setFilterName","newColumn","filteredItems","useMemo","array","query","_item","indexOf","handleDrop","useCallback","updatedTasks","PageContainer","PageHeader","AddRoad","newCol","preColumns","uniq","target","DndProvider","backend","HTML5Backend","alignContent","date","newFormat","fm","format","Date","fDate"],"sourceRoot":""}