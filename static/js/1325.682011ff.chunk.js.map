{"version":3,"file":"static/js/1325.682011ff.chunk.js","mappings":"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","sources":["components/Scrollbars/Scrollbar.js","pages/chat/sections/ChatTopBar.js","pages/chat/sections/ChatBottomBar.js","pages/chat/sections/ChatSidebar.js","pages/chat/sections/ChatContent.js","__mocks__/chats.js","pages/chat/index.js","utils/formatTime.js"],"sourcesContent":["import React, { useCallback } from 'react'\nimport { Scrollbars } from 'react-custom-scrollbars-2'\nimport { useAppTheme } from 'providers/Theme'\n\nconst Scrollbar = (props) => {\n  const { forwardedRef = () => { }, ...rest } = props\n  const { direction } = useAppTheme()\n\n  const refSetter = useCallback(\n    (scrollbarsRef) => {\n      if (scrollbarsRef) {\n        forwardedRef(scrollbarsRef.view)\n      } else {\n        forwardedRef(null)\n      }\n    },\n    [forwardedRef]\n  )\n  return (\n    /* native scrollbars needs to be conditionally turned off in rtl */\n    <Scrollbars\n      hideTracksWhenNotNeeded\n      ref={refSetter}\n      renderView={(props) =>\n        direction === 'rtl' ? (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              marginLeft: props.style.marginRight,\n              marginRight: 0,\n            }}\n          />\n        ) : (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n            }}\n          />\n        )\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default Scrollbar\n","import { useState } from 'react';\nimport {\n  Box,\n  IconButton,\n  Tooltip,\n  Avatar,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Drawer,\n  Divider,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  styled,\n  useTheme,\n  Stack\n} from '@mui/material';\nimport { formatDistance, subMinutes } from 'date-fns';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Email, FolderZip, LocationOn, PermMedia, Phone, TextSnippetSharp } from '@mui/icons-material';\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        @media (min-width: 900px) {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n      }\n`\n);\n\nconst ListItemIconWrapper = styled(ListItemIcon)(\n  ({ theme }) => `\n        min-width: 36px;\n        color: ${theme.palette.primary.light};\n`\n);\n\nconst AccordionSummaryWrapper = styled(AccordionSummary)(\n  ({ theme }) => `\n        &.Mui-expanded {\n          min-height: 48px;\n        }\n\n        .MuiAccordionSummary-content.Mui-expanded {\n          margin: 12px 0;\n        }\n\n        .MuiSvgIcon-root {\n          transition: ${theme.transitions.create(['color'])};\n        }\n\n        &.MuiButtonBase-root {\n\n          margin-bottom: ${theme.spacing(0.5)};\n\n          &:last-child {\n            margin-bottom: 0;\n          }\n\n          &.Mui-expanded,\n          &:hover {\n            background: ${theme.palette.grey[200]};\n\n            .MuiSvgIcon-root {\n              color: ${theme.palette.primary.main};\n            }\n          }\n        }\n`\n);\n\nfunction ChatTopBar(props) {\n  const { chater } = props;\n  const theme = useTheme();\n  console.log(\">>>chater>>>\", chater)\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const [expanded, setExpanded] = useState('section1');\n\n  const handleChange =\n    (section) => (_event, isExpanded) => {\n      setExpanded(isExpanded ? section : false);\n    };\n\n  return (\n    <>\n      <RootWrapper>\n        <Box display=\"flex\" alignItems=\"center\" sx={{ p: 2 }}>\n          <Avatar\n            variant=\"rounded\"\n            sx={{\n              width: 48,\n              height: 48\n            }}\n            alt={chater?.name}\n            src={chater?.avatarUrl}\n          />\n          <Box ml={1}>\n            <Typography variant=\"h4\">{chater?.name}</Typography>\n            <Typography variant=\"subtitle1\">\n              {formatDistance(subMinutes(chater?.createdAt, 8), new Date(), {\n                addSuffix: true\n              })}\n            </Typography>\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: { xs: 'none', lg: 'flex' }\n          }}\n        >\n          {/* <Tooltip placement=\"bottom\" title=\"Start a voice call\">\n            <IconButton color=\"primary\">\n              <CallTwoToneIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip placement=\"bottom\" title=\"Start a video call\">\n            <IconButton color=\"primary\">\n              <VideoCameraFrontTwoToneIcon />\n            </IconButton>\n          </Tooltip> */}\n          <Tooltip placement=\"bottom\" title=\"Conversation information\">\n            <IconButton color=\"primary\" onClick={handleDrawerToggle}>\n              <MoreVertIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </RootWrapper>\n      <Drawer\n        sx={{\n          display: { xs: 'none', md: 'flex' },\n          zIndex: theme.zIndex.drawer + 2,\n        }}\n        variant=\"temporary\"\n        anchor={theme.direction === 'rtl' ? 'left' : 'right'}\n        open={mobileOpen}\n        onClose={handleDrawerToggle}\n        elevation={9}\n      >\n        <Box\n          sx={{\n            minWidth: 360\n          }}\n          p={2}\n        >\n          <Box\n            sx={{\n              textAlign: 'center'\n            }}\n          >\n            <Avatar\n              sx={{\n                mx: 'auto',\n                my: 2,\n                width: 48,\n                height: 48\n              }}\n              variant=\"rounded\"\n              alt={chater.name}\n              src={chater.avatarUrl}\n            />\n            <Typography variant=\"h4\">{chater.name}</Typography>\n            <Typography variant=\"subtitle2\">\n              {chater.title}\n              {/* {formatDistance(subMinutes(chater.createdAt, 7), new Date(), {\n                addSuffix: true\n              })} */}\n            </Typography>\n          </Box>\n          <Divider\n            sx={{\n              my: 3\n            }}\n          />\n\n          <Accordion\n            expanded={expanded === 'section1'}\n            onChange={handleChange('section1')}\n          >\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n              <Typography variant=\"h5\">Infomation</Typography>\n            </AccordionSummaryWrapper>\n            <AccordionDetails\n              sx={{\n                p: 0\n              }}\n            >\n              <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n                <Typography variant='subtitle1'>\n                  <Email />\n                </Typography>\n                <Typography variant='body1'>\n                  {chater.email}\n                </Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n                <Typography variant='subtitle1'>\n                  <Phone />\n                </Typography>\n                <Typography variant='body1'>\n                  {chater.phone}\n                </Typography>\n              </Stack>\n              <Stack direction=\"row\" spacing={2} sx={{ my: 2 }}>\n                <Typography variant='subtitle1'>\n                  <LocationOn />\n                </Typography>\n                <Typography variant='body1'>\n                  {chater.location}\n                </Typography>\n              </Stack>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            expanded={expanded === 'section3'}\n            onChange={handleChange('section3')}\n          >\n            <AccordionSummaryWrapper expandIcon={<ExpandMoreIcon />}>\n              <Typography variant=\"h5\">Attachments</Typography>\n            </AccordionSummaryWrapper>\n            <AccordionDetails\n              sx={{\n                p: 0\n              }}\n            >\n              <List component=\"nav\">\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <FolderZip />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Template Design.zip\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"1 Mar\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <PermMedia />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Material 3.jpg\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"04 Feb\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <TextSnippetSharp />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Technology AI.pdf\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"04 Feb\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n                <ListItem button>\n                  <ListItemIconWrapper>\n                    <TextSnippetSharp />\n                  </ListItemIconWrapper>\n                  <ListItemText\n                    primary=\"Meeting2022.pdf\"\n                    primaryTypographyProps={{ variant: 'h5' }}\n                    secondary=\"03 Feb\"\n                    secondaryTypographyProps={{ variant: 'subtitle1' }}\n                  />\n                </ListItem>\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </Box>\n      </Drawer>\n    </>\n  );\n}\n\nexport default ChatTopBar;\n","import {\n  Avatar,\n  Tooltip,\n  IconButton,\n  Box,\n  Button,\n  styled,\n  useTheme,\n  TextField\n} from '@mui/material';\nimport AttachFileTwoToneIcon from '@mui/icons-material/AttachFileTwoTone';\nimport { useRef } from 'react';\nimport { KeyboardVoice } from '@mui/icons-material';\n\n\nconst Input = styled('input')({\n  display: 'none'\n});\n\nfunction ChatBottomBar(props) {\n  const { sender, handleNewContent } = props;\n  const theme = useTheme();\n  const contentInputRef = useRef();\n\n\n  const handleContent = () => {\n    handleNewContent(contentInputRef.current.value)\n    contentInputRef.current.value = '';\n  }\n  return (\n    <Box\n      sx={{\n        background: theme.palette.grey[100],\n        display: 'flex',\n        alignItems: 'center',\n        p: 2\n      }}\n    >\n      <Box flexGrow={1} display=\"flex\" alignItems=\"center\">\n        <Avatar\n          sx={{ width: 48, height: 48, display: { xs: 'none', sm: 'flex' }, mr: 1 }}\n          alt={sender.name}\n          src={sender.avatarUrl}\n        />\n        <TextField\n          inputRef={contentInputRef}\n          label=\"\"\n          // id=\"outlined-basic\" \n\n          variant=\"outlined\"\n          placeholder=\"Type a message here...\"\n          sx={{\n            fontSize: theme.typography.pxToRem(18),\n            padding: theme.spacing(1),\n            width: '100%'\n\n          }} />\n        {/* <MessageInputWrapper\n          autoFocus\n          placeholder=\"Write your message here...\"\n          fullWidth\n        /> */}\n\n      </Box>\n      <Box>\n\n        <Input accept=\"image/*\" id=\"messenger-upload-file\" type=\"file\" />\n        <Tooltip arrow placement=\"top\" title=\"Attach a file\">\n          <label htmlFor=\"messenger-upload-file\">\n            <IconButton sx={{ mx: 1 }} color=\"primary\" component=\"span\">\n              <AttachFileTwoToneIcon fontSize=\"small\" />\n            </IconButton>\n          </label>\n        </Tooltip>\n        <Tooltip arrow placement=\"top\" title=\"Choose an emoji\">\n          <IconButton\n            sx={{ fontSize: theme.typography.pxToRem(16) }}\n            color=\"primary\"\n          >\n            <KeyboardVoice />\n          </IconButton>\n        </Tooltip>\n        <Button variant=\"contained\" onClick={handleContent}>\n          Send\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n\nexport default ChatBottomBar;\n","import { useState } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  IconButton,\n  InputAdornment,\n  Avatar,\n  List,\n  ListItemAvatar,\n  ListItemText,\n  styled,\n  ListItem\n} from '@mui/material';\nimport SearchTwoToneIcon from '@mui/icons-material/SearchTwoTone';\nimport { last } from 'lodash'\nimport { fShortDate } from '../../../utils/formatTime';\nimport { useTheme } from '@emotion/react';\nimport { Settings } from '@mui/icons-material';\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(2.5)};\n  `\n);\n\n// const ListItemWrapper = styled(ListItemButton)(\n//   ({ theme }) => `\n//         &.MuiButtonBase-root {\n//             margin: ${theme.spacing(1)} 0;\n//         }\n//   `\n// );\n\nfunction ChatSidebar(props) {\n  const theme = useTheme();\n  const { sender, handleChangeChater } = props;\n  const [selectedChater, setSelectedChater] = useState(0)\n\n  const handleChaterSelect = (selected, chaterId) => {\n    handleChangeChater(chaterId);\n    setSelectedChater(selected)\n  }\n  return (\n    <RootWrapper>\n      <Box display=\"flex\" alignItems=\"flex-start\">\n        <Avatar alt={sender.name} src={sender.avatarUrl} sx={{ width: 48, height: 48 }} />\n        <Box\n          sx={{\n            ml: 1.5,\n            flex: 1\n          }}\n        >\n          <Box\n            display=\"flex\"\n            alignItems=\"flex-start\"\n            justifyContent=\"space-between\"\n          >\n            <Box>\n              <Typography variant=\"h5\" noWrap>\n                {sender.name}\n              </Typography>\n              <Typography variant=\"subtitle1\" noWrap>\n                {sender.title}\n              </Typography>\n            </Box>\n            <IconButton\n              sx={{\n                p: 1\n              }}\n              size=\"small\"\n            >\n              <Settings />\n            </IconButton>\n          </Box>\n        </Box>\n      </Box>\n\n      <TextField\n        sx={{\n          mt: 2,\n          mb: 1\n        }}\n        size=\"small\"\n        fullWidth\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchTwoToneIcon />\n            </InputAdornment>\n          )\n        }}\n        placeholder=\"Search Contacts...\"\n      />\n      <Box mt={2}>\n        <List disablePadding component=\"div\">\n          {sender.chaters.map((chat, index) => (\n            // <ListItemWrapper key={index} selected={index === selectedChater} onClick={() => handleChaterSelect(index, chat.id)}>\n            <ListItem key={index} selected={index === selectedChater} onClick={() => handleChaterSelect(index, chat.id)}\n\n              secondaryAction={\n                <Typography variant='body1' noWrap>\n                  {fShortDate(last(chat.contents).createdAt)}\n                </Typography>\n              }\n              sx={{\n                margin: `${theme.spacing(1)} 0`\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar src={chat.avatarUrl} sx={{ width: 48, height: 48 }} />\n              </ListItemAvatar>\n              <ListItemText\n                sx={{\n                  mr: 1\n                }}\n                primaryTypographyProps={{\n                  color: 'textPrimary',\n                  variant: 'h5',\n                  noWrap: true\n                }}\n                secondaryTypographyProps={{\n                  color: 'textSecondary',\n                  noWrap: true\n                }}\n                primary={chat.name}\n                secondary={last(chat.contents).content}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </Box>\n    </RootWrapper>\n  );\n}\n\nexport default ChatSidebar;\n","import { Box, Avatar, Typography, Card, styled, Divider } from '@mui/material';\n\nimport {\n  formatDistance,\n  format,\n  subHours,\n} from 'date-fns';\nimport Scrollbar from 'react-perfect-scrollbar';\n\nimport { useLayoutEffect, useRef } from 'react';\n\nconst DividerWrapper = styled(Divider)(\n  ({ theme }) => `\n      .MuiDivider-wrapper {\n        border-radius: ${theme.shape.borderRadius};\n        text-transform: none;\n        background: ${theme.palette.background.default};\n        font-size: ${theme.typography.pxToRem(13)};\n        color: ${theme.palette.grey[300]};\n      }\n`\n);\n\nconst CardWrapperPrimary = styled(Card)(\n  ({ theme }) => `\n      background: ${theme.palette.primary.light};\n      color: ${theme.palette.primary.contrastText};\n      padding: ${theme.spacing(2)};\n      border-radius: ${theme.shape.borderRadius};\n      border-top-right-radius: ${theme.shape.borderRadius};\n      max-width: 380px;\n      display: inline-flex;\n`\n);\n\nconst CardWrapperSecondary = styled(Card)(\n  ({ theme }) => `\n      background: ${theme.palette.grey[300]};\n      color: ${theme.palette.grey[500]};\n      padding: ${theme.spacing(2)};\n      border-radius: ${theme.shape.borderRadius};\n      border-top-left-radius: ${theme.shape.borderRadius};\n      max-width: 380px;\n      display: inline-flex;\n`\n);\n\nlet preDate, curDate, dividerJsx;\n\nfunction ChatContent(props) {\n  const { sender, chater } = props;\n  // const [scrollEl, setScrollEl] = useState();\n  const scrollRef = useRef()\n  useLayoutEffect(() => {\n    if (scrollRef?.current) {\n      scrollRef.current.scrollIntoView();\n    }\n  });\n  return (\n    <Scrollbar>\n      {/* <Box\n        sx={{\n          p: 3,\n        }}> */}\n\n      {chater?.contents?.sort((fir, sec) => fir.createdAt - sec.createdAt).map((content, index) => {\n\n        curDate = format(content.createdAt, 'MMMM dd yyyy')\n        dividerJsx = curDate === preDate ? undefined : (<DividerWrapper>\n          {format(content.createdAt, 'MMMM dd yyyy')}\n        </DividerWrapper>)\n        preDate = format(content.createdAt, 'MMMM dd yyyy')\n        return (\n          <Box key={index} sx={{ p: 3 }}>\n            {dividerJsx}\n            {content.from ?\n              (<Box\n                display=\"flex\"\n                alignItems=\"flex-start\"\n                justifyContent=\"flex-end\"\n                py={0.5}\n              >\n                <Box\n                  display=\"flex\"\n                  alignItems=\"flex-end\"\n                  flexDirection=\"column\"\n                  justifyContent=\"flex-end\"\n                  mr={2}\n                >\n                  <Typography\n                    variant=\"subtitle2\"\n                    sx={{\n                      pt: 1,\n                      display: 'flex',\n                      alignItems: 'center'\n                    }}\n                  >\n                    {formatDistance(subHours(content.createdAt, 125), new Date(), {\n                      addSuffix: true\n                    })}\n                  </Typography>\n                  <CardWrapperPrimary>\n                    {content.content}\n                  </CardWrapperPrimary>\n\n                </Box>\n                <Avatar\n                  // variant=\"rounded\"\n                  sx={{\n                    width: 48,\n                    height: 48\n                  }}\n                  alt={sender.name}\n                  src={sender.avatarUrl}\n                />\n              </Box>)\n              :\n              (<Box\n                display=\"flex\"\n                alignItems=\"flex-start\"\n                justifyContent=\"flex-start\"\n                py={0.5}\n              >\n                <Avatar\n                  // variant=\"rounded\"\n                  sx={{\n                    width: 48,\n                    height: 48\n                  }}\n                  alt={chater.name}\n                  src={chater.avatarUrl}\n                />\n                <Box\n                  display=\"flex\"\n                  alignItems=\"flex-start\"\n                  flexDirection=\"column\"\n                  justifyContent=\"flex-start\"\n                  ml={2}\n                >\n                  <Typography\n                    variant=\"subtitle2\"\n                    sx={{\n                      pt: 0.5,\n                      display: 'flex',\n                      alignItems: 'center'\n                    }}\n                  >\n                    {formatDistance(subHours(content.createdAt, 115), new Date(), {\n                      addSuffix: true\n                    })}\n                  </Typography>\n                  <CardWrapperSecondary>\n                    {content.content}\n                  </CardWrapperSecondary>\n                </Box>\n              </Box>)}\n          </Box>\n        )\n      })}\n\n      {/* <Box\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-start\"\n        py={3}\n      >\n        <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt=\"Zain Baptista\"\n          src=\"/static/images/avatars/2.jpg\"\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-start\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-start\"\n          ml={2}\n        >\n          <CardWrapperSecondary>\n            Hi. Can you send me the missing invoices asap?\n          </CardWrapperSecondary>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              pt: 1,\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <ScheduleTwoToneIcon\n              sx={{\n                mr: 0.5\n              }}\n              fontSize=\"small\"\n            />\n            {formatDistance(subHours(new Date(), 115), new Date(), {\n              addSuffix: true\n            })}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-end\"\n        py={3}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-end\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-end\"\n          mr={2}\n        >\n          <CardWrapperPrimary>\n            Yes, I'll email them right now. I'll let you know once the remaining\n            invoices are done.\n          </CardWrapperPrimary>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              pt: 1,\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <ScheduleTwoToneIcon\n              sx={{\n                mr: 0.5\n              }}\n              fontSize=\"small\"\n            />\n            {formatDistance(subHours(new Date(), 125), new Date(), {\n              addSuffix: true\n            })}\n          </Typography>\n        </Box>\n        <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Box> */}\n      {/* <Box\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-end\"\n        py={3}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-end\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-end\"\n          mr={2}\n        >\n          <CardWrapperPrimary>Hey! Are you there?</CardWrapperPrimary>\n          <CardWrapperPrimary\n            sx={{\n              mt: 2\n            }}\n          >\n            hoho?\n          </CardWrapperPrimary>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              pt: 1,\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <ScheduleTwoToneIcon\n              sx={{\n                mr: 0.5\n              }}\n              fontSize=\"small\"\n            />\n            {formatDistance(subHours(new Date(), 60), new Date(), {\n              addSuffix: true\n            })}\n          </Typography>\n        </Box>\n        <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Box> */}\n\n      {/* <Box\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-start\"\n        py={3}\n      >\n        <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt=\"Zain Baptista\"\n          src=\"/static/images/avatars/2.jpg\"\n        />\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-start\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-start\"\n          ml={2}\n        >\n          <CardWrapperSecondary>Hey there!</CardWrapperSecondary>\n          <CardWrapperSecondary\n            sx={{\n              mt: 1\n            }}\n          >\n            How are you? Is it ok if I call you?\n          </CardWrapperSecondary>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              pt: 1,\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <ScheduleTwoToneIcon\n              sx={{\n                mr: 0.5\n              }}\n              fontSize=\"small\"\n            />\n            {formatDistance(subMinutes(new Date(), 6), new Date(), {\n              addSuffix: true\n            })}\n          </Typography>\n        </Box>\n      </Box>\n      <Box\n        display=\"flex\"\n        alignItems=\"flex-start\"\n        justifyContent=\"flex-end\"\n        py={3}\n      >\n        <Box\n          display=\"flex\"\n          alignItems=\"flex-end\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-end\"\n          mr={2}\n        >\n          <CardWrapperPrimary>\n            Hello, I just got my Amazon order shipped and I’m very happy about\n            that.\n          </CardWrapperPrimary>\n          <CardWrapperPrimary\n            sx={{\n              mt: 1\n            }}\n          >\n            Can you confirm?\n          </CardWrapperPrimary>\n          <Typography\n            variant=\"subtitle1\"\n            sx={{\n              pt: 1,\n              display: 'flex',\n              alignItems: 'center'\n            }}\n          >\n            <ScheduleTwoToneIcon\n              sx={{\n                mr: 0.5\n              }}\n              fontSize=\"small\"\n            />\n            {formatDistance(subMinutes(new Date(), 8), new Date(), {\n              addSuffix: true\n            })}\n          </Typography>\n        </Box>\n        <Avatar\n          variant=\"rounded\"\n          sx={{\n            width: 50,\n            height: 50\n          }}\n          alt={user.name}\n          src={user.avatar}\n        />\n      </Box> */}\n      {/* </Box> */}\n      <span ref={scrollRef} />\n    </Scrollbar>\n  );\n}\n\nexport default ChatContent;\n","import { faker } from '@faker-js/faker';\nimport { sample } from 'lodash';\n\nexport const CHATS = [...Array(8)].map((_, index) => ({\n  id: faker.datatype.uuid(),\n  name: faker.name.fullName(),\n  avatarUrl: require(`assets/images/users/user${index + 1}.png`),\n  email: faker.internet.email(),\n  phone: faker.phone.imei(),\n  title: sample([\n    'Leader',\n    'Hr Manager',\n    'UI Designer',\n    'UX Designer',\n    'UI/UX Designer',\n    'Project Manager',\n    'Backend Developer',\n    'Full Stack Designer',\n    'Front End Developer',\n    'Full Stack Developer',\n  ]),\n  chaters: [...Array(Math.round(Math.random() * 6) + 1)].map((_, index) => (\n    {\n      id: faker.datatype.uuid(),\n      name: faker.name.fullName(),\n      avatarUrl: require(`assets/images/users/user${index + 1}.png`),\n      email: faker.internet.email(),\n      phone: faker.phone.imei(),\n      location: faker.address.county(),\n      isVerified: faker.datatype.boolean(),\n      status: sample(['active', 'banned']),\n      createdAt: faker.date.past(),\n      title: sample([\n        'Leader',\n        'Hr Manager',\n        'UI Designer',\n        'UX Designer',\n        'UI/UX Designer',\n        'Project Manager',\n        'Backend Developer',\n        'Full Stack Designer',\n        'Front End Developer',\n        'Full Stack Developer',\n      ]),\n      contents: [...Array(Math.round(Math.random() * 8) + 1)].map((_, index) => (\n        {\n          id: faker.datatype.uuid(),\n          to: faker.datatype.uuid(),\n          from: sample([null, faker.datatype.uuid()]),\n          content: faker.random.words(10),\n          createdAt: faker.date.past(),\n          type: sample(['read', 'unread']),\n        }\n      ))\n    }))\n  ,\n  isVerified: faker.datatype.boolean(),\n  status: sample(['active', 'banned']),\n  createdAt: faker.date.past(),\n}));\n\n\nexport const NEW_CONTENT = {\n  id: faker.datatype.uuid(),\n  to: null,\n  from: faker.datatype.uuid(),\n  content: faker.random.words(10),\n  createdAt: faker.date.soon(),\n  type: sample(['read', 'unread']),\n}","import { useEffect, useState } from 'react';\n\n// @mui\nimport {\n  Box,\n  styled,\n  Drawer,\n  IconButton,\n  useTheme\n} from '@mui/material';\nimport MenuTwoToneIcon from '@mui/icons-material/MenuTwoTone';\n\n//third-party\nimport { faker } from '@faker-js/faker';\nimport { sample } from 'lodash';\n\n// project\nimport ChatTopBar from './sections/ChatTopBar.js';\nimport ChatBottomBar from './sections/ChatBottomBar.js';\nimport ChatSidebar from './sections/ChatSidebar.js';\nimport ChatContent from './sections/ChatContent.js';\nimport { Scrollbar } from 'components/Scrollbars/index.js';\n\n// mocks\nimport { CHATS } from '__mocks__/chats'\n\nconst RootWrapper = styled(Box)(\n  ({ theme }) => `\n       height: calc(100vh - ${theme.palette['header'].height});\n       display: flex;\n`\n);\n\nconst Sidebar = styled(Box)(\n  ({ theme }) => `\n        width: 320px;\n        background: ${theme.palette.grey[100]};\n        border-right: ${theme.palette.grey[300]} solid 1px;\n`\n);\n\nconst ChatWindow = styled(Box)(\n  () => `\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n`\n);\n\nconst TopBar = styled(Box)(\n  ({ theme }) => `\n        background: ${theme.palette.grey[100]};\n        border-bottom: ${theme.palette.grey[300]} solid 1px;\n        padding: 2;\n        align-items: center;\n`\n);\n\nconst IconButtonToggle = styled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(4)};\n  height: ${theme.spacing(4)};\n  background: ${theme.palette.grey[100]};\n`\n);\n\nconst DrawerWrapperMobile = styled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\nconst curSender = CHATS[0];\nconst initialChaterId = CHATS[0].chaters[0].id;// CHATS[0].chaters[0];\n\nfunction Chat() {\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const [chaterId, setChaterId] = useState(initialChaterId);\n  const [chater, setChater] = useState(curSender.chaters[0])\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n\n  // const filterChater = useMemo(() =>\n  //   curSender.chaters?.find(chater => chater.id === chaterId)\n  //   , [chaterId]);\n\n  useEffect(() => {\n    const filterChater = curSender.chaters?.find(chater => chater.id === chaterId)\n    setChater(filterChater)\n  }, [chaterId]);\n\n  const handleChangeChater = (chaterId) => {\n    setChaterId(chaterId);\n  }\n  const handleContent = (content) => {\n\n    if (content.trim().length > 0) {\n      const newConent = {\n        id: faker.datatype.uuid(),\n        to: null,\n        from: faker.datatype.uuid(),\n        content,\n        createdAt: new Date(),\n        type: sample(['read', 'unread']),\n      }\n      const newChater = Object.create(chater)\n      newChater.contents.push(newConent);\n      setChater(newChater)\n    }\n  }\n\n  return (\n    <>\n      <RootWrapper className=\"Mui-FixedWrapper\">\n        <DrawerWrapperMobile\n          sx={{\n            display: { lg: 'none', xs: 'inline-block' }\n          }}\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n          <Scrollbar>\n            <ChatSidebar sender={curSender} handleChangeChater={handleChangeChater} />\n          </Scrollbar>\n        </DrawerWrapperMobile>\n        <Sidebar\n          sx={{\n            display: { xs: 'none', lg: 'inline-block' }\n          }}\n        >\n          <Scrollbar>\n            <ChatSidebar sender={curSender} handleChangeChater={handleChangeChater} />\n          </Scrollbar>\n        </Sidebar>\n        <ChatWindow>\n          <TopBar\n            sx={{\n              display: { xs: 'flex', lg: 'inline-block' }\n            }}\n          >\n            <IconButtonToggle\n              sx={{\n                display: { lg: 'none', xs: 'flex' },\n                mr: 2\n              }}\n              color=\"primary\"\n              onClick={handleDrawerToggle}\n              size=\"small\"\n            >\n              <MenuTwoToneIcon />\n            </IconButtonToggle>\n            <ChatTopBar chater={chater} />\n          </TopBar>\n          <Box flex={1}>\n            <Scrollbar>\n              <ChatContent sender={curSender} chater={chater} />\n            </Scrollbar>\n          </Box>\n\n          <ChatBottomBar sender={curSender} handleNewContent={handleContent} />\n        </ChatWindow>\n      </RootWrapper>\n    </>\n  );\n}\n\nexport default Chat;\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\n\n// ----------------------------------------------------------------------\nexport function fShortDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDate(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fDateTime(date, newFormat) {\n  const fm = newFormat || 'dd MMM yyyy p';\n\n  return date ? format(new Date(date), fm) : '';\n}\n\nexport function fTimestamp(date) {\n  return date ? getTime(new Date(date)) : '';\n}\n\nexport function fToNow(date) {\n  return date\n    ? formatDistanceToNow(new Date(date), {\n      addSuffix: true,\n    })\n    : '';\n}\n"],"names":["props","forwardedRef","rest","direction","useAppTheme","refSetter","useCallback","scrollbarsRef","view","hideTracksWhenNotNeeded","ref","renderView","style","marginLeft","marginRight","RootWrapper","styled","Box","theme","ListItemIconWrapper","ListItemIcon","palette","primary","light","AccordionSummaryWrapper","AccordionSummary","transitions","create","spacing","grey","main","chater","useTheme","console","log","useState","mobileOpen","setMobileOpen","handleDrawerToggle","expanded","setExpanded","handleChange","section","_event","isExpanded","display","alignItems","sx","p","Avatar","variant","width","height","alt","name","src","avatarUrl","ml","Typography","formatDistance","subMinutes","createdAt","Date","addSuffix","xs","lg","Tooltip","placement","title","IconButton","color","onClick","MoreVert","Drawer","md","zIndex","drawer","anchor","open","onClose","elevation","minWidth","textAlign","mx","my","Divider","Accordion","onChange","expandIcon","ExpandMore","AccordionDetails","Stack","Email","email","Phone","phone","LocationOn","location","List","component","ListItem","button","FolderZip","ListItemText","primaryTypographyProps","secondary","secondaryTypographyProps","PermMedia","TextSnippetSharp","Input","sender","handleNewContent","contentInputRef","useRef","background","flexGrow","sm","mr","TextField","inputRef","label","placeholder","fontSize","typography","pxToRem","padding","accept","id","type","arrow","htmlFor","AttachFileTwoTone","KeyboardVoice","Button","current","value","preDate","curDate","dividerJsx","handleChangeChater","selectedChater","setSelectedChater","flex","justifyContent","noWrap","size","Settings","mt","mb","fullWidth","InputProps","startAdornment","InputAdornment","position","SearchTwoTone","disablePadding","chaters","map","chat","index","selected","chaterId","secondaryAction","fShortDate","last","contents","margin","ListItemAvatar","content","DividerWrapper","shape","borderRadius","default","CardWrapperPrimary","Card","contrastText","CardWrapperSecondary","scrollRef","useLayoutEffect","scrollIntoView","sort","fir","sec","format","undefined","from","py","flexDirection","pt","subHours","CHATS","Array","_","faker","require","sample","Math","round","random","isVerified","status","to","Sidebar","ChatWindow","TopBar","IconButtonToggle","DrawerWrapperMobile","curSender","initialChaterId","setChaterId","setChater","useEffect","filterChater","find","className","MenuTwoTone","trim","length","newConent","newChater","Object","push","date","newFormat","fm","fDate"],"sourceRoot":""}