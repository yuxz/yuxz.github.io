{"version":3,"file":"static/js/4109.41daba09.chunk.js","mappings":"0YAYA,SAASA,EAAaC,GACpB,IAAQC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAEjBC,EACJC,EAAAA,SACE,kBACEA,EAAAA,YAAiB,SAACC,EAAWC,GAC3B,OAAO,SAAC,KAAI,QAACA,IAAKA,EAAKJ,GAAIA,GAAQG,GACrC,GAAE,GACJ,CAACH,IAGL,OACE,yBACE,UAAC,KAAQ,CAACK,QAAM,EAACC,UAAWL,EAAW,WACrC,SAAC,IAAY,UAAEH,KACf,SAAC,IAAY,CAACC,QAASA,QAI/B,CAEA,IAAMQ,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAc,2IAajCE,GAAoBF,EAAAA,EAAAA,KAAO,SAACX,GAAK,OACrC,SAAC,MAAM,QAACc,UAAW,CAAEC,MAAO,CAAEC,UAAW,aAAmBhB,GAAS,GAD7CW,CAExB,mIAaIM,GAAoBN,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EACxB,gBAAGO,EAAK,EAALA,MAAK,2BACCA,EAAMC,QAAQjB,QAAQkB,KAAI,wCAGxBC,EAAAA,EAAAA,IAAOH,EAAMC,QAAQjB,QAAQkB,KAAM,IAAI,eAK9CE,GAAgBX,EAAAA,EAAAA,KAAO,gBAAGK,EAAS,EAATA,UAAchB,GAAK,mBACjD,SAAC,KAAO,kBAAKA,GAAK,IAAEuB,QAAS,CAAEC,OAAQR,KAAe,GADlCL,CAEpB,+EAMa,SAASc,IACtB,OACE,UAAC,IAAG,CAACC,GAAI,CAAEC,MAAO,IAAKC,EAAG,IAAK,WAC7B,SAAClB,EAAgB,CAACmB,aAAc,MAChC,SAAChB,EAAiB,CAACgB,aAAc,MACjC,SAACZ,EAAiB,CAACY,aAAc,MACjC,SAAC,KAAM,CACLA,aAAc,GACdC,KAAKA,EAAAA,EAAAA,IAAG,8HASV,SAACR,EAAa,CAACS,MAAM,YAAW,UAC9B,SAAC,IAAM,CAACC,QAAQ,YAAYC,MAAM,UAAS,SAAC,sBAK9C,SAAClC,EAAY,CAACG,QAAQ,gBAG5B,C","sources":["pages/components/Customize.js"],"sourcesContent":["import * as React from 'react';\nimport { css } from '@emotion/react';\nimport { styled, darken } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Link, ListItem, ListItemIcon, ListItemText } from '@mui/material';\n// import { Link, LinkProps } from 'react-router-dom';\n\n//------------- https://mui.com/material-ui/guides/interoperability/  --------------\n\nfunction ListItemLink(props) {\n  const { icon, primary, to } = props;\n\n  const CustomLink = //(props) => <Link to={to} {...props} />;\n    React.useMemo(\n      () =>\n        React.forwardRef((linkProps, ref) => {\n          return <Link ref={ref} to={to} {...linkProps} />;\n        }),\n      [to]\n    );\n\n  return (\n    <li>\n      <ListItem button component={CustomLink}>\n        <ListItemIcon>{icon}</ListItemIcon>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n}\n\nconst CustomizedSlider = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  & .MuiSlider-thumb {\n    border-radius: 2px;\n  }\n`;\n\n// provide your own class name with the slotProps API.\nconst CustomizedSlider1 = styled((props) => (\n  <Slider slotProps={{ thumb: { className: 'thumbbb' } }} {...props} />\n))`\n  color: #20b266;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  & .thumbbb {\n    border-radius: 6px;\n  }\n`;\n\n// By using the MUI theme provider, the theme will be available in the theme context of the styled engine too\nconst CustomizedSlider2 = styled(Slider)(\n  ({ theme }) => `\n  color: ${theme.palette.primary.main};\n\n  :hover {\n    color: ${darken(theme.palette.primary.main, 0.2)};\n  }\n`\n);\n\nconst StyledTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))`\n  & .MuiTooltip-tooltip {\n    background: navy;\n  }\n`;\n\nexport default function Customize() {\n  return (\n    <Box sx={{ width: 500, p: 10 }}>\n      <CustomizedSlider defaultValue={30} />\n      <CustomizedSlider1 defaultValue={30} />\n      <CustomizedSlider2 defaultValue={30} />\n      <Slider\n        defaultValue={30}\n        css={css`\n          color: #20b2aa;\n\n          :hover {\n            color: #2e8b57;\n          }\n        `}\n      />\n\n      <StyledTooltip title=\"I am navy\">\n        <Button variant=\"contained\" color=\"primary\">\n          Styled tooltip\n        </Button>\n      </StyledTooltip>\n\n      <ListItemLink primary=\"dashboard\" />\n    </Box>\n  );\n}\n"],"names":["ListItemLink","props","icon","primary","to","CustomLink","React","linkProps","ref","button","component","CustomizedSlider","styled","Slider","CustomizedSlider1","slotProps","thumb","className","CustomizedSlider2","theme","palette","main","darken","StyledTooltip","classes","popper","Customize","sx","width","p","defaultValue","css","title","variant","color"],"sourceRoot":""}