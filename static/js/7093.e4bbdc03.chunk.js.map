{"version":3,"file":"static/js/7093.e4bbdc03.chunk.js","mappings":"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","sources":["components/button/AnimateButton.js","hooks/useScriptRef.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeader.js","pages/customers/CustomerAdd.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ---------------------------------------------------------------------------------\n\nconst AnimateButton = forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'down':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div\n                        ref={ref}\n                        animate={{ y: y !== undefined ? y : '' }}\n                        onHoverEnd={() => cycleY()}\n                        onHoverStart={() => cycleY()}\n                    >\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x: x !== undefined ? x : '' }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n","import { useEffect, useRef } from 'react';\n\n// --------------------------------------------------------------------------------\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n    const location = useLocation();\n    const { pathname } = location;\n    useEffect(() => {\n        window.scrollTo({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }, [pathname]);\n\n    return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n    children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n// project\nimport NaviScrollToTop from './NaviScrollToTop';\nimport { useMenu } from 'providers/Menu';\n\nconst PageContainer = (props) => {\n  const { isMenuOpen } = useMenu();\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          // minHeight: 'calc(100vh - 80px)',\n          mt: 3,\n          px: isMenuOpen ? 5 : 10,\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  )\n}\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n    ),\n    PropTypes.func,\n    PropTypes.object,\n  ]),\n}\nexport default PageContainer; ","import React from 'react'\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { AddTwoTone, ArrowBack } from '@mui/icons-material'\nimport { Breadcrumbs, Button, Grid, IconButton, Link, Paper, Stack, Tooltip, Typography } from '@mui/material'\nimport { useTheme } from '@emotion/react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PageHeader = (props) => {\n    const theme = useTheme();\n    const navigate = useNavigate();\n    const { title, subtitle, breadcrumbs, back, control, action, ...rest } = props\n    return (\n        <Paper\n            variant=\"outlined\"\n            elevation={18}\n            sx={{\n                padding: theme.spacing(3),\n                marginBottom: theme.spacing(3),\n                // boxShadow:\n                //     theme.palette.mode === 'dark'\n                //         ? `0 1px 0   ${theme.palette.grey[200]}, 0px 2px 4px -3px rgba(0, 0, 0, 0.2), 0px 5px 12px -4px rgba(0, 0, 0, .1)`\n                //         : `0px 2px 4px -3px ${theme.palette.grey[300]}, 0px 4px 8px -5px  ${theme.palette.grey[200]}`\n            }}>\n            <Grid\n                container\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                {...rest}\n            >\n                <Grid item>\n                    {breadcrumbs && <Breadcrumbs aria-label=\"breadcrumb\">\n                        {breadcrumbs.map((breadcrumb, index) => (<Link key={index} underline=\"hover\" color=\"inherit\" pathname={breadcrumb.pathname}>\n                            {breadcrumb.name}\n                        </Link>))}\n                    </Breadcrumbs>}\n                    <Stack direction=\"row\" justifyContent=\"flex-start\" alignItems=\"center\">\n                        {back &&\n                            <Tooltip arrow placement=\"top\" title=\"Go back\">\n                                <IconButton color=\"primary\" aria-label=\"Back\" component=\"label\" onClick={() => window.history.back()} sx={{ p: 2, mr: 2 }}>\n                                    <ArrowBack />\n                                </IconButton>\n                            </Tooltip>\n                        }\n                        <Stack spacing={1}>\n                            <Typography variant=\"h3\" component=\"h3\" gutterBottom sx={{ fontWeight: 600 }}>\n                                {title}\n                            </Typography>\n                            {subtitle && <Typography variant=\"subtitle2\" >\n                                {subtitle}\n                            </Typography>}\n                        </Stack>\n                    </Stack>\n                </Grid>\n                <Grid item>\n                    {action}\n                    {control &&\n                        <Button\n                            variant=\"contained\"\n                            startIcon={<AddTwoTone fontSize=\"small\" />}\n                            onClick={() => navigate(control.route)}\n                        >\n                            {control.label}\n                        </Button>\n                    }\n                </Grid>\n            </Grid >\n        </Paper >\n    )\n}\n\nPageHeader.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    breadcrumbs: PropTypes.array,\n    back: PropTypes.bool,\n    control: PropTypes.object,\n    action: PropTypes.node\n\n};\n\n\nexport default PageHeader;","// mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n    Box,\n    Button,\n    FormControl,\n    FormHelperText,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography,\n    Switch,\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project \nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/button/AnimateButton';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeader from 'layouts/PageHeader';\nimport MainCard from 'components/cards/MainCard';\n\n\nconst CustomerAdd = () => {\n    const theme = useTheme();\n    const scriptedRef = useScriptRef();\n    // const scriptedRef = useScriptRef();\n    // const matchDownSM = useMediaQuery(theme.breakpoints.down('md'));\n\n    return (\n\n        <PageContainer>\n            <PageHeader title=\"Add Customer\" back />\n            <MainCard>\n                <Formik\n                    initialValues={{\n                        fullname: ' ',\n                        email: 'themarscloud@gmail.com',\n                        country: '',\n                        state: '',\n                        address: '',\n                        zipcode: '',\n                        phone: '',\n                        public: false,\n                        submit: null\n                    }}\n                    validationSchema={Yup.object().shape({\n                        fullname: Yup.string().max(255).required('Full Name is required'),\n                        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                        country: Yup.string().max(255).required('Country  is required'),\n                        state: Yup.string().max(255).required('State/Region is required'),\n                        address: Yup.string().max(255).required('Address  is required'),\n                        zipcode: Yup.string().max(10)\n                    })}\n                    onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                        try {\n                            if (scriptedRef.current) {\n                                setStatus({ success: true });\n                                setSubmitting(false);\n                            }\n                        } catch (err) {\n                            console.error(err);\n                            if (scriptedRef.current) {\n                                setStatus({ success: false });\n                                setErrors({ submit: err.message });\n                                setSubmitting(false);\n                            }\n                        }\n                    }}\n                >\n                    {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                        <form noValidate onSubmit={handleSubmit}>\n                            <Stack spacing={3}>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.fullname && errors.fullname)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-fullname-customer\">Full name</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-fullname-customer\"\n                                        type=\"input\"\n                                        value={values.fullname}\n                                        name=\"fullname\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Full name\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.fullname && errors.fullname && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-fullname-customer\">\n                                            {errors.fullname}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.email && errors.email)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-email-login\"\n                                        type=\"email\"\n                                        value={values.email}\n                                        name=\"email\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Email Address / Username\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.email && errors.email && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                            {errors.email}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.country && errors.country)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-country-customer\">Country</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-country-customer\"\n                                        type=\"input\"\n                                        value={values.country}\n                                        name=\"country\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Country\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.country && errors.country && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-country-customer\">\n                                            {errors.country}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.state && errors.state)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-state-customer\">State/Region</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-state-customer\"\n                                        type=\"input\"\n                                        value={values.state}\n                                        name=\"state\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"State/Region\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.state && errors.state && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-state-customer\">\n                                            {errors.state}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.address && errors.address)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-address-customer\">Address</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-fullname-address\"\n                                        type=\"input\"\n                                        value={values.address}\n                                        name=\"address\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Address1\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.address && errors.address && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-address-customer\">\n                                            {errors.address}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.zipcode && errors.zipcode)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-zipcode-customer\">Zip/Code</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-zipcode-customer\"\n                                        type=\"input\"\n                                        value={values.zipcode}\n                                        name=\"zipcode\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Address2\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.zipcode && errors.zipcode && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-zipcode-customer\">\n                                            {errors.zipcode}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n                                <FormControl\n                                    fullWidth\n                                    error={Boolean(touched.phone && errors.phone)}\n                                    sx={{ ...theme.typography.customInput }}\n                                >\n                                    <InputLabel htmlFor=\"outlined-adornment-phone-customer\">Phone Number</InputLabel>\n                                    <OutlinedInput\n                                        id=\"outlined-adornment-phone-customer\"\n                                        type=\"input\"\n                                        value={values.phone}\n                                        name=\"phone\"\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        label=\"Phone Number\"\n                                        inputProps={{}}\n                                    />\n                                    {touched.phone && errors.phone && (\n                                        <FormHelperText error id=\"standard-weight-helper-text-phone-customer\">\n                                            {errors.phone}\n                                        </FormHelperText>\n                                    )}\n                                </FormControl>\n\n                                <Typography variant=\"h4\" >\n                                    Email Verified\n                                </Typography>\n                                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                                    <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                        Disabling this will automatically send the user a verification email </Typography>\n                                    <Switch inputProps={{ 'aria-label': 'Switch demo' }} />\n                                </Stack>\n                                {/* <Typography variant=\"h4\" >\n                                Make Contact Info Public\n                            </Typography>\n                            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                                <Typography variant=\"subtitle1\" color=\"secondary\" sx={{ textDecoration: 'none', cursor: 'pointer' }}>\n                                    Means that anyone viewing your profile will be able to see your contacts details\n                                </Typography>\n                                <Switch inputProps={{ 'aria-label': 'Switch demo' }} defaultChecked />\n                            </Stack> */}\n\n                                {errors.submit && (\n                                    <Box sx={{ mt: 3 }}>\n                                        <FormHelperText error>{errors.submit}</FormHelperText>\n                                    </Box>\n                                )}\n\n                                <Box sx={{ mt: 2 }}>\n                                    <AnimateButton>\n                                        <Button\n                                            disableElevation\n                                            disabled={isSubmitting}\n                                            fullWidth\n                                            size=\"large\"\n                                            type=\"submit\"\n                                            variant=\"contained\"\n                                        // color=\"secondary\"\n                                        >\n                                            Create\n                                        </Button>\n                                    </AnimateButton>\n                                </Box>\n                            </Stack>\n                        </form>\n                    )}\n                </Formik>\n            </MainCard>\n        </PageContainer>\n    );\n};\n\nexport default CustomerAdd;\n"],"names":["AnimateButton","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps","scripted","useRef","useEffect","current","NaviScrollToTop","pathname","useLocation","window","scrollTo","top","left","behavior","propTypes","PropTypes","props","isMenuOpen","useMenu","sx","others","Box","mt","px","theme","useTheme","navigate","useNavigate","title","subtitle","breadcrumbs","back","control","action","rest","variant","elevation","padding","spacing","marginBottom","container","justifyContent","alignItems","item","map","breadcrumb","index","underline","color","name","arrow","placement","component","onClick","history","p","mr","gutterBottom","fontWeight","startIcon","fontSize","route","label","scriptedRef","useScriptRef","initialValues","fullname","email","country","state","address","zipcode","phone","public","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","fullWidth","Boolean","typography","customInput","htmlFor","id","value","onBlur","onChange","inputProps","textDecoration","cursor","disableElevation","disabled","size"],"sourceRoot":""}