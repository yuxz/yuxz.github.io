{"version":3,"file":"static/js/4357.1a719033.chunk.js","mappings":"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","sources":["components/code/index.js","layouts/NaviScrollToTop.js","layouts/PageContainer.js","layouts/PageHeader.js","components/table/DataTable.js","pages/components/Tables.js"],"sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react';\n// import SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import rainbow from 'react-syntax-highlighter/dist/styles/rainbow';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n// import javascript from 'react-syntax-highlighter/dist/esm/languages/prism/javascript';\n// import jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { debounce } from 'lodash';\nimport { Box, IconButton, Stack, useTheme } from '@mui/material';\nimport { Code, ContentCopy } from '@mui/icons-material';\nimport { blueGrey } from '@mui/material/colors';\n\n// SyntaxHighlighter.registerLanguage('javascript', javascript);\n// SyntaxHighlighter.registerLanguage('jsx', jsx);\n// const CodeContainer = forwardRef((props, ref) => {\n//     const { codeString, node, onKeyup } = props;\n//     const theme = useTheme();\n//     // console.log(\"cprops>>>> \", cprops)\n//     const handleCopyCode = () => {\n//         navigator.clipboard.writeText(node.current.innerText);\n//     };\n//     const [codeContainerOpen, setCodeContainerOpen] = useState(false);\n//     const handleCodeContainerOpen = () => {\n//         setCodeContainerOpen(!codeContainerOpen);\n//     }\n\n//     const MemoHighlighter = memo((codeString) => (<SyntaxHighlighter\n//         language=\"jsx\"\n//         style={dark}\n//         customStyle={{\n//             width: '100%',\n//             margin: 0,\n//             backgroundColor: blueGrey[900],\n//             border: '1px solid',\n//             borderColor: theme.palette.grey[800],\n//             borderRadius: `${theme.shape.borderRadius}px`,\n//             boxShadow: 0,\n\n//         }}\n//         wrapLongLines\n//         wrapLines={true}\n//     >\n//         {codeString}\n//     </SyntaxHighlighter>))\n//     return (<>\n//         <Stack direction={'row'} justifyContent={'flex-end'} spacing={2}>\n//             <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\" onClick={handleCodeContainerOpen}>\n//                 <Code />\n//             </IconButton>\n//             <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\" onClick={handleCopyCode}>\n//                 <ContentCopy />\n//             </IconButton>\n//         </Stack>\n//         <Box ref={ref} onKeyUp={onKeyup} sx={{\n//             display: codeContainerOpen ? 'block' : 'none',\n//             border: '1px solid',\n//             boxShadow: 0,\n//             margin: 10,\n//             borderColor: theme.palette.grey[600],\n//         }}>\n//             <MemoHighlighter codeString={codeString} />\n//         </Box>\n//     </>)\n// })\n// https://github.com/conorhastings/react-component-demo\nexport const ComponentCodeInteract = (props) => {\n  const theme = useTheme();\n  const { Component, name, componentProps } = props;\n  const [cprops, setCprops] = useState(componentProps);\n  const node = useRef(null);\n  const codeString = `${Object.keys(cprops).reduce(\n    (codeString, prop) =>\n      codeString + `\\n  ${prop}={${JSON.stringify(cprops[prop])}}`,\n    `<${name}`\n  )}\n        \\n/>`;\n\n  const onKeyup = debounce(() => {\n    const props = node.current.innerText.split('\\n');\n    const updatedProps = props\n      .slice(1, props.length - 1)\n      .reduce((props, prop) => {\n        let [key, value] = prop.trim().split('=');\n        try {\n          value = JSON.parse(value.substr(1, value.length - 2));\n          props[key] = value;\n        } catch (e) {\n          //ignore\n        }\n        return props;\n      }, {});\n    setCprops(updatedProps);\n  }, 1000);\n\n  useEffect(() => {\n    node.current.setAttribute('contentEditable', true);\n    node.current.addEventListener('keydown', (e) => {\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        e.stopPropagation();\n        return;\n      }\n    });\n    node.current.addEventListener('keyup', onKeyup);\n    // eslint-disable-next-line\n  }, []);\n\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(node.current.innerText);\n  };\n  const [codeContainerOpen, setCodeContainerOpen] = useState(false);\n  const handleCodeContainerOpen = () => {\n    setCodeContainerOpen(!codeContainerOpen);\n  };\n  const MemoHighlighter = memo(\n    () => (\n      <SyntaxHighlighter\n        language=\"jsx\"\n        style={dark}\n        customStyle={{\n          width: '100%',\n          margin: 0,\n          backgroundColor: blueGrey[900],\n          border: '1px solid',\n          borderColor: theme.palette.grey[800],\n          borderRadius: 0,\n          boxShadow: 0\n        }}\n        wrapLongLines\n        wrapLines={true}\n      >\n        {codeString}\n      </SyntaxHighlighter>\n    ),\n    []\n  );\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Component {...cprops} />\n      {/* <CodeContainer codeString={codeString} onKeyup={onKeyup} ref={node} /> */}\n      <Stack direction={'row'} justifyContent={'flex-end'} spacing={2}>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"upload picture\"\n          component=\"label\"\n          onClick={handleCodeContainerOpen}\n        >\n          <Code />\n        </IconButton>\n        <IconButton\n          color=\"primary\"\n          aria-label=\"upload picture\"\n          component=\"label\"\n          onClick={handleCopyCode}\n        >\n          <ContentCopy />\n        </IconButton>\n      </Stack>\n      <Box\n        ref={node}\n        onKeyUp={onKeyup}\n        sx={{\n          display: codeContainerOpen ? 'block' : 'none',\n          border: '1px solid',\n          boxShadow: 0,\n          margin: 0,\n          borderColor: theme.palette.grey[600]\n        }}\n      >\n        <MemoHighlighter />\n      </Box>\n    </Box>\n  );\n};\n\nexport default ComponentCodeInteract;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\n// --------------------------------------------------------------------------------\n\nconst NaviScrollToTop = ({ children }) => {\n  const location = useLocation();\n  const { pathname } = location;\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }, [pathname]);\n\n  return children || null;\n};\n\nNaviScrollToTop.propTypes = {\n  children: PropTypes.node\n};\n\nexport default NaviScrollToTop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { Box } from '@mui/material';\n// assets\n// project\nimport NaviScrollToTop from './NaviScrollToTop';\n\nconst PageContainer = (props) => {\n  const { sx, children, ...others } = props;\n  return (\n    <NaviScrollToTop>\n      {/* <Breadcrumbs separator={IconChevronRight} navigation={navigation} icon title rightAlign /> */}\n      <Box\n        sx={{\n          minHeight: 'calc(100vh - 80px)',\n          mt: { xs: 0.5, sm: 2 },\n          px: { xs: 0, sm: 1, md: 2 },\n          ...sx\n        }}\n        {...others}\n      >\n        {children}\n      </Box>\n    </NaviScrollToTop>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  sx: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])\n    ),\n    PropTypes.func,\n    PropTypes.object\n  ])\n};\nexport default PageContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// @mui\nimport { AddTwoTone, ArrowBack } from '@mui/icons-material';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  IconButton,\n  Link,\n  Paper,\n  Stack,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { useTheme } from '@emotion/react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PageHeader = (props) => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { title, subtitle, breadcrumbs, back, control, action, ...rest } =\n    props;\n  return (\n    <Paper\n      variant=\"outlined\"\n      // elevation={0}\n      sx={{\n        padding: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n        // boxShadow:\n        //     theme.palette.mode === 'dark'\n        //         ? `0 1px 0   ${theme.palette.grey[200]}, 0px 2px 4px -3px rgba(0, 0, 0, 0.2), 0px 5px 12px -4px rgba(0, 0, 0, .1)`\n        //         : `0px 2px 4px -3px ${theme.palette.grey[300]}, 0px 4px 8px -5px  ${theme.palette.grey[200]}`\n      }}\n    >\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...rest}\n      >\n        <Grid item>\n          {breadcrumbs && (\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              {breadcrumbs.map((breadcrumb, index) => (\n                <Link\n                  key={index}\n                  underline=\"hover\"\n                  color=\"inherit\"\n                  pathname={breadcrumb.pathname}\n                >\n                  {breadcrumb.name}\n                </Link>\n              ))}\n            </Breadcrumbs>\n          )}\n          <Stack\n            direction=\"row\"\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n          >\n            {back && (\n              <Tooltip arrow placement=\"top\" title=\"Go back\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"Back\"\n                  component=\"label\"\n                  onClick={() => window.history.back()}\n                  sx={{ p: 2, mr: 2 }}\n                >\n                  <ArrowBack />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Stack spacing={1}>\n              <Typography\n                variant=\"h3\"\n                component=\"h3\"\n                gutterBottom\n                sx={{ fontWeight: 600 }}\n              >\n                {title}\n              </Typography>\n              {subtitle && (\n                <Typography variant=\"subtitle2\">{subtitle}</Typography>\n              )}\n            </Stack>\n          </Stack>\n        </Grid>\n        <Grid item>\n          {action}\n          {control && (\n            <Button\n              variant=\"contained\"\n              startIcon={<AddTwoTone fontSize=\"small\" />}\n              onClick={() => navigate(control.route)}\n            >\n              {control.label}\n            </Button>\n          )}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nPageHeader.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  breadcrumbs: PropTypes.array,\n  back: PropTypes.bool,\n  control: PropTypes.object,\n  action: PropTypes.node\n};\n\nexport default PageHeader;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { visuallyHidden } from '@mui/utils';\nimport { NativeSelect, Pagination, Stack } from '@mui/material';\nimport FormControl from '@mui/material/FormControl';\n//third-party\nimport { ceil } from 'lodash';\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\n// Since 2020 all major browsers ensure sort stability with Array.prototype.sort().\n// stableSort() brings sort stability to non-modern browsers (notably IE11). If you\n// only support modern browsers you can replace stableSort(exampleArray, exampleComparator)\n// with exampleArray.slice().sort(exampleComparator)\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nfunction DataTableHead(props) {\n  const { columns } = props;\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            color=\"primary\"\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{\n              'aria-label': 'select all desserts'\n            }}\n          />\n        </TableCell>\n        {columns?.map((column) => (\n          <TableCell\n            key={column.id}\n            align={column.numeric ? 'right' : 'left'}\n            padding={column.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === column.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === column.id}\n              direction={orderBy === column.id ? order : 'asc'}\n              onClick={createSortHandler(column.id)}\n            >\n              {column.label}\n              {orderBy === column.id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nDataTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nfunction DataTableToolbar(props) {\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      sx={{\n        pl: { sm: 2 },\n        pr: { xs: 1, sm: 1 },\n        ...(numSelected > 0 && {\n          bgcolor: (theme) =>\n            alpha(\n              theme.palette.primary.main,\n              theme.palette.action.activatedOpacity\n            )\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Stack direction={'row'} alignItems={'center'}>\n          <Typography\n            sx={{ flex: '1 1 100%' }}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n            component=\"div\"\n          >\n            {numSelected} selected\n          </Typography>\n          <Tooltip title=\"Delete\">\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      ) : undefined}\n    </Toolbar>\n  );\n}\n\nDataTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nexport default function DataTable(props) {\n  const { columns, rows, pagination } = props;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = rows.map((n) => n.name);\n      setSelected(newSelected);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage - 1);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Paper sx={{ width: '100%', mb: 2 }}>\n        <DataTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\">\n            <DataTableHead\n              columns={columns}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          color=\"primary\"\n                          checked={isItemSelected}\n                          inputProps={{\n                            'aria-labelledby': labelId\n                          }}\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Stack\n          direction={'row'}\n          justifyContent={'center'}\n          alignItems=\"center\"\n          spacing={3}\n          sx={{ mt: 2, p: 2 }}\n        >\n          <Typography variant=\"body1\">Rows per page</Typography>\n          <FormControl>\n            {/* <InputLabel id=\"demo-simple-select-label\">Rows per page</InputLabel> */}\n            <NativeSelect\n              defaultValue={rowsPerPage}\n              inputProps={{\n                name: 'age',\n                id: 'uncontrolled-native'\n              }}\n              onChange={handleRowsPerPageChange}\n            >\n              {pagination.rowsPerPage?.map((rpp, index) => (\n                // <MenuItem key={index} value={rpp}>{rpp}</MenuItem>\n                <option key={index} value={rpp}>\n                  {rpp}\n                </option>\n              ))}\n            </NativeSelect>\n          </FormControl>\n          <Box sx={{ flexGrow: 1 }} />\n          <Typography variant=\"body1\">{`${page * rowsPerPage + 1} to ${page * rowsPerPage + rowsPerPage > rows.length\n              ? rows.length\n              : page * rowsPerPage + rowsPerPage\n            } of ${rows.length}`}</Typography>\n          <Pagination\n            count={ceil(rows.length / rowsPerPage)}\n            // page={page}\n            // defaultPage={1}\n            onChange={handleChangePage}\n            color={pagination?.color || 'primary'}\n            size={pagination?.size || 'medium'}\n          // showFirstButton\n          // showLastButton\n          />\n        </Stack>\n      </Paper>\n    </Box>\n  );\n}\n","import React from 'react';\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeader from 'layouts/PageHeader';\nimport MainCard from 'components/cards/MainCard';\n/*\nid: faker.datatype.uuid(),\n  name: faker.commerce.product(),\n  displayName: faker.commerce.productName(),\n  category: sample(CATEGORY),\n  description: faker.commerce.productDescription(),\n  media: faker.image.sports(),\n  description: faker.commerce.productDescription(),\n\n  // price: faker.commerce.price(),\n  price: faker.datatype.number({ min: 4, max: 99, precision: 0.01 }),\n  priceSale: index % 3 ? null : faker.datatype.number({ min: 19, max: 29, precision: 0.01 }),\n  colors: sampleSize(COLORS, 3),\n\n  productStatus: sample(PRODUCT_STATUS),\n  status: sample(STATUS),\n  limits: sample(['Members Only', '', '']),\n  // status: sample(['draft', 'published' ]),\n  createdAt: faker.date.past(),\n  stocks: [...Array(Math.round(Math.random() * 10) + 1)].map((_, index) => (\n    {\n      id: faker.datatype.uuid(),\n      name: faker.commerce.productName(),\n      avatarUrl: faker.image.sports(),\n      sku: faker.finance.bic(),\n      stock: faker.finance.amount(2, 10, 0),\n      price: faker.datatype.number({ min: 4, max: 99, precision: 0.01 }),\n    }\n  )),\n*/\nimport { DataTable } from 'components/table';\nimport ComponentCodeInteract from 'components/code';\n// function createData(name, calories, fat, carbs, protein) {\n//   return {\n//     name,\n//     category,\n//     price,\n//     priceSale,\n//     status,\n//     stocks: [\n//       {\n//         id: '11091700',\n//         createdAt: '2020-01-05',\n//         stock: 3,\n//       },\n\n//     ],\n//   };\n// }\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    items: [\n      {\n        date: '2020-01-05',\n        customerId: '11091700',\n        price: 5.0,\n        amount: 3\n      },\n      {\n        date: '2020-01-02',\n        customerId: 'Anonymous',\n        price: 5.2,\n        amount: 1\n      }\n    ]\n  };\n}\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 25.0),\n  createData('Donut', 452, 25.0, 51, 4.9, 25.0),\n  createData('Eclair', 262, 16.0, 24, 6.0, 25.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 25.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 25.0),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 25.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 25.0),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 25.0),\n  createData('KitKat', 518, 26.0, 65, 7.0, 25.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 25.0),\n  createData('Marshmallow', 318, 0, 81, 2.0, 25.0),\n  createData('Nougat', 360, 19.0, 9, 37.0, 25.0),\n  createData('Oreo', 437, 18.0, 63, 4.0, 25.0)\n];\n\nconst headCells = [\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: true,\n    label: 'Name'\n  },\n  {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Price'\n  },\n  {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Sale Price'\n  },\n  {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Stock'\n  },\n  {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Actual'\n  },\n  {\n    id: 'action',\n    numeric: true,\n    disablePadding: false,\n    label: 'Actions'\n  }\n];\n\nexport default function Tables() {\n  // const theme = useTheme();\n  return (\n    <PageContainer>\n      <PageHeader\n        title=\"Tables\"\n        subtitle=\"Tables display sets of data. They can be fully customized.\"\n      />\n      <MainCard title=\"Data Table\">\n        <ComponentCodeInteract\n          Component={DataTable}\n          name=\"DataTable\"\n          componentProps={{\n            title: '',\n            columns: headCells,\n            rows: rows,\n            isSorted: true,\n            canSearch: true,\n            pagination: {\n              varient: '',\n              color: 'success',\n              showTotalEntries: true,\n              defaultValue: 8,\n              rowsPerPage: [5, 10, 15, 20, 25]\n            }\n          }}\n          codeContainerStyle={{}}\n        />\n\n        {/* \n        {/* <DataTable title=\"\"\n          columns={headCells}\n          rows={rows}\n          isSorted\n          canSearch\n          pagination={{\n            varient: '',\n            color: 'success',\n            showTotalEntries: true,\n            defaultValue: 8,\n            rowsPerPage: [5, 10, 15, 20, 25]\n          }\n          } /> */}\n\n        {/* <Typography variant='h4'>Sorting & Selecting Table</Typography> */}\n\n        {/* <CustomizedTableWithToolbar title=\"\" headCells={headCells} rows={rows} dense /> */}\n\n        {/* <Typography variant='h4'>Collapsible Table</Typography> */}\n        {/* <CustomizedTableWithCollapse title=\"\" headCells={headCells} rows={rows} dense /> */}\n      </MainCard>\n    </PageContainer>\n  );\n}\n"],"names":["props","theme","useTheme","Component","name","componentProps","useState","cprops","setCprops","node","useRef","codeString","Object","keys","reduce","prop","JSON","stringify","onKeyup","debounce","current","innerText","split","updatedProps","slice","length","trim","key","value","parse","substr","e","useEffect","setAttribute","addEventListener","keyCode","preventDefault","stopPropagation","codeContainerOpen","setCodeContainerOpen","MemoHighlighter","memo","language","style","dark","customStyle","width","margin","backgroundColor","blueGrey","border","borderColor","palette","grey","borderRadius","boxShadow","wrapLongLines","wrapLines","sx","display","flexDirection","direction","justifyContent","spacing","color","component","onClick","navigator","clipboard","writeText","ref","onKeyUp","NaviScrollToTop","children","pathname","useLocation","window","scrollTo","top","left","behavior","propTypes","PropTypes","others","Box","minHeight","mt","xs","sm","px","md","navigate","useNavigate","title","subtitle","breadcrumbs","back","control","action","rest","variant","padding","marginBottom","container","alignItems","item","map","breadcrumb","index","underline","arrow","placement","history","p","mr","gutterBottom","fontWeight","startIcon","fontSize","route","label","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","DataTableHead","columns","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","onChange","inputProps","column","align","numeric","disablePadding","sortDirection","id","TableSortLabel","active","property","event","visuallyHidden","DataTableToolbar","Toolbar","pl","pr","bgcolor","alpha","primary","main","activatedOpacity","Stack","Typography","flex","Tooltip","IconButton","Delete","undefined","DataTable","rows","pagination","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","max","Paper","mb","TableContainer","Table","minWidth","target","newSelected","n","TableBody","row","isItemSelected","indexOf","labelId","hover","selectedIndex","concat","handleClick","role","tabIndex","scope","calories","fat","carbs","protein","colSpan","FormControl","NativeSelect","defaultValue","rpp","flexGrow","Pagination","count","ceil","newPage","size","createData","price","items","date","customerId","amount","headCells","Tables","PageContainer","PageHeader","MainCard","isSorted","canSearch","varient","showTotalEntries","codeContainerStyle"],"sourceRoot":""}