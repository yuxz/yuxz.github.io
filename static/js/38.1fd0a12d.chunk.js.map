{"version":3,"file":"static/js/38.1fd0a12d.chunk.js","mappings":"2PAYMA,EAAY,SAACC,GACf,IAAMC,GAAQC,EAAAA,EAAAA,KACNC,EAA6BH,EAA7BG,SAAUC,EAAmBJ,EAAnBI,WAAYC,EAAOL,EAAPK,GAC9B,OAEI,UAAC,IAAG,CAACA,IAAE,gBACHC,QAAS,OACTC,oBAAqB,iBACrBC,aAAc,MACdC,WAAY,SACZC,MAAO,IACPC,OAAQ,GACRC,EAAG,EACHC,QAAgC,SAAvBZ,EAAMa,QAAQC,KAAkB,WAAa,WACtDC,MAAOf,EAAMa,QAAQG,KAAKC,QAC1BC,aAAc,GACXf,GACAC,GACL,WACE,SAAC,IAAU,CAACe,QAAQ,UAAUf,GAAI,CAAEgB,WAAY,MAAOC,QAAS,SAAU,SAAC,SAC3E,SAAC,IAAU,CAACF,QAAQ,UAAUf,GAAI,CAAEgB,WAAY,MAAOC,QAAS,SAAU,SAAEnB,KAC5E,UAAC,IAAU,CAACiB,QAAQ,UAAUf,GAAI,CAAEgB,WAAY,MAAOC,QAAS,SAAU,UACrElB,EAAWmB,SAAS,IAAE,MACtBnB,EAAWoB,gBAI5B,EA0DA,UA5CqB,WACjB,IAAMvB,GAAQC,EAAAA,EAAAA,KACRuB,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1CC,EAAY,CAAC,YAAa,YAAa,QAAS,QAAS,UAAW,YAC1E,OACI,UAAC,IAAa,YACV,SAAC,IAAW,CAACC,MAAM,gBAenB,UAAC,IAAK,CAACC,UAAW,MAAOC,eAAgB,eAAgBC,QAAS,EAAGC,GAAI,EAAE,WACvE,SAAC,IAAK,CAACD,QAAS,EAAE,UAEVE,EAAAA,EAAAA,MAAK/B,EAAMgC,YAAYC,KAAI,SAACC,EAAMC,GAAK,OACnCC,EAAAA,EAAAA,UAASZ,EAAUU,KACnB,SAACpC,EAAS,CAACI,SAAUgC,EAAM/B,WAAYH,EAAMgC,WAAWE,IAAS,OAK7E,SAAC,IAAK,CAACL,QAAS,EAAGC,GAAI,EAAE,UAEjBC,EAAAA,EAAAA,MAAK/B,EAAMgC,YAAYC,KAAI,SAACC,EAAMC,GAAK,OACnCC,EAAAA,EAAAA,UAASX,EAAWS,KACpB,SAACpC,EAAS,CAACI,SAAUgC,EAAM/B,WAAYH,EAAMgC,WAAWE,IAAS,WAO7F,C","sources":["pages/utilities/Typography.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// @mui\nimport { Box, Stack, Typography, useTheme } from '@mui/material';\n\n// third-party\nimport { keys, includes } from 'lodash';\n\n// project\nimport PageContainer from 'layouts/PageContainer';\nimport PageHeading from '../../layouts/PageHeading';\n\nconst TypoBlock = (props) => {\n    const theme = useTheme();\n    const { typoName, typoObject, sx } = props\n    return (\n\n        <Box sx={{\n            display: 'grid',\n            gridTemplateColumns: \"repeat(7, 1fr)\",\n            gridAutoFlow: \"row\",\n            alignItems: 'center',\n            width: 500,\n            height: 52,\n            p: 1,\n            bgcolor: theme.palette.mode === 'dark' ? 'grey.600' : 'grey.300',\n            color: theme.palette.text.default,\n            borderRadius: 1,\n            ...typoObject,\n            ...sx\n        }}>\n            <Typography variant='inherit' sx={{ gridColumn: \"1/2\", gridRow: \"1 / 2\" }}>ABC</Typography>\n            <Typography variant='inherit' sx={{ gridColumn: \"2/3\", gridRow: \"1 / 2\" }}>{typoName}</Typography>\n            <Typography variant='inherit' sx={{ gridColumn: \"4/8\", gridRow: \"1 / 2\" }}>\n                {typoObject.fontSize} {' / '}\n                {typoObject.fontWeight}\n            </Typography>\n        </Box>\n    )\n}\n\nTypoBlock.propTypes = {\n    typoName: PropTypes.string,\n    typoObject: PropTypes.object,\n    sx: PropTypes.oneOfType([\n        PropTypes.arrayOf(\n            PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool]),\n        ),\n        PropTypes.func,\n        PropTypes.object,\n    ]),\n};\n\nconst UITypography = () => {\n    const theme = useTheme();\n    const mainTypo = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n    const otherTypo = ['subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'overline']\n    return (\n        <PageContainer>\n            <PageHeading title=\"Typography\" />\n            {/* <p>\n                `\n                h1 h2 h3  Heading text\n                h4        Page Headings\n                h5        Section headings\n                h6        Card Headings\n                Body1     Components and section headings\n                body2     Heavily used in most components\n                Subtitle1 Components\n                Subtitle2 Labels\n                Caption   Helper text\n                Overline  Subtitles\n                `\n            </p> */}\n            <Stack direction={'row'} justifyContent={'space-around'} spacing={3} mt={5} >\n                <Stack spacing={2}>\n                    {\n                        keys(theme.typography).map((typo, index) => (\n                            includes(mainTypo, typo) &&\n                            <TypoBlock typoName={typo} typoObject={theme.typography[typo]} />\n\n                        ))\n                    }\n                </Stack>\n                <Stack spacing={2} mt={5}>\n                    {\n                        keys(theme.typography).map((typo, index) => (\n                            includes(otherTypo, typo) &&\n                            <TypoBlock typoName={typo} typoObject={theme.typography[typo]} />\n                        ))\n                    }\n                </Stack>\n            </Stack>\n        </PageContainer>\n    )\n};\n\nexport default UITypography;\n"],"names":["TypoBlock","props","theme","useTheme","typoName","typoObject","sx","display","gridTemplateColumns","gridAutoFlow","alignItems","width","height","p","bgcolor","palette","mode","color","text","default","borderRadius","variant","gridColumn","gridRow","fontSize","fontWeight","mainTypo","otherTypo","title","direction","justifyContent","spacing","mt","keys","typography","map","typo","index","includes"],"sourceRoot":""}